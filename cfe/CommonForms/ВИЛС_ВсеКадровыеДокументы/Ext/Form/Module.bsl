
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформлениеСписка();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Параметры.Свойство("СотрудникСсылка", СотрудникСсылка);
	
	Если ЗначениеЗаполнено(СотрудникСсылка) Тогда
		
		КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, СотрудникСсылка, "ГоловнаяОрганизация,ФизическоеЛицо,ТекущаяОрганизация");
		Если КадровыеДанныеСотрудников.Количество() > 0 Тогда
			
			ДанныеСотрудника = КадровыеДанныеСотрудников[0];
			
			Организация = ДанныеСотрудника.ТекущаяОрганизация;
			
			//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			//	Список, "ГоловнаяОрганизация", ДанныеСотрудника.ГоловнаяОрганизация);
			
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ФизическоеЛицо", ДанныеСотрудника.ФизическоеЛицо, Истина);
			//УстановитьТипыОбъектовОповещения();
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"Сотрудник",
				"Видимость",
				Ложь);
			
			Если Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеСотрудника.ГоловнаяОрганизация, "ЕстьОбособленныеПодразделения") Тогда
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"Организация",
					"Видимость",
					Ложь);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		СтруктураПараметровОтбора = Новый Структура();
		ЗарплатаКадры.ДобавитьПараметрОтбора(СтруктураПараметровОтбора, "ФизическоеЛицо",
			Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru = 'Сотрудник';
																		|en = 'Employee'"));
		ЗарплатаКадры.ДобавитьПараметрОтбора(СтруктураПараметровОтбора, "Подразделение",
			Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"), НСтр("ru = 'Подразделение';
																					|en = 'Department'"));
		
		ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список",,
			СтруктураПараметровОтбора, "СписокКритерииОтбора");
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаУтвердить", "Видимость", Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная, ДобавлениеИзменениеНачисленнойЗарплатыРасширенная"));
			
	ЗарплатаКадрыРасширенный.СформироватьПодменюСоздатьФормыСпискаДокументов(ЭтаФорма, "ЖурналДокументов.КадровыеДокументы");
	//Добавляем свои команды
	
	ТемпСоответствие = Новый Соответствие(КомандыСозданияДокументов);
	
	ИмяКоманды = "СоздатьДокумент40";
	ОписаниеКоманды = Новый Структура("ИмяФормы,ПолноеИмя,Порядок,Представление,Параметры","ФормаОбъекта","Документ.ТабельУчетаРабочегоВремени","Табель","Табель");
	
	// Добавляем команду
	НоваяКоманда = Команды.Добавить(ИмяКоманды);
	НоваяКоманда.Заголовок	= ОписаниеКоманды.Представление;
	
	НоваяКоманда.Действие	= "Подключаемый_СоздатьДокумент";
	
	// Добавляем кнопку
	Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы.ПодменюСоздать); 
	Кнопка.ИмяКоманды	= НоваяКоманда.Имя;
	ТемпСоответствие.Вставить(ИмяКоманды,ОписаниеКоманды);
	
	ИмяКоманды = "СоздатьДокумент41";
	ОписаниеКоманды = Новый Структура("ИмяФормы,ПолноеИмя,Порядок,Представление,Параметры","ФормаОбъекта","Документ.ИндивидуальныйГрафик","Индивидуальный график","Индивидуальный график");
	
	
	
	// Добавляем команду
	НоваяКоманда = Команды.Добавить(ИмяКоманды);
	НоваяКоманда.Заголовок	= ОписаниеКоманды.Представление;
	
	НоваяКоманда.Действие	= "Подключаемый_СоздатьДокумент";
	ТемпСоответствие.Вставить(ИмяКоманды,ОписаниеКоманды);
	
	КомандыСозданияДокументов = Новый ФиксированноеСоответствие(ТемпСоответствие);
	
	// Добавляем кнопку
	Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы.ПодменюСоздать); 
	Кнопка.ИмяКоманды	= НоваяКоманда.Имя;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	//ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ШтрихкодыБольничныхЛистов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ШтрихкодыБольничныхЛистов");
		Модуль.НастроитьСканерШтрихкода(ЭтаФорма);
	КонецЕсли;
	
	
	
	ШаблонДокумента = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Дата КАК Дата,
	|	Документ.Номер КАК Номер,
	|	&РеквизитДатаСобытия КАК ДатаСобытия,
	|	Документ.Организация КАК Организация,
	|	Документ.Сотрудник КАК Сотрудник,
	|	ВЫРАЗИТЬ(Документ.Комментарий КАК СТРОКА(300)) КАК Комментарий,
	|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьФайлы,
	|	ВЫБОР
	|		КОГДА Документ.Ссылка.Проведен
	|			ТОГДА 14
	|		КОГДА Документ.Ссылка.ПометкаУдаления
	|			ТОГДА 13
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК СостояниеДокумента,
	|	ВЫБОР
	|		КОГДА НЕ Документ.ПометкаУдаления
	|				И НЕ &РеквизитУтвержден
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТребуетОбработки
	|ИЗ
	|	&Документ КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
	|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
	|ГДЕ
	|	Документ.Сотрудник = &Сотрудник";
	ШаблонСписка = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Ссылка.Дата КАК Дата,
	|	Документ.Ссылка.Номер КАК Номер,
	|	&РеквизитДатаСобытия КАК ДатаСобытия,
	|	Документ.Ссылка.Организация КАК Организация,
	|	Документ.Сотрудник КАК Сотрудник,
	|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)) КАК Комментарий,
	|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА Ложь
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА Истина
	|		ИНАЧЕ Ложь
	|	КОНЕЦ КАК ЕстьФайлы,
	|	ВЫБОР
	|		КОГДА Документ.Ссылка.Проведен 
	|			ТОГДА 14
	|		КОГДА Документ.Ссылка.ПометкаУдаления
	|			ТОГДА 13
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК СостояниеДокумента,
	|	ВЫБОР
	|		КОГДА НЕ Документ.Ссылка.ПометкаУдаления
	|				И НЕ &РеквизитУтвержден
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТребуетОбработки
	|ИЗ
	|	&Документ КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
	|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
	|ГДЕ
	|	Документ.Сотрудник = &Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ.Сотрудник,
	|	Документ.Ссылка,
	|	Документ.Ссылка.Дата,
	|   &РеквизитДатаСобытия,
	|	Документ.Ссылка.Организация,
	|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)),
	|	Документ.Ссылка.Номер,
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА Ложь
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА Истина
	|		ИНАЧЕ Ложь
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Документ.Ссылка.Проведен 
	|			ТОГДА 14
	|		КОГДА Документ.Ссылка.ПометкаУдаления
	|			ТОГДА 13
	|		ИНАЧЕ 12
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ Документ.Ссылка.ПометкаУдаления
	|				И НЕ &РеквизитУтвержден
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	ТекстОбъединения = Символы.ПС+" ОБЪЕДИНИТЬ ВСЕ "+Символы.ПС;
	
	РегистрируемыеДокументы = Метаданные.ЖурналыДокументов.КадровыеДокументы.РегистрируемыеДокументы;
	СоответствиеЗначенияГрафыДатаСобытияИДокумента = Новый Соответствие;
	СоответствиеЗначенияГрафыУтвержденИДокумента = Новый Соответствие;
	Графа = Метаданные.ЖурналыДокументов.КадровыеДокументы.Графы.ДатаСобытия.Ссылки;
	МассивТипов = Новый Массив;
	
	Для Каждого ЗначениеГрафы Из Графа Цикл
		
		ПолноеИмя = ЗначениеГрафы.ПолноеИмя();
		МассивПодстрок = СтрРазделить(ПолноеИмя,".");
		ИмяДокумента = ""+МассивПодстрок[0]+"."+МассивПодстрок[1];
		
		СоответствиеЗначенияГрафыДатаСобытияИДокумента.Вставить(ИмяДокумента,ЗначениеГрафы.Имя);
		
	КонецЦикла;
	
	
	Графа = Метаданные.ЖурналыДокументов.КадровыеДокументы.Графы.Утвержден.Ссылки;
	МассивТипов = Новый Массив;
	
	Для Каждого ЗначениеГрафы Из Графа Цикл
		
		ПолноеИмя = ЗначениеГрафы.ПолноеИмя();
		МассивПодстрок = СтрРазделить(ПолноеИмя,".");
		ИмяДокумента = ""+МассивПодстрок[0]+"."+МассивПодстрок[1];
		
		СоответствиеЗначенияГрафыУтвержденИДокумента.Вставить(ИмяДокумента,ЗначениеГрафы.Имя);
		
	КонецЦикла;
	
	ТекстЗапроса = "";
	Для Каждого ТипДокумента из РегистрируемыеДокументы Цикл 
		МассивТипов.Добавить(ТипДокумента);
		Имя = СтрЗаменить(ТипДокумента.ПолноеИмя(),"Документ.","");
		ПолноеИмя = ТипДокумента.ПолноеИмя();
		ДокументМД = Метаданные.Документы[Имя];
		СотрудникВТЧ = ДокументМД.Реквизиты.Найти("Сотрудник")=Неопределено;
		Если не СотрудникВТЧ Тогда
			ИмяДокументаДляЗапроса = ПолноеИмя;
			ИмяРеквизитаДатаСобытия = "Документ."+СоответствиеЗначенияГрафыДатаСобытияИДокумента.Получить(ПолноеИмя);
			ИмяРеквизитаУтвержден = ?(СоответствиеЗначенияГрафыУтвержденИДокумента.Получить(ПолноеИмя) = Неопределено,"ИСТИНА","Документ."+СоответствиеЗначенияГрафыУтвержденИДокумента.Получить(ПолноеИмя));
			ТекущийКусок = СтрЗаменить(ШаблонДокумента,"&РеквизитДатаСобытия",ИмяРеквизитаДатаСобытия);
			ТекущийКусок = СтрЗаменить(ТекущийКусок,"&РеквизитУтвержден",ИмяРеквизитаУтвержден);
			ТекущийКусок = СтрЗаменить(ТекущийКусок,"&Документ",ИмяДокументаДляЗапроса);
			ТекстЗапроса = ТекстЗапроса+ ТекущийКусок+ТекстОбъединения;
		Иначе
			ЕстьТЧСотрудники = не ДокументМД.ТабличныеЧасти.Найти("Сотрудники") = Неопределено;
			ЕстьТЧНачисления = не ДокументМД.ТабличныеЧасти.Найти("Начисления") = Неопределено;
			Если  ЕстьТЧСотрудники Тогда
				ИмяДокументаДляЗапроса = ПолноеИмя;
				ИмяРеквизитаДатаСобытия = "Документ.Ссылка."+СоответствиеЗначенияГрафыДатаСобытияИДокумента.Получить(ПолноеИмя);
				ИмяРеквизитаУтвержден = ?(СоответствиеЗначенияГрафыУтвержденИДокумента.Получить(ПолноеИмя) = Неопределено,"ИСТИНА","Документ.Ссылка."+СоответствиеЗначенияГрафыУтвержденИДокумента.Получить(ПолноеИмя));
				ТекущийКусок = СтрЗаменить(ШаблонСписка,"&РеквизитДатаСобытия",ИмяРеквизитаДатаСобытия);
				ТекущийКусок = СтрЗаменить(ТекущийКусок,"&РеквизитУтвержден",ИмяРеквизитаУтвержден);

				ТекущийКусок = СтрЗаменить(ТекущийКусок,"&Документ",ИмяДокументаДляЗапроса+".Сотрудники");
				ТекстЗапроса = ТекстЗапроса+ ТекущийКусок+ТекстОбъединения;
				
			Иначе
				Если  ПолноеИмя = "Документ.ОтменаСовмещения" Тогда
					ТекШаблон = 
					"ВЫБРАТЬ
					|	Документ.Ссылка КАК Ссылка,
					|	Документ.Дата КАК Дата,
					|	Документ.Номер КАК Номер,
					|	Документ.ДатаОтмены КАК ДатаСобытия,
					|	Документ.Организация КАК Организация,
					|	Документ.СовмещающийСотрудник КАК Сотрудник,
					|	ВЫРАЗИТЬ(Документ.Комментарий КАК СТРОКА(300)) КАК Комментарий,
					|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
					|	ВЫБОР
					|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
					|			ТОГДА Ложь
					|		КОГДА НаличиеФайлов.ЕстьФайлы
					|			ТОГДА Истина
					|		ИНАЧЕ Ложь
					|	КОНЕЦ КАК ЕстьФайлы,
					|	ВЫБОР
					|		КОГДА Документ.Ссылка.Проведен 
					|			ТОГДА 14
					|		КОГДА Документ.Ссылка.ПометкаУдаления
					|			ТОГДА 13
					|		ИНАЧЕ 12
					|	КОНЕЦ КАК СостояниеДокумента,
					|	ВЫБОР
					|		КОГДА НЕ Документ.ПометкаУдаления
					|				И НЕ Документ.ОтменаДоплатыУтверждена
					|			ТОГДА ИСТИНА
					|		ИНАЧЕ ЛОЖЬ
					|	КОНЕЦ КАК ТребуетОбработки
					|ИЗ
					|	&Документ КАК Документ
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
					|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
					|ГДЕ
					|	Документ.СовмещающийСотрудник = &Сотрудник";
					
					ИмяДокументаДляЗапроса = ПолноеИмя;
					//ИмяДокументаДляЗапроса = "Документ.СовмещающийСотрудник";
					ТекущийКусок = СтрЗаменить(ТекШаблон,"&Документ",ИмяДокументаДляЗапроса);
					ТекстЗапроса = ТекстЗапроса+ ТекущийКусок+ТекстОбъединения;	
				ИначеЕсли ПолноеИмя = "Документ.Совмещение" Тогда
					ТекШаблон = 
					"ВЫБРАТЬ
					|	Документ.Ссылка КАК Ссылка,
					|	Документ.Дата КАК Дата,
					|	Документ.Номер КАК Номер,
					|	Документ.ДатаНачала КАК ДатаСобытия,
					|	Документ.Организация КАК Организация,
					|	Документ.СовмещающийСотрудник КАК Сотрудник,
					|	ВЫРАЗИТЬ(Документ.Комментарий КАК СТРОКА(300)) КАК Комментарий,
					|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
					|	ВЫБОР
					|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
					|			ТОГДА Ложь
					|		КОГДА НаличиеФайлов.ЕстьФайлы
					|			ТОГДА Истина
					|		ИНАЧЕ Ложь
					|	КОНЕЦ КАК ЕстьФайлы,
					|	ВЫБОР
					|		КОГДА Документ.Ссылка.Проведен 
					|			ТОГДА 14
					|		КОГДА Документ.Ссылка.ПометкаУдаления
					|			ТОГДА 13
					|		ИНАЧЕ 12
					|	КОНЕЦ КАК СостояниеДокумента,
					|	ВЫБОР
					|		КОГДА НЕ Документ.ПометкаУдаления
					|				И НЕ Документ.РазмерДоплатыУтвержден
					|			ТОГДА ИСТИНА
					|		ИНАЧЕ ЛОЖЬ
					|	КОНЕЦ КАК ТребуетОбработки
					|ИЗ
					|	&Документ КАК Документ
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
					|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
					|ГДЕ
					|	Документ.СовмещающийСотрудник = &Сотрудник";
						
					ИмяДокументаДляЗапроса = ПолноеИмя;
					//ИмяРеквизитаДатаСобытия = "Документ.СовмещающийСотрудник";
					ТекущийКусок = СтрЗаменить(ТекШаблон,"&Документ",ИмяДокументаДляЗапроса);
					ТекстЗапроса = ТекстЗапроса+ ТекущийКусок+ТекстОбъединения;
				ИначеЕсли ПолноеИмя = "Документ.ПереводНаРаботуСКоронавирусом" Тогда
					ТекШаблон = 
					"ВЫБРАТЬ
					|	Документ.Ссылка КАК Ссылка,
					|	Документ.Ссылка.Дата КАК Дата,
					|	Документ.Ссылка.Номер КАК Номер,
					|	Документ.Ссылка.НачалоПериода КАК ДатаСобытия,
					|	Документ.Ссылка.Организация КАК Организация,
					|	Документ.Сотрудник КАК Сотрудник,
					|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)) КАК Комментарий,
					|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
					|	ВЫБОР
					|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
					|			ТОГДА Ложь
					|		КОГДА НаличиеФайлов.ЕстьФайлы
					|			ТОГДА Истина
					|		ИНАЧЕ Ложь
					|	КОНЕЦ КАК ЕстьФайлы,
					|	ВЫБОР
					|		КОГДА Документ.Ссылка.Проведен 
					|			ТОГДА 14
					|		КОГДА Документ.Ссылка.ПометкаУдаления
					|			ТОГДА 13
					|		ИНАЧЕ 12
					|	КОНЕЦ КАК СостояниеДокумента,
					|	ложь КАК ТребуетОбработки
					|ИЗ
					|	Документ.ПереводНаРаботуСКоронавирусом.Сотрудники КАК Документ
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
					|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
					|ГДЕ
					|	Документ.ФизическоеЛицо = &ФизическоеЛицо";
						
					ИмяДокументаДляЗапроса = ПолноеИмя;
					//ИмяРеквизитаДатаСобытия = "Документ.СовмещающийСотрудник";
					ТекущийКусок = СтрЗаменить(ТекШаблон,"&Документ",ИмяДокументаДляЗапроса);
					ТекстЗапроса = ТекстЗапроса+ ТекущийКусок+ТекстОбъединения;
				Иначе
						
					ИмяДокументаДляЗапроса = ПолноеИмя;
					ИмяРеквизитаДатаСобытия = "Документ.Ссылка."+СоответствиеЗначенияГрафыДатаСобытияИДокумента.Получить(ПолноеИмя);
					ИмяРеквизитаУтвержден = ?(СоответствиеЗначенияГрафыУтвержденИДокумента.Получить(ПолноеИмя) = Неопределено,"ИСТИНА","Документ.Ссылка."+СоответствиеЗначенияГрафыУтвержденИДокумента.Получить(ПолноеИмя));
					ТекущийКусок = СтрЗаменить(ШаблонСписка,"&РеквизитДатаСобытия",ИмяРеквизитаДатаСобытия);
					ТекущийКусок = СтрЗаменить(ТекущийКусок,"&РеквизитУтвержден",ИмяРеквизитаУтвержден);
					ТекущийКусок = СтрЗаменить(ТекущийКусок,"&Документ",ИмяДокументаДляЗапроса+".Начисления");
					ТекстЗапроса = ТекстЗапроса+ ТекущийКусок+ТекстОбъединения;
				КонецЕсли;
				ЕстьТЧФизическиеЛица = не ДокументМД.ТабличныеЧасти.Найти("ФизическиеЛица") = Неопределено;
				Если ЕстьТЧФизическиеЛица и ПолноеИмя = "Документ.ПереводНаРаботуСКоронавирусом" Тогда
					ТекШаблон = 
					"ВЫБРАТЬ
					|	Документ.Ссылка КАК Ссылка,
					|	Документ.Ссылка.Дата КАК Дата,
					|	Документ.Ссылка.Номер КАК Номер,
					|	Документ.Ссылка.НачалоПериода КАК ДатаСобытия,
					|	Документ.Ссылка.Организация КАК Организация,
					|	Документ.ФизическоеЛицо КАК Сотрудник,
					|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)) КАК Комментарий,
					|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
					|	ВЫБОР
					|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
					|			ТОГДА Ложь
					|		КОГДА НаличиеФайлов.ЕстьФайлы
					|			ТОГДА Истина
					|		ИНАЧЕ Ложь
					|	КОНЕЦ КАК ЕстьФайлы,
					|	ВЫБОР
					|		КОГДА Документ.Ссылка.Проведен 
					|			ТОГДА 14
					|		КОГДА Документ.Ссылка.ПометкаУдаления
					|			ТОГДА 13
					|		ИНАЧЕ 12
					|	КОНЕЦ КАК СостояниеДокумента,
					|	ложь КАК ТребуетОбработки
					|ИЗ
					|	Документ.ПереводНаРаботуСКоронавирусом.ФизическиеЛица КАК Документ
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
					|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
					|ГДЕ
					|	Документ.ФизическоеЛицо = &ФизическоеЛицо";
						
					ИмяДокументаДляЗапроса = ПолноеИмя;
					//ИмяРеквизитаДатаСобытия = "Документ.СовмещающийСотрудник";
					ТекущийКусок = СтрЗаменить(ТекШаблон,"&Документ",ИмяДокументаДляЗапроса);
					ТекстЗапроса = ТекстЗапроса+ ТекущийКусок+ТекстОбъединения;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса+Символы.ПС+
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Ссылка.Дата КАК Дата,
	|	Документ.Ссылка.Номер КАК Номер,
	|	Документ.Ссылка.Дата КАК ДатаСобытия,
	|	Документ.Ссылка.Организация КАК Организация,
	|	Документ.Сотрудник КАК Сотрудник,
	|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)) КАК Комментарий,
	|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА Ложь
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА Истина
	|		ИНАЧЕ Ложь
	|	КОНЕЦ КАК ЕстьФайлы,
	|	ВЫБОР
	|		КОГДА Документ.Ссылка.Проведен 
	|			ТОГДА 14
	|		КОГДА Документ.Ссылка.ПометкаУдаления
	|			ТОГДА 13
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК СостояниеДокумента,
	|	ЛОЖЬ КАК ТребуетОбработки
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремени.ДанныеОВремени КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
	|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
	|ГДЕ
	|	Документ.Сотрудник = &Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ.Сотрудник,
	|	Документ.Ссылка,
	|	Документ.Ссылка.Номер,
	|	Документ.Ссылка.Дата,
	|	Документ.Ссылка.Организация,
	|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)),
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА Ложь
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА Истина
	|		ИНАЧЕ Ложь
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Документ.Ссылка.Проведен 
	|			ТОГДА 14
	|		КОГДА Документ.Ссылка.ПометкаУдаления
	|			ТОГДА 13
	|		ИНАЧЕ 12
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Ссылка.Дата КАК Дата,
	|	Документ.Ссылка.Номер КАК Номер,
	|	Документ.Ссылка.Дата КАК ДатаСобытия,
	|	Документ.Ссылка.Организация КАК Организация,
	|	Документ.Сотрудник КАК Сотрудник,
	|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)) КАК Комментарий,
	|	ТИПЗНАЧЕНИЯ(Документ.Ссылка) КАК ТипДокумента,
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА Ложь
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА Истина
	|		ИНАЧЕ Ложь
	|	КОНЕЦ КАК ЕстьФайлы,
	|	ВЫБОР
	|		КОГДА Документ.Ссылка.Проведен 
	|			ТОГДА 14
	|		КОГДА Документ.Ссылка.ПометкаУдаления
	|			ТОГДА 13
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК СостояниеДокумента,
	|	ЛОЖЬ КАК ТребуетОбработки
	|ИЗ
	|	Документ.ИндивидуальныйГрафик.ДанныеОВремени КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
	|		ПО Документ.Ссылка = НаличиеФайлов.ОбъектСФайлами
	|ГДЕ
	|	Документ.Сотрудник = &Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ.Сотрудник,
	|	Документ.Ссылка,
	|	Документ.Ссылка.Номер,
	|	Документ.Ссылка.Дата,
	|	Документ.Ссылка.Организация,
	|	ВЫРАЗИТЬ(Документ.Ссылка.Комментарий КАК СТРОКА(300)),
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА Ложь
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА Истина
	|		ИНАЧЕ Ложь
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Документ.Ссылка.Проведен 
	|			ТОГДА 14
	|		КОГДА Документ.Ссылка.ПометкаУдаления
	|			ТОГДА 13
	|		ИНАЧЕ 12
	|	КОНЕЦ
	|;";
	//|УПОРЯДОЧИТЬ ПО
	//|	Дата";
	МассивТипов.Добавить(Метаданные.Документы.ИндивидуальныйГрафик);
	МассивТипов.Добавить(Метаданные.Документы.ТабельУчетаРабочегоВремени);
	Список.ТекстЗапроса = ТекстЗапроса;
	// begin fix Suetin 21.01.2021 15:39:35
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Сотрудник", ДанныеСотрудника.Сотрудник);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ФизическоеЛицо", ДанныеСотрудника.ФизическоеЛицо);
	//Список.Параметры.Элементы[0].Значение = СотрудникСсылка;
	//Список.Параметры.Элементы[0].Использование = Истина;
	//Список.Параметры.Элементы[1].Значение = СотрудникСсылка.ФизическоеЛицо;
	//Список.Параметры.Элементы[1].Использование = Истина;
	// end fix Suetin 21.01.2021 15:39:41
	Элементы["СписокДатаСобытия"].Заголовок = "Дата события";
	//Сообщить(ТекстЗапроса);

	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.Источники = МассивТипов;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,ВыбраннаяСтрока.Ссылка);
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_СоздатьДокумент(Команда)
	
	Если ЗначениеЗаполнено(СотрудникСсылка) Тогда
		
		ДополнительныеЗначенияЗаполнения = Новый Структура("Сотрудник", СотрудникСсылка);
		Если ЗначениеЗаполнено(Организация) Тогда
			ДополнительныеЗначенияЗаполнения.Вставить("Организация", Организация);
		КонецЕсли;
		
	Иначе
		ПараметрыОткрытия = Новый Структура;
		ЗарплатаКадрыКлиент.ДинамическийСписокПередНачаломДобавления(ЭтотОбъект, ПараметрыОткрытия, КомандыСозданияДокументов.Получить(Команда.Имя).ПолноеИмя);
		ДополнительныеЗначенияЗаполнения = ПараметрыОткрытия.ЗначенияЗаполнения;
	КонецЕсли; 
	
	ЗарплатаКадрыРасширенныйКлиент.СоздатьДокументПоОписанию(ЭтаФорма, Команда.Имя, ДополнительныеЗначенияЗаполнения);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьДоступностьКомандыУтвердитьВМногофункциональныхДокументах(ЭтотОбъект);
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
КонецПроцедуры


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()
	
	ЗарплатаКадрыРасширенный.УстановитьУсловноеОформлениеСпискаМногофункциональныхДокументов(ЭтотОбъект);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьБронированиеПозиций") Или Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформлениеКД = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	УсловноеОформлениеКД.ИдентификаторПользовательскойНастройки = "ОсновноеОформление";

	ТекущийШрифт = Элементы.Список.Шрифт;
	
	ЖирныйШрифт = Новый Шрифт(ТекущийШрифт,,,Истина);
	
	ЭлементОформления = УсловноеОформлениеКД.Элементы.Добавить();
	ЭлементОформления.Представление = НСтр("ru = 'Выделять бронирование.';
											|en = 'Highlight booking.'");
	
	ГруппаОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("БронированиеПозиции");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проведен");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("БронированиеПозиции");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", ЖирныйШрифт);
			
КонецПроцедуры

&НаСервере
Процедура УстановитьТипыОбъектовОповещения()
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТипыОбъектовОповещения", Новый ОписаниеТипов("СписокЗначений")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьКритерийОтбора", Новый ОписаниеТипов("Булево")));
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(ЭтотОбъект, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(ЭтотОбъект, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	ТипОбъекта = ТипЗнч(ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ЭтотОбъект.ИмяФормы));
	МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипОбъекта);
	Для Каждого РегистрируемыйДокумент Из МетаданныеОбъекта.РегистрируемыеДокументы Цикл
		ЭтотОбъект.ТипыОбъектовОповещения.Добавить(ТипЗнч(ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(РегистрируемыйДокумент.ПолноеИмя()).ПустаяСсылка()));
	КонецЦикла;
	ЭтотОбъект.ИспользоватьКритерийОтбора = Истина;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДинамическийСписокНаСервере(ОписаниеМодификации) Экспорт
	ЗарплатаКадрыРасширенный.НастроитьДинамическийСписокПоОписаниюМодификации(ЭтаФорма, ОписаниеМодификации);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПараметрМодификацииВыбор(Элемент, ИмяПараметра, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗарплатаКадрыРасширенныйКлиент.ПараметрМодификацииОбработкаНавигационнойСсылки(
		ЭтотОбъект, Элемент.Родитель.Имя, ИмяПараметра);
	
КонецПроцедуры



#КонецОбласти

&НаКлиенте
Процедура Утвердить(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(ТекущиеДанные.Ссылка);
	
	КоличествоСсылок = МассивСсылок.Количество();
	
	Если КоличествоСсылок = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта.';
										|en = 'Command cannot be executed for the specified object.'"));
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеЗавершения", Неопределено);
	ДополнительныеПараметры.Вставить("МассивСсылок", МассивСсылок);
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	
	
	ЗарплатаКадрыРасширенныйКлиент.УтвердитьВыделенныеМногофункциональныеДокументыЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		

	//ЗарплатаКадрыРасширенныйКлиент.УтвердитьВыделенныеМногофункциональныеДокументы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ШтрихкодыБольничныхЛистов") Тогда 
		Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("ШтрихкодыБольничныхЛистовКлиент");
		Модуль.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
КонецПроцедуры
