
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ВИЛС_ПриСозданииНаСервереВместо(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ЭтоРасчетыСКлиентами = Параметры.ЭтоРасчетыСКлиентами;
	
	Если Не ЭтоРасчетыСКлиентами Тогда
		Заголовок = НСтр("ru = 'Выбор документа расчетов с поставщиком';
						|en = 'Select a document for settlements with a supplier'");
		Элементы.ДанныеКонтрагента.Заголовок = НСтр("ru = 'Данные поставщика';
													|en = 'Supplier data'");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Партнер") Тогда
		
		Партнер = Параметры.Отбор.Партнер;
		
		СписокПартнеров = Новый СписокЗначений;
		ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(Партнер, СписокПартнеров);
		
		Параметры.Отбор.Партнер = СписокПартнеров;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Контрагент") Тогда
		
		Контрагент = Параметры.Отбор.Контрагент;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
			Если ТипЗнч(Параметры.Отбор.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
				Если ЗначениеЗаполнено(Параметры.Отбор.Контрагент) Тогда
					ПартнерКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Отбор.Контрагент, "Партнер");
				Иначе
					ПартнерКонтрагента = Неопределено;
				КонецЕсли;
				СписокПартнеров = Новый СписокЗначений;
				ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(ПартнерКонтрагента, СписокПартнеров);
				
				Параметры.Отбор.Вставить("Партнер", СписокПартнеров);
			ИначеЕсли ТипЗнч(Параметры.Отбор.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
				Параметры.Отбор.Вставить("Партнер",Справочники.Партнеры.НашеПредприятие);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс")
		И Параметры.Отбор.Свойство("Организация")
		И Параметры.УчитыватьФилиалы Тогда
		
		Организация = Параметры.Отбор.Организация;
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ГоловнаяОрганизация В (&Организация)
		|	И Организации.ДопускаютсяВзаиморасчетыЧерезГоловнуюОрганизацию");
		Запрос.УстановитьПараметр("Организация", Организация);
		ДоступныеОрганизации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		Если ТипЗнч(Организация) = Тип("Массив") Тогда // В качестве отбора передано несколько организаций
			Для Каждого ЭлементОрганизаций Из Организация Цикл 
				ДоступныеОрганизации.Добавить(ЭлементОрганизаций);
			КонецЦикла;
		Иначе
			ДоступныеОрганизации.Добавить(Организация);
		КонецЕсли;
		
		Параметры.Отбор.Организация = ДоступныеОрганизации;
		
	КонецЕсли;
	
	Параметры.Отбор.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	Если ЭтоРасчетыСКлиентами Тогда
		
		ПараметрыОтбора = ВзаиморасчетыСервер.ПараметрыОтбораПриВыбореДокументаРасчетовСКлиентами();
		ПараметрыОтбора.ИсключитьРедактируемыйДокумент = Истина;
		ПараметрыОтбора.ЗапретитьДоговорыПоДокументам  = Параметры.ЗапретитьДоговорыПоДокументам;
		
		Если Параметры.Отбор.Свойство("Организация") И Параметры.Отбор.Свойство("Контрагент") Тогда
			ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту = Истина;
		КонецЕсли;
		
		ТекстЗапроса = ВзаиморасчетыСервер.ПолучитьТекстЗапросаДокументыРасчетовСКлиентами(
			Параметры.ВыборОснованияПлатежа, 
			ПараметрыОтбора);
		// begin fix Suetin 12.11.2019 15:40:26
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)", 
			"(ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным) ИЛИ ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)");
		// end fix Suetin 12.11.2019 15:40:32	
		Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
			ПараметрыСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
			ПараметрыСписка.ТекстЗапроса = ТекстЗапроса;
			ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, ПараметрыСписка)
		КонецЕсли;
			
		Если Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыборОснованияПлатежа")) <> Неопределено Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ВыборОснованияПлатежа", Параметры.ВыборОснованияПлатежа);
		КонецЕсли;
		
		Если ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту Тогда
			Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметры.Отбор.Организация);
			Список.Параметры.УстановитьЗначениеПараметра("Контрагент", Параметры.Отбор.Контрагент);
		КонецЕсли;
		
	Иначе
		
		ПараметрыОтбора = ВзаиморасчетыСервер.ПараметрыОтбораПриВыбореДокументаРасчетовСПоставщиками();
		ПараметрыОтбора.ИсключитьРедактируемыйДокумент = Истина;
		ПараметрыОтбора.ИсключитьХозяйственнуюОперацию = Параметры.ИсключитьХозяйственнуюОперацию;
		ПараметрыОтбора.ЗапретитьДоговорыПоДокументам  = Параметры.ЗапретитьДоговорыПоДокументам;
		//++ НЕ УТ
		ПараметрыОтбора.ПлатежиПо275ФЗ                 = Параметры.ПлатежиПо275ФЗ;
		//-- НЕ УТ
		
		Если Параметры.Отбор.Свойство("Организация") И Параметры.Отбор.Свойство("Контрагент") Тогда
			ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту = Истина;
		КонецЕсли;
		
		ТекстЗапроса = ВзаиморасчетыСервер.ПолучитьТекстЗапросаДокументыРасчетовСПоставщиками(ПараметрыОтбора);
		Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
			ПараметрыСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
			ПараметрыСписка.ТекстЗапроса = ТекстЗапроса;
			ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, ПараметрыСписка);
			Список.Параметры.УстановитьЗначениеПараметра("ОперацииРаздельнойЗакупки", ЗакупкиСервер.ХозяйственныеОперацииРаздельнойЗакупкиБезОтборов());
		КонецЕсли;
		
		Если ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту Тогда
			Если Список.Параметры.Элементы.Найти("Организация") <> Неопределено Тогда
				Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметры.Отбор.Организация);
			КонецЕсли;
			Если Список.Параметры.Элементы.Найти("Контрагент") <> Неопределено Тогда
				Список.Параметры.УстановитьЗначениеПараметра("Контрагент", Параметры.Отбор.Контрагент);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Список.Параметры.Элементы.Найти("ИсключаемыйДокумент") <> Неопределено Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ИсключаемыйДокумент", Параметры.РедактируемыйДокумент);
	КонецЕсли;
	
	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	ВалютаУправленческогоУчета = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета();
	
	Валюта = Параметры.Валюта;
	СуммаПлатежа = Параметры.Сумма;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Валюта", "Видимость", ИспользоватьНесколькоВалют);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти
