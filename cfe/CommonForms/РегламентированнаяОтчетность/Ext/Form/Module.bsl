&Вместо("ОбработкаОповещения")
&НаКлиенте
Процедура ВИЛС_ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ВыполняетсяЗакрытиеФормы = Истина // отменяем выполнение обработчика в закрываемой форме.
	 ИЛИ ИмяСобытия = "Получение контекста ЭДО" Тогда
		Возврат;
	КонецЕсли;
	
	Если КонтекстЭДОКлиент = Неопределено И Не КонтекстУжеПодключался Тогда 
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ИмяСобытия", ИмяСобытия);
		ПараметрыОповещения.Вставить("Параметр", Параметр);
		ПараметрыОповещения.Вставить("Источник", Источник);
		Оповещение = Новый ОписаниеОповещения("ОбработкаОповещенияПредварительная", ЭтотОбъект, ПараметрыОповещения);
		ИнициализироватьКонтекстЭДО(Оповещение);
		Возврат;
	КонецЕсли;
		
	Если ИмяСобытия = "Открытие формы 1С-Отчетность" Тогда
		
		Раздел = Параметр.Раздел;
		Если Элементы.Разделы.ТекущаяСтраница <> Элементы["Страница" + ИмяСтраницы(Раздел)] Тогда
			ОткрытьНаНужнойСтранице(Параметр);
			СделатьВсеГиперссылкиНеактивными();
			УправлениеЭУ(ЭтаФорма, Истина);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ИзменениеНастроекЭДООрганизации" ИЛИ ИмяСобытия = "ОбновитьУчетнуюЗапись" Тогда
		
		ОпределитьДоступностьЭДО();
		УправлениеВидимостьюЭлементовПриОтключенномЭДО();
		
		Если Параметр = Организация Тогда
			УправлениеЭУГруппаНастройки();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Завершение обновления"
		ИЛИ ИмяСобытия = "Завершение расшифровки" Тогда
		
		ТекущаяСтраница = ТекущаяСтраница(ЭтотОбъект);
		Если ТекущаяСтраница <> ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Новое")
			И ТекущаяСтраница <> ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Настройки")
			И ТекущаяСтраница <> ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Сервисы") Тогда
			ТекущаяТаблица = ТекущаяТаблица(ЭтотОбъект);
			ТекущаяТаблица.Обновить();
		КонецЕсли;
		
		ПереопределитьОформлениеСверки();
		
	ИначеЕсли ТипЗнч(Источник) <> Тип("УправляемаяФорма")
		И (СтрНайти(ИмяСобытия, "Запись_") > 0 
		ИЛИ ИмяСобытия = "Завершение автообмена с сервером ФСС" 
		ИЛИ ИмяСобытия = "Запись_ОтправкиФСС" 
		ИЛИ ИмяСобытия = "Редактирование_ОтправкиФСС" 
		ИЛИ ИмяСобытия = "Завершение автообмена с сервером ФСРАР" 
		ИЛИ ИмяСобытия = "Запись_ОтправкиФСРАР" 
		ИЛИ ИмяСобытия = "Редактирование_ОтправкиФСРАР"
		ИЛИ ИмяСобытия = "Завершение автообмена с сервером РПН" 
		ИЛИ ИмяСобытия = "Запись_ОтправкиРПН" 
		ИЛИ ИмяСобытия = "Редактирование_ОтправкиРПН"
		ИЛИ ИмяСобытия = "Завершение автообмена с сервером ФТС" 
		ИЛИ ИмяСобытия = "Запись_ОтправкиФТС" 
		ИЛИ ИмяСобытия = "Редактирование_ОтправкиФТС"
		ИЛИ ИмяСобытия = "Завершение отправки в контролирующий орган"
		ИЛИ ИмяСобытия = "Завершение отправки"
		ИЛИ ИмяСобытия = "Изменение пометки удаления объекта"
		ИЛИ ИмяСобытия = "Скрытие/восстановление объекта"
		ИЛИ ИмяСобытия = "Позиционирование в списке отчетов"
		ИЛИ ИмяСобытия = "Пометка прочтенным"
		ИЛИ ИмяСобытия = "Пометка непрочтенным"
		ИЛИ ИмяСобытия = "Актуализация состояния отправки") Тогда
		
		ОрганизацияВКлюче = Неопределено;
		
		СсылкаВКлюче = Неопределено;
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Организация") И Параметр.Свойство("Ссылка") Тогда
			ОрганизацияВКлюче 	= Параметр.Организация;
			СсылкаВКлюче 		= Параметр.Ссылка;
		ИначеЕсли Параметр = Неопределено Тогда
			Если ЗначениеЗаполнено(Организация) Тогда
				ОрганизацияВКлюче 	= Организация;
			КонецЕсли;
			СсылкаВКлюче = Источник;
		Иначе			
			Если КонтекстЭДОКлиент <> Неопределено И Источник <> Неопределено Тогда
				//begin fix Клещ А.Н. 23.09.2019  
				//ОрганизацияВКлюче 	= КонтекстЭДОКлиент.СведенияПоОтправляемымОбъектам(Источник).Организация;
				//СсылкаВКлюче 		= Источник;
				Попытка 				
					ОрганизацияВКлюче 	= КонтекстЭДОКлиент.СведенияПоОтправляемымОбъектам(Источник).Организация;
					СсылкаВКлюче 		= Источник;
				Исключение
				КонецПопытки;
				//end fix Клещ А.Н. 23.09.2019
			КонецЕсли;
		КонецЕсли;
		
		ДополнительноеУсловиеТолстыйКлиент = Истина;
#Если ТолстыйКлиентУправляемоеПриложение Тогда
		Если ОрганизацияВКлюче = Неопределено Тогда 
			Попытка
				ОрганизацияВКлюче = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
				ДополнительноеУсловиеТолстыйКлиент = (ОрганизацияВКлюче <> ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));
			Исключение
			КонецПопытки;
		КонецЕсли;
#КонецЕсли
			
		// Обновляем текущую таблицу
		Если Элементы.Разделы.ТекущаяСтраница = Элементы.СтраницаОтчеты Тогда
			
			Если ОрганизацияВКлюче <> Неопределено И ДополнительноеУсловиеТолстыйКлиент Тогда
				
				Отборы = Новый Массив;
				Отборы.Добавить(Новый Структура("Организация, Ссылка", ОрганизацияВКлюче, СсылкаВКлюче));
				
				КлючЗаписи = Новый(Тип("РегистрСведенийКлючЗаписи.ЖурналОтчетовСтатусы"), Отборы);
				
				Если НЕ КлючЗаписи.Пустой() Тогда
					
					ОповеститьОбИзменении(КлючЗаписи);
					Если ИмяСобытия <> "Пометка прочтенным"
						И ИмяСобытия <> "Пометка непрочтенным"
						И ИмяСобытия <> "Скрытие/восстановление объекта" Тогда
						ДобавитьВидОтчетаВИзбранные(Отборы[0]);
						Элементы.Отчеты.ТекущаяСтрока = КлючЗаписи;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			// Определем текущую страницу
			ИмяРаздела 		= СтрЗаменить(Элементы.Разделы.ТекущаяСтраница.Имя, "Страница", "");
			СтраницаЖурнала = ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность." + ИмяРаздела);
			
			// Вызываем обновление только одной строки только данной страницы
			Если СтраницаЖурнала <> Неопределено Тогда
			
				Отборы = Новый Массив;
				Отборы.Добавить(Новый Структура("СтраницаЖурнала, Ссылка, Организация", СтраницаЖурнала, СсылкаВКлюче, ОрганизацияВКлюче));
				
				КлючЗаписи = Новый(Тип("РегистрСведенийКлючЗаписи.ЖурналОтправокВКонтролирующиеОрганы"), Отборы);
				
				Если НЕ КлючЗаписи.Пустой() Тогда
					ОповеститьОбИзменении(КлючЗаписи);
					
					СтраницыБезСписков = СтрРазделить("Настройки,Сервисы,Новое", ",");
					// При записи объекта позиционируемся на нем в таблице
					Если СтрНайти(ИмяСобытия, "Запись_") > 0 И СтраницыБезСписков.Найти(ИмяРаздела) = Неопределено Тогда
						
						Если ИмяРаздела = "Входящие" Тогда //Есть вложенные таблицы/вкладки
							АктивнаСтраницаРассылки = 
								Элементы.ГруппаКатегориииВх.ТекущаяСтраница = Элементы.СтраницаКатегорияРассылки;	
							Если АктивнаСтраницаРассылки Тогда 
								ИмяРаздела = ИмяРаздела + "Рассылки";
							КонецЕсли;
						КонецЕсли;
	
						Элементы[ИмяРаздела].ТекущаяСтрока = КлючЗаписи;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИмяСобытия = "Пометка прочтенным"
			ИЛИ ИмяСобытия = "Пометка непрочтенным"
			ИЛИ ИмяСобытия = "Скрытие/восстановление объекта" Тогда
			
			// Обновление количества непрочтенных.
			ОбновитьКоличествоНепрочтенныхОбъектов(ЭтаФорма);
			
			// Закладка Новое
			Если ИмяСобытия = "Пометка непрочтенным" ИЛИ ИмяСобытия = "Скрытие/восстановление объекта" Тогда
				ЗаполнитьДеревоНовое(Истина);
			Иначе
				СтрокиДерева = Новое.ПолучитьЭлементы();
				Для Каждого СтрокаДерева Из СтрокиДерева Цикл
					Если СтрокаДерева.Группа = ПредопределенноеЗначение("Перечисление.ГруппыНовыхСобытийДокументооборотаСКонтролирующимиОрганами.НезавершенныеОтправки") Тогда
						Прервать;				
					КонецЕсли;
					
					Если СтрокаДерева.Ссылка = Источник Тогда
						СтрокаДерева.НеПрочитано = Ложь;
						СписокСсылок = Новый Массив;
						СписокСсылок.Добавить(Источник);
						ОбновитьКоличествоНовых(ЭтаФорма);
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяСобытия = "Завершение автообмена с сервером ФСС" ИЛИ ИмяСобытия = "Завершение автообмена с сервером ФСРАР"
			ИЛИ ИмяСобытия = "Завершение автообмена с сервером РПН" ИЛИ ИмяСобытия = "Завершение автообмена с сервером ФТС"
			ИЛИ ИмяСобытия = "Завершение отправки в контролирующий орган" ИЛИ ИмяСобытия = "Завершение отправки"  Тогда
			
			ЗаполнитьДеревоНовое();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ПриЗакрытии_ЭлектронныеПредставленияРегламентированныхОтчетов" Тогда	
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("ЭтоУведомление") Тогда
			ШаблонПредупреждения = НСтр("ru = '""%1"" отображается в разделе ""%2""';
										|en = '""%1"" отображается в разделе ""%2""'");
			Если Параметр.ЭтоУведомление И Элементы.Разделы.ТекущаяСтраница = Элементы.СтраницаОтчеты Тогда
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредупреждения, Строка(Источник), НСтр("ru = 'Уведомления';
																																			|en = 'Уведомления'"));
				ПоказатьПредупреждение(, ТекстПредупреждения);
			ИначеЕсли Не Параметр.ЭтоУведомление И Элементы.Разделы.ТекущаяСтраница = Элементы.СтраницаУведомления Тогда
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредупреждения, Строка(Источник), НСтр("ru = 'Отчеты';
																																			|en = 'Отчеты'"));
				ПоказатьПредупреждение(, ТекстПредупреждения);	
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли (ИмяСобытия = "Получены новые сообщения 1С-Отчетности"
		ИЛИ ИмяСобытия = "Получены новые сообщения 1С-Отчетности без смены страницы") И Источник <> ЭтаФорма Тогда
		
		Оповестить("Закрыть форму новых сообщений 1С-Отчетности",, ЭтаФорма);
		
		Если ЭтоАдресВременногоХранилища(Параметр) Тогда
			АдресСведенийПоОшибкам = Параметр;
			УстановитьВидимостьПанелиОшибокОбновления(ЭтотОбъект);
		КонецЕсли;
		
		ЗаполнитьДеревоНовое(Истина);
		// Обновление количества непрочтенных.
		ОбновитьКоличествоНепрочтенныхОбъектов(ЭтаФорма);
		ОтметитьДеревоПросмотренным();
		
		Если ИмяСобытия <> "Получены новые сообщения 1С-Отчетности без смены страницы" Тогда
			ПриПереключенииРаздела(Элементы.ГиперссылкаНовое);
		КонецЕсли;
		
		ПереопределитьОформлениеСверки();
		
	ИначеЕсли ИмяСобытия = "Обновить ошибки обмена" Тогда
		
		Если ЭтоАдресВременногоХранилища(Параметр) Тогда
			АдресСведенийПоОшибкам = Параметр;
			УстановитьВидимостьПанелиОшибокОбновления(ЭтотОбъект);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "РеализованаНестандартнаяОбработкаОткрытияУведомления" Тогда
		Попытка
			Если Открыта() Тогда 
				РегламентированнаяОтчетностьКлиентПереопределяемый.ОбработчикСозданияУведомления(ЭтотОбъект, Параметр);
			КонецЕсли;
		Исключение
		КонецПопытки;
		
	ИначеЕсли ИмяСобытия = "ИзменилосьСостояниеДокументаИнтеграцииСБанком" Тогда
		#Область Используется1СОтчетность
		Если НЕ Используется1СОтчетность Тогда
			ОтключитьОбработчикОжидания("Подключаемый_ЗапуститьПроверкуСостояниеИнтеграцииВФоне");
			Результат = РегламентированнаяОтчетностьВызовСервера.СостояниеИнтеграцииСБанкомВФоне(УникальныйИдентификатор);
			ОжидатьЗавершенияФоновогоЗаданияПолученияСостоянияИнтеграцииСБанком(Результат);
		КонецЕсли;
		#КонецОбласти
		
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ФормаРегламентированнойОтчетности_ОбработкаОповещения(ИмяСобытия, Параметр, Источник, ЭтаФорма);
	
	// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
		
	КонецЕсли;
	// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
	
КонецПроцедуры
