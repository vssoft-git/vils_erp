
&Вместо("ДобавитьЗаписьПереоценки")   // fix Suetin 04.07.2019 18:06:39  // Ошибка исправлена в будущих релизах
Процедура ВИЛС_ДобавитьЗаписьПереоценки(ГлобальныеПеременные, ТаблицаРасчетовПоДокументам, Период, СтрокаРасчетов, Тип, СуммаРегл, СуммаУпр)
	
	Если НЕ ГлобальныеПеременные.Свойство("ТаблицаКурсовВалют") Тогда
		Возврат;
	КонецЕсли;
	
	ПорядокПереоценки = ГлобальныеПеременные.ПорядокПереоценки.Получить(Период);
	Если ПорядокПереоценки = Неопределено Тогда
		ПорядокПереоценки = Порядок(Период,"",, Тип("ДокументСсылка.РасчетКурсовыхРазниц"));
		ГлобальныеПеременные.ПорядокПереоценки.Вставить(Период, ПорядокПереоценки);
	КонецЕсли;
	
	Если СуммаРегл < 0 ИЛИ СуммаУпр < 0 Тогда
		СтрокаПереоценки = ТаблицаРасчетовПоДокументам.Добавить();
		СтрокаПереоценки.ВидДвижения              = ВидДвиженияНакопления.Расход;
		СтрокаПереоценки.ДокументРегистратор      = ГлобальныеПеременные.ДокументыРасчетаКурсовыхРазниц[НачалоМесяца(Период)];
		СтрокаПереоценки.ХозяйственнаяОперация    = ГлобальныеПеременные.ХозяйственныеОперации["ПереоценкаОтрицательная"];
		СтрокаПереоценки.РасчетныйДокумент        = СтрокаРасчетов.РасчетныйДокумент;
		СтрокаПереоценки.ВалютаДокумента          = СтрокаРасчетов.ВалютаДокумента;
		СтрокаПереоценки.ДатаВозникновения        = СтрокаРасчетов.ДатаВозникновения;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаРасчетов,"ПорядокЗачетаПоДатеПлатежа") Тогда    // begin fix Suetin 04.07.2019 18:14:29
			СтрокаПереоценки.ПорядокЗачета            = СтрокаРасчетов.ПорядокЗачетаПоДатеПлатежа;
		Иначе
			СтрокаПереоценки.ПорядокЗачета            = СтрокаРасчетов.ПорядокЗачета;
		КонецЕсли;                                                                                                             // end fix Suetin 04.07.2019 18:14:35
		СтрокаПереоценки.Период                   = Период;
		СтрокаПереоценки.ПорядокОперации          = ПорядокПереоценки;
		
		Если Тип = "Долг" Тогда
			СтрокаПереоценки.ДолгРегл             = ?(СуммаРегл < 0, -СуммаРегл, 0);
			СтрокаПереоценки.ДолгУпр              = ?(СуммаУпр < 0, -СуммаУпр, 0);
			СтрокаПереоценки.ДатаПлановогоПогашения   = СтрокаРасчетов.ДатаПлановогоПогашения;
		Иначе
			СтрокаПереоценки.ПредоплатаРегл       = ?(СуммаРегл < 0, -СуммаРегл, 0);
			СтрокаПереоценки.ПредоплатаУпр        = ?(СуммаУпр < 0, -СуммаУпр, 0);
		КонецЕсли;
	КонецЕсли;
	
	Если СуммаРегл > 0 ИЛИ СуммаУпр > 0 Тогда
		СтрокаПереоценки = ТаблицаРасчетовПоДокументам.Добавить();
		СтрокаПереоценки.ВидДвижения              = ВидДвиженияНакопления.Приход;
		СтрокаПереоценки.ДокументРегистратор      = ГлобальныеПеременные.ДокументыРасчетаКурсовыхРазниц[НачалоМесяца(Период)];
		СтрокаПереоценки.ХозяйственнаяОперация    = ГлобальныеПеременные.ХозяйственныеОперации["ПереоценкаПоложительная"];
		СтрокаПереоценки.РасчетныйДокумент        = СтрокаРасчетов.РасчетныйДокумент;
		СтрокаПереоценки.ВалютаДокумента          = СтрокаРасчетов.ВалютаДокумента;
		СтрокаПереоценки.ДатаВозникновения        = СтрокаРасчетов.ДатаВозникновения;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаРасчетов,"ПорядокЗачетаПоДатеПлатежа") Тогда    // begin fix Suetin 04.07.2019 18:14:29
			СтрокаПереоценки.ПорядокЗачета            = СтрокаРасчетов.ПорядокЗачетаПоДатеПлатежа;
		Иначе
			СтрокаПереоценки.ПорядокЗачета            = СтрокаРасчетов.ПорядокЗачета;
		КонецЕсли;                                                                                                             // end fix Suetin 04.07.2019 18:14:35
		СтрокаПереоценки.Период                   = Период;
		СтрокаПереоценки.ПорядокОперации          = ПорядокПереоценки;
		
		Если Тип = "Долг" Тогда
			СтрокаПереоценки.ДолгРегл               = ?(СуммаРегл > 0, СуммаРегл, 0);
			СтрокаПереоценки.ДолгУпр                = ?(СуммаУпр > 0, СуммаУпр, 0);
			СтрокаПереоценки.ДатаПлановогоПогашения = СтрокаРасчетов.ДатаПлановогоПогашения;
		Иначе
			СтрокаПереоценки.ПредоплатаРегл         = ?(СуммаРегл > 0, СуммаРегл, 0);
			СтрокаПереоценки.ПредоплатаУпр          = ?(СуммаУпр > 0, СуммаУпр, 0);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
