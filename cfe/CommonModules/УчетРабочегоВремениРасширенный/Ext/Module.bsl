//&Вместо("ЗапросВТДанныеРегистровУчетаВремени")
//Функция ВИЛС_ЗапросВТДанныеРегистровУчетаВремени(ПараметрыФормированияДанных, ПараметрыПостроения)
//	ЗапросРезультат = Новый Запрос;
//	
//	ЗапросВТПериодыДейсвияОбщихГрафиковСотрудников = ЗапросВТПериодыДейсвияОбщихГрафиковСотрудников(ПараметрыФормированияДанных);
//	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТПериодыДейсвияОбщихГрафиковСотрудников);
//	
//	ЗапросВТДанныеОбщихГрафиков = ЗапросВТДанныеОбщихГрафиков(ПараметрыФормированияДанных);
//	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТДанныеОбщихГрафиков);
//	
//	ЗапросВТДанныеРегистровУчетаВремени = Новый Запрос;
//	//begin fix Клещ А.Н. 28.06.2019 
//	Организация = Справочники.Организации.НайтиПоНаименованию("ОАО ""ВИЛС""");
//	
//	Если ВИЛС_Служебный.ИспользуютсяОсобыеУсловияТруда(Организация) Тогда
//		
//		ЗапросВТДанныеРегистровУчетаВремени.Текст =
//		"ВЫБРАТЬ
//		|	ДанныеУчетаВремени.Сотрудник КАК Сотрудник,
//		|	ДанныеУчетаВремени.Месяц КАК Месяц,
//		|	ДанныеУчетаВремени.ДатаАктуальности КАК ДатаАктуальности,
//		|	ДанныеУчетаВремени.ПериодРегистрации КАК ПериодРегистрации,
//		|	МИНИМУМ(ДанныеУчетаВремени.План) КАК План,
//		|	ДанныеУчетаВремени.ВЦеломЗаПериод КАК ВЦеломЗаПериод,
//		|	ВЫБОР
//		|		КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
//		|				И ДанныеУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|			ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаВремени.Период, ДЕНЬ, -1)
//		|		ИНАЧЕ ДанныеУчетаВремени.Период
//		|	КОНЕЦ КАК Дата,
//		|	ДанныеУчетаВремени.ВидУчетаВремени КАК ВидУчетаВремени,
//		|	ДанныеУчетаВремени.Территория КАК Территория,
//		|	ДанныеУчетаВремени.УсловияТруда КАК УсловияТруда,
//		|	ВЫБОР
//		|		КОГДА ДанныеУчетаВремени.ВЦеломЗаПериод
//		|			ТОГДА СУММА(ДанныеУчетаВремени.Дни)
//		|		КОГДА СУММА(ДанныеУчетаВремени.Дни) > 0
//		|			ТОГДА 1
//		|		ИНАЧЕ 0
//		|	КОНЕЦ КАК Дни,
//		|	СУММА(ДанныеУчетаВремени.Часы) КАК Часы,
//		|	МАКСИМУМ(ДанныеУчетаВремени.ДниПлан) КАК ДниПлан,
//		|	СУММА(ДанныеУчетаВремени.ЧасыПлан) КАК ЧасыПлан,
//		|	МАКСИМУМ(ДанныеУчетаВремени.ДниНорма) КАК ДниНорма,
//		|	СУММА(ДанныеУчетаВремени.ЧасыНорма) КАК ЧасыНорма,
//		|	МАКСИМУМ(ДанныеУчетаВремени.Смена) КАК Смена,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены
//		|ПОМЕСТИТЬ ВТДанныеРегистровУчетаВремени
//		|ИЗ
//		|	(ВЫБРАТЬ
//		|		ДанныеУчетаВремени.Сотрудник КАК Сотрудник,
//		|		ДанныеУчетаВремени.Месяц КАК Месяц,
//		|		ДанныеУчетаВремени.ДатаАктуальности КАК ДатаАктуальности,
//		|		ДанныеУчетаВремени.ПериодРегистрации КАК ПериодРегистрации,
//		|		ДанныеУчетаВремени.План КАК План,
//		|		ДанныеУчетаВремени.ВЦеломЗаПериод КАК ВЦеломЗаПериод,
//		|		ДанныеУчетаВремени.Период КАК Период,
//		|		ДанныеУчетаВремени.ВидУчетаВремени КАК ВидУчетаВремени,
//		|		ДанныеУчетаВремени.Смена КАК Смена,
//		|		ДанныеУчетаВремени.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
//		|		ДанныеУчетаВремени.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены,
//		|		ДанныеУчетаВремени.Территория КАК Территория,
//		|		ВЫБОР
//		|			КОГДА ДанныеУчетаВремени.УсловияТруда = ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
//		|					ИЛИ ДанныеУчетаВремени.УсловияТруда ЕСТЬ NULL
//		|				ТОГДА ДанныеУсловийТруда.УсловиеТруда
//		|			ИНАЧЕ ДанныеУчетаВремени.УсловияТруда
//		|		КОНЕЦ КАК УсловияТруда,
//		|		ДанныеУчетаВремени.Дни КАК Дни,
//		|		ДанныеУчетаВремени.Часы КАК Часы,
//		|		ДанныеУчетаВремени.ДниПлан КАК ДниПлан,
//		|		ДанныеУчетаВремени.ЧасыПлан КАК ЧасыПлан,
//		|		ДанныеУчетаВремени.ДниНорма КАК ДниНорма,
//		|		ДанныеУчетаВремени.ЧасыНорма КАК ЧасыНорма
//		|	ИЗ
//		|		(ВЫБРАТЬ
//		|			ИсточникиПолученияДанныхУчетаВремени.Сотрудник КАК Сотрудник,
//		|			ИсточникиПолученияДанныхУчетаВремени.Месяц КАК Месяц,
//		|			ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности КАК ДатаАктуальности,
//		|			ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации КАК ПериодРегистрации,
//		|			ЛОЖЬ КАК План,
//		|			ЛОЖЬ КАК ВЦеломЗаПериод,
//		|			ДанныеРегистраУчетаВремени.Период КАК Период,
//		|			ДанныеРегистраУчетаВремени.ВидУчетаВремени КАК ВидУчетаВремени,
//		|			ДанныеРегистраУчетаВремени.Смена КАК Смена,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены,
//		|			ДанныеРегистраУчетаВремени.Территория КАК Территория,
//		|			ДанныеРегистраУчетаВремени.УсловияТруда КАК УсловияТруда,
//		|			ДанныеРегистраУчетаВремени.Дни КАК Дни,
//		|			ДанныеРегистраУчетаВремени.Часы КАК Часы,
//		|			0 КАК ДниПлан,
//		|			0 КАК ЧасыПлан,
//		|			0 КАК ДниНорма,
//		|			0 КАК ЧасыНорма
//		|		ИЗ
//		|			ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ДанныеРегистраУчетаВремени
//		|				ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|					И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|					И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|						ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|					И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ДанныеТабельногоУчета))
//		|					И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|					И (&УсловиеОграничениеПериода)
//		|					И (&УсловиеРегистратор)
//		|		
//		|		ОБЪЕДИНИТЬ ВСЕ
//		|		
//		|		ВЫБРАТЬ
//		|			ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|			ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|			ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|			ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|			ЛОЖЬ,
//		|			ЛОЖЬ,
//		|			ДанныеРегистраУчетаВремени.Период,
//		|			ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|			ДанныеРегистраУчетаВремени.Смена,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены,
//		|			ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|			ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|			ДанныеРегистраУчетаВремени.Дни,
//		|			ДанныеРегистраУчетаВремени.Часы,
//		|			0,
//		|			0,
//		|			0,
//		|			0
//		|		ИЗ
//		|			ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеОперативногоУчетаРабочегоВремениСотрудников КАК ДанныеРегистраУчетаВремени
//		|				ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|					И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|					И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|						ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|					И ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ДанныеРегистраУчетаВремени.ВидДанных
//		|					И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|					И (&УсловиеОграничениеПериода)
//		|					И (&УсловиеРегистратор)
//		|		
//		|		ОБЪЕДИНИТЬ ВСЕ
//		|		
//		|		ВЫБРАТЬ
//		|			ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|			ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|			ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|			ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|			ЛОЖЬ,
//		|			ЛОЖЬ,
//		|			ДанныеРегистраУчетаВремени.Период,
//		|			ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|			ДанныеРегистраУчетаВремени.Смена,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены,
//		|			ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|			ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|			0,
//		|			-ДанныеРегистраУчетаВремени.Часы,
//		|			0,
//		|			0,
//		|			0,
//		|			0
//		|		ИЗ
//		|			ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВытесняемоеПлановоеВремяСотрудников КАК ДанныеРегистраУчетаВремени
//		|				ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|					И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|					И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|						ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|					И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ВытесняемоеПлановоеВремя))
//		|					И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|					И (&УсловиеОграничениеПериода)
//		|					И (&УсловиеРегистратор)
//		|		
//		|		ОБЪЕДИНИТЬ ВСЕ
//		|		
//		|		ВЫБРАТЬ
//		|			ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|			ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|			ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|			ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|			ЛОЖЬ,
//		|			ИСТИНА,
//		|			ДанныеРегистраУчетаВремени.Период,
//		|			ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|			ЗНАЧЕНИЕ(Справочник.СменыРаботыСотрудников.ПустаяСсылка),
//		|			ЛОЖЬ,
//		|			ЛОЖЬ,
//		|			ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|			ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|			СУММА(ДанныеРегистраУчетаВремени.Дни),
//		|			СУММА(ДанныеРегистраУчетаВремени.Часы),
//		|			0,
//		|			0,
//		|			0,
//		|			0
//		|		ИЗ
//		|			ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеСводногоУчетаРабочегоВремениСотрудников КАК ДанныеРегистраУчетаВремени
//		|				ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|					И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|					И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.СводныеДанные))
//		|					И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|					И (&УсловиеОграничениеПериода)
//		|					И (&УсловиеРегистратор)
//		|		
//		|		СГРУППИРОВАТЬ ПО
//		|			ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|			ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|			ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|			ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|			ДанныеРегистраУчетаВремени.Период,
//		|			ДанныеРегистраУчетаВремени.ВидУчетаВремени
//		|		
//		|		ОБЪЕДИНИТЬ ВСЕ
//		|		
//		|		ВЫБРАТЬ
//		|			ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|			ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|			ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|			ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|					ТОГДА ИСТИНА
//		|				ИНАЧЕ ЛОЖЬ
//		|			КОНЕЦ,
//		|			ЛОЖЬ,
//		|			ДанныеРегистраУчетаВремени.Период,
//		|			ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|			ДанныеРегистраУчетаВремени.Смена,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|			ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены,
//		|			ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|			ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|					ТОГДА ДанныеРегистраУчетаВремени.Дни
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|					ТОГДА ДанныеРегистраУчетаВремени.Часы
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеРегистраУчетаВремени.Дни
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеРегистраУчетаВремени.Часы
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеРегистраУчетаВремени.Дни
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеРегистраУчетаВремени.Часы
//		|				ИНАЧЕ 0
//		|			КОНЕЦ
//		|		ИЗ
//		|			ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеИндивидуальныхГрафиковСотрудников КАК ДанныеРегистраУчетаВремени
//		|				ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|					И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|					И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|						ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|							И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|					И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ДанныеИндивидуальныхГрафиков))
//		|					И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|					И (&УсловиеОграничениеПериода)
//		|					И (&УсловиеРегистратор)
//		|		
//		|		ОБЪЕДИНИТЬ ВСЕ
//		|		
//		|		ВЫБРАТЬ
//		|			ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|			ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|			ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|			ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|					ТОГДА ИСТИНА
//		|				ИНАЧЕ ЛОЖЬ
//		|			КОНЕЦ,
//		|			ЛОЖЬ,
//		|			ДанныеОбщихГрафиков.Дата,
//		|			ДанныеОбщихГрафиков.ВидУчетаВремени,
//		|			ДанныеОбщихГрафиков.Смена,
//		|			ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены,
//		|			ДанныеОбщихГрафиков.ПереходящаяЧастьТекущейСмены,
//		|			ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|			ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|			ВЫБОР
//		|				КОГДА НЕ ПериодыДейсвияОбщихГрафиковСотрудников.ТолькоПлановоеВремя
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|					ТОГДА ДанныеОбщихГрафиков.Дней
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА НЕ ПериодыДейсвияОбщихГрафиковСотрудников.ТолькоПлановоеВремя
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|					ТОГДА ДанныеОбщихГрафиков.Часов
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеОбщихГрафиков.Дней
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеОбщихГрафиков.Часов
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеОбщихГрафиков.ДнейНорма
//		|				ИНАЧЕ 0
//		|			КОНЕЦ,
//		|			ВЫБОР
//		|				КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|					ТОГДА ДанныеОбщихГрафиков.ЧасовНорма
//		|				ИНАЧЕ 0
//		|			КОНЕЦ
//		|		ИЗ
//		|			ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодыДейсвияОбщихГрафиковСотрудников КАК ПериодыДейсвияОбщихГрафиковСотрудников
//		|				ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ПериодыДейсвияОбщихГрафиковСотрудников.Сотрудник
//		|					И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ДанныеОбщихГрафиков))
//		|					И ИсточникиПолученияДанныхУчетаВремени.Месяц = ПериодыДейсвияОбщихГрафиковСотрудников.Месяц
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеОбщихГрафиков КАК ДанныеОбщихГрафиков
//		|				ПО (ПериодыДейсвияОбщихГрафиковСотрудников.ГрафикРаботы = ДанныеОбщихГрафиков.ГрафикРаботы)
//		|					И (ДанныеОбщихГрафиков.Дата МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|					И (ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|							И (ДанныеОбщихГрафиков.Дата <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|						ИЛИ НЕ ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены
//		|							И (ДанныеОбщихГрафиков.Дата <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|								ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|							И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|					И (ПериодыДейсвияОбщихГрафиковСотрудников.ДатаНачала <= ДанныеОбщихГрафиков.Дата)
//		|					И (ПериодыДейсвияОбщихГрафиковСотрудников.ДатаОкончания >= ДанныеОбщихГрафиков.Дата
//		|						ИЛИ ДанныеОбщихГрафиков.Дата = ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПериодыДейсвияОбщихГрафиковСотрудников.ДатаОкончания, ДЕНЬ), ДЕНЬ, 1)
//		|							И ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены)
//		|		
//		|		ОБЪЕДИНИТЬ ВСЕ
//		|		
//		|		ВЫБРАТЬ
//		|			ПараметрыПолученияДанныхПоСотрудникам.Сотрудник,
//		|			ПараметрыПолученияДанныхПоСотрудникам.Месяц,
//		|			ПараметрыПолученияДанныхПоСотрудникам.ДатаАктуальности,
//		|			ПараметрыПолученияДанныхПоСотрудникам.ПериодРегистрации,
//		|			ГрафикиРаботыПоВидамВремени.План,
//		|			ГрафикиРаботыПоВидамВремени.ВЦеломЗаПериод,
//		|			ГрафикиРаботыПоВидамВремени.Дата,
//		|			ГрафикиРаботыПоВидамВремени.ВидУчетаВремени,
//		|			ГрафикиРаботыПоВидамВремени.Смена,
//		|			ГрафикиРаботыПоВидамВремени.ПереходящаяЧастьПредыдущейСмены,
//		|			ГрафикиРаботыПоВидамВремени.ПереходящаяЧастьТекущейСмены,
//		|			ГрафикиРаботыПоВидамВремени.Территория,
//		|			ГрафикиРаботыПоВидамВремени.УсловияТруда,
//		|			ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
//		|			ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
//		|			0,
//		|			0,
//		|			ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
//		|			ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма
//		|		ИЗ
//		|			ВТПараметрыПолученияДанныхПоСотрудникам КАК ПараметрыПолученияДанныхПоСотрудникам
//		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
//		|				ПО ПараметрыПолученияДанныхПоСотрудникам.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
//		|					И ПараметрыПолученияДанныхПоСотрудникам.Месяц = ГрафикиРаботыПоВидамВремени.Месяц
//		|					И ПараметрыПолученияДанныхПоСотрудникам.ПериодРегистрации = ГрафикиРаботыПоВидамВремени.ПериодРегистрации
//		|					И (ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ ПараметрыПолученияДанныхПоСотрудникам.ДАТАНАЧАЛА И ПараметрыПолученияДанныхПоСотрудникам.ДАТАОкончания)
//		|					И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени <> &РабочееВремя)
//		|					И (НЕ ГрафикиРаботыПоВидамВремени.ВремяВЧасах)
//		|					И (ПараметрыПолученияДанныхПоСотрудникам.ПолучатьРассчитанныеДанныеФакт)) КАК ДанныеУчетаВремени
//		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
//		|				Периоды.Период КАК Период,
//		|				УсловияТруда.Сотрудник КАК Сотрудник,
//		|				УсловияТруда.УсловиеТруда КАК УсловиеТруда
//		|			ИЗ
//		|				(ВЫБРАТЬ
//		|					ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.Сотрудник КАК Сотрудник,
//		|					ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.УсловияТруда КАК УсловиеТруда,
//		|					&ДатаНачала КАК Период
//		|				ИЗ
//		|					РегистрСведений.ВИЛС_ДанныеУсловийТрудаПоСотрудникам.СрезПоследних(
//		|							&ДатаНачала,
//		|							Сотрудник В
//		|								(ВЫБРАТЬ
//		|									ВТПараметрыПолученияДанныхПоСотрудникам.Сотрудник
//		|								ИЗ
//		|									ВТПараметрыПолученияДанныхПоСотрудникам)) КАК ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних
//		|				
//		|				СГРУППИРОВАТЬ ПО
//		|					ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.УсловияТруда,
//		|					ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.Сотрудник
//		|				
//		|				ОБЪЕДИНИТЬ ВСЕ
//		|				
//		|				ВЫБРАТЬ
//		|					ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Сотрудник,
//		|					ВИЛС_ДанныеУсловийТрудаПоСотрудникам.УсловияТруда,
//		|					ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Период
//		|				ИЗ
//		|					РегистрСведений.ВИЛС_ДанныеУсловийТрудаПоСотрудникам КАК ВИЛС_ДанныеУсловийТрудаПоСотрудникам
//		|				ГДЕ
//		|					ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
//		|					И ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Сотрудник В
//		|							(ВЫБРАТЬ
//		|								ВТПараметрыПолученияДанныхПоСотрудникам.Сотрудник
//		|							ИЗ
//		|								ВТПараметрыПолученияДанныхПоСотрудникам)
//		|				
//		|				СГРУППИРОВАТЬ ПО
//		|					ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Период,
//		|					ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Сотрудник,
//		|					ВИЛС_ДанныеУсловийТрудаПоСотрудникам.УсловияТруда) КАК УсловияТруда
//		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
//		|						ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d) КАК Период
//		|					ИЗ
//		|						(ВЫБРАТЬ
//		|							0 КАК a
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							1
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							2
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							3
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							4
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							5
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							6
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							7
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							8
//		|						
//		|						ОБЪЕДИНИТЬ
//		|						
//		|						ВЫБРАТЬ
//		|							9) КАК aa
//		|							ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
//		|								0 КАК b
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								1
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								2
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								3
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								4
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								5
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								6
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								7
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								8
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								9) КАК bb
//		|							ПО (ИСТИНА)
//		|							ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
//		|								0 КАК c
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								1
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								2
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								3
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								4
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								5
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								6
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								7
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								8
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								9) КАК cc
//		|							ПО (ИСТИНА)
//		|							ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
//		|								0 КАК d
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								1
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								2
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								3
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								4
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								5
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								6
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								7
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								8
//		|							
//		|							ОБЪЕДИНИТЬ
//		|							
//		|							ВЫБРАТЬ
//		|								9) КАК dd
//		|							ПО (ИСТИНА)
//		|					ГДЕ
//		|						aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d <= РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ)) КАК Периоды
//		|					ПО (Периоды.Период >= УсловияТруда.Период)) КАК ДанныеУсловийТруда
//		|			ПО ДанныеУчетаВремени.Период = ДанныеУсловийТруда.Период
//		|				И ДанныеУчетаВремени.Сотрудник = ДанныеУсловийТруда.Сотрудник) КАК ДанныеУчетаВремени
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ДанныеУчетаВремени.Сотрудник,
//		|	ДанныеУчетаВремени.Месяц,
//		|	ДанныеУчетаВремени.ДатаАктуальности,
//		|	ДанныеУчетаВремени.ПериодРегистрации,
//		|	ДанныеУчетаВремени.ВЦеломЗаПериод,
//		|	ДанныеУчетаВремени.Период,
//		|	ДанныеУчетаВремени.ВидУчетаВремени,
//		|	ДанныеУчетаВремени.Территория,
//		|	ДанныеУчетаВремени.УсловияТруда,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьТекущейСмены
//		|";
//		
//	Иначе
//		
//		ЗапросВТДанныеРегистровУчетаВремени.Текст = 
//		"ВЫБРАТЬ
//		|	ДанныеУчетаВремени.Сотрудник КАК Сотрудник,
//		|	ДанныеУчетаВремени.Месяц КАК Месяц,
//		|	ДанныеУчетаВремени.ДатаАктуальности КАК ДатаАктуальности,
//		|	ДанныеУчетаВремени.ПериодРегистрации КАК ПериодРегистрации,
//		|	МИНИМУМ(ДанныеУчетаВремени.План) КАК План,
//		|	ДанныеУчетаВремени.ВЦеломЗаПериод КАК ВЦеломЗаПериод,
//		|	ВЫБОР
//		|		КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
//		|				И ДанныеУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|			ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаВремени.Период, ДЕНЬ, -1)
//		|		ИНАЧЕ ДанныеУчетаВремени.Период
//		|	КОНЕЦ КАК Дата,
//		|	ДанныеУчетаВремени.ВидУчетаВремени КАК ВидУчетаВремени,
//		|	ДанныеУчетаВремени.Территория КАК Территория,
//		|	ДанныеУчетаВремени.УсловияТруда КАК УсловияТруда,
//		|	ВЫБОР
//		|		КОГДА ДанныеУчетаВремени.ВЦеломЗаПериод
//		|			ТОГДА СУММА(ДанныеУчетаВремени.Дни)
//		|		КОГДА СУММА(ДанныеУчетаВремени.Дни) > 0
//		|			ТОГДА 1
//		|		ИНАЧЕ 0
//		|	КОНЕЦ КАК Дни,
//		|	СУММА(ДанныеУчетаВремени.Часы) КАК Часы,
//		|	МАКСИМУМ(ДанныеУчетаВремени.ДниПлан) КАК ДниПлан,
//		|	СУММА(ДанныеУчетаВремени.ЧасыПлан) КАК ЧасыПлан,
//		|	МАКСИМУМ(ДанныеУчетаВремени.ДниНорма) КАК ДниНорма,
//		|	СУММА(ДанныеУчетаВремени.ЧасыНорма) КАК ЧасыНорма,
//		|	МАКСИМУМ(ДанныеУчетаВремени.Смена) КАК Смена,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены
//		|ПОМЕСТИТЬ ВТДанныеРегистровУчетаВремени
//		|ИЗ
//		|	(ВЫБРАТЬ
//		|		ИсточникиПолученияДанныхУчетаВремени.Сотрудник КАК Сотрудник,
//		|		ИсточникиПолученияДанныхУчетаВремени.Месяц КАК Месяц,
//		|		ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности КАК ДатаАктуальности,
//		|		ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации КАК ПериодРегистрации,
//		|		ЛОЖЬ КАК План,
//		|		ЛОЖЬ КАК ВЦеломЗаПериод,
//		|		ДанныеРегистраУчетаВремени.Период КАК Период,
//		|		ДанныеРегистраУчетаВремени.ВидУчетаВремени КАК ВидУчетаВремени,
//		|		ДанныеРегистраУчетаВремени.Смена КАК Смена,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены,
//		|		ДанныеРегистраУчетаВремени.Территория КАК Территория,
//		|		ДанныеРегистраУчетаВремени.УсловияТруда КАК УсловияТруда,
//		|		ДанныеРегистраУчетаВремени.Дни КАК Дни,
//		|		ДанныеРегистраУчетаВремени.Часы КАК Часы,
//		|		0 КАК ДниПлан,
//		|		0 КАК ЧасыПлан,
//		|		0 КАК ДниНорма,
//		|		0 КАК ЧасыНорма
//		|	ИЗ
//		|		ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ДанныеРегистраУчетаВремени
//		|			ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|				И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|				И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|					ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|				И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ДанныеТабельногоУчета))
//		|				И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|				И (&УсловиеОграничениеПериода)
//		|				И (&УсловиеРегистратор)
//		|	
//		|	ОБЪЕДИНИТЬ ВСЕ
//		|	
//		|	ВЫБРАТЬ
//		|		ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|		ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|		ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|		ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|		ЛОЖЬ,
//		|		ЛОЖЬ,
//		|		ДанныеРегистраУчетаВремени.Период,
//		|		ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|		ДанныеРегистраУчетаВремени.Смена,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены,
//		|		ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|		ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|		ДанныеРегистраУчетаВремени.Дни,
//		|		ДанныеРегистраУчетаВремени.Часы,
//		|		0,
//		|		0,
//		|		0,
//		|		0
//		|	ИЗ
//		|		ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеОперативногоУчетаРабочегоВремениСотрудников КАК ДанныеРегистраУчетаВремени
//		|			ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|				И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|				И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|					ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|				И ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ДанныеРегистраУчетаВремени.ВидДанных
//		|				И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|				И (&УсловиеОграничениеПериода)
//		|				И (&УсловиеРегистратор)
//		|	
//		|	ОБЪЕДИНИТЬ ВСЕ
//		|	
//		|	ВЫБРАТЬ
//		|		ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|		ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|		ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|		ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|		ЛОЖЬ,
//		|		ЛОЖЬ,
//		|		ДанныеРегистраУчетаВремени.Период,
//		|		ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|		ДанныеРегистраУчетаВремени.Смена,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены,
//		|		ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|		ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|		0,
//		|		-ДанныеРегистраУчетаВремени.Часы,
//		|		0,
//		|		0,
//		|		0,
//		|		0
//		|	ИЗ
//		|		ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВытесняемоеПлановоеВремяСотрудников КАК ДанныеРегистраУчетаВремени
//		|			ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|				И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|				И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|					ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|				И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ВытесняемоеПлановоеВремя))
//		|				И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|				И (&УсловиеОграничениеПериода)
//		|				И (&УсловиеРегистратор)
//		|	
//		|	ОБЪЕДИНИТЬ ВСЕ
//		|	
//		|	ВЫБРАТЬ
//		|		ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|		ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|		ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|		ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|		ЛОЖЬ,
//		|		ИСТИНА,
//		|		ДанныеРегистраУчетаВремени.Период,
//		|		ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|		ЗНАЧЕНИЕ(Справочник.СменыРаботыСотрудников.ПустаяСсылка),
//		|		ЛОЖЬ,
//		|		ЛОЖЬ,
//		|		ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|		ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|		СУММА(ДанныеРегистраУчетаВремени.Дни),
//		|		СУММА(ДанныеРегистраУчетаВремени.Часы),
//		|		0,
//		|		0,
//		|		0,
//		|		0
//		|	ИЗ
//		|		ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеСводногоУчетаРабочегоВремениСотрудников КАК ДанныеРегистраУчетаВремени
//		|			ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|				И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|				И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.СводныеДанные))
//		|				И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|				И (&УсловиеОграничениеПериода)
//		|				И (&УсловиеРегистратор)
//		|	
//		|	СГРУППИРОВАТЬ ПО
//		|		ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|		ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|		ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|		ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|		ДанныеРегистраУчетаВремени.Период,
//		|		ДанныеРегистраУчетаВремени.ВидУчетаВремени
//		|	
//		|	ОБЪЕДИНИТЬ ВСЕ
//		|	
//		|	ВЫБРАТЬ
//		|		ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|		ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|		ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|		ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|				ТОГДА ИСТИНА
//		|			ИНАЧЕ ЛОЖЬ
//		|		КОНЕЦ,
//		|		ЛОЖЬ,
//		|		ДанныеРегистраУчетаВремени.Период,
//		|		ДанныеРегистраУчетаВремени.ВидУчетаВремени,
//		|		ДанныеРегистраУчетаВремени.Смена,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|		ДанныеРегистраУчетаВремени.ПереходящаяЧастьТекущейСмены,
//		|		ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|		ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|				ТОГДА ДанныеРегистраУчетаВремени.Дни
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|				ТОГДА ДанныеРегистраУчетаВремени.Часы
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеРегистраУчетаВремени.Дни
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеРегистраУчетаВремени.Часы
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеРегистраУчетаВремени.Дни
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеРегистраУчетаВремени.Часы
//		|			ИНАЧЕ 0
//		|		КОНЕЦ
//		|	ИЗ
//		|		ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДанныеИндивидуальныхГрафиковСотрудников КАК ДанныеРегистраУчетаВремени
//		|			ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ДанныеРегистраУчетаВремени.Сотрудник
//		|				И (ДанныеРегистраУчетаВремени.Период МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|				И (ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|					ИЛИ НЕ ДанныеРегистраУчетаВремени.ПереходящаяЧастьПредыдущейСмены
//		|						И (ДанныеРегистраУчетаВремени.Период <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|				И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ДанныеИндивидуальныхГрафиков))
//		|				И ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности >= ДанныеРегистраУчетаВремени.ПериодРегистрации
//		|				И (&УсловиеОграничениеПериода)
//		|				И (&УсловиеРегистратор)
//		|	
//		|	ОБЪЕДИНИТЬ ВСЕ
//		|	
//		|	ВЫБРАТЬ
//		|		ИсточникиПолученияДанныхУчетаВремени.Сотрудник,
//		|		ИсточникиПолученияДанныхУчетаВремени.Месяц,
//		|		ИсточникиПолученияДанныхУчетаВремени.ДатаАктуальности,
//		|		ИсточникиПолученияДанныхУчетаВремени.ПериодРегистрации,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|				ТОГДА ИСТИНА
//		|			ИНАЧЕ ЛОЖЬ
//		|		КОНЕЦ,
//		|		ЛОЖЬ,
//		|		ДанныеОбщихГрафиков.Дата,
//		|		ДанныеОбщихГрафиков.ВидУчетаВремени,
//		|		ДанныеОбщихГрафиков.Смена,
//		|		ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены,
//		|		ДанныеОбщихГрафиков.ПереходящаяЧастьТекущейСмены,
//		|		ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка),
//		|		ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка),
//		|		ВЫБОР
//		|			КОГДА НЕ ПериодыДейсвияОбщихГрафиковСотрудников.ТолькоПлановоеВремя
//		|					И ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|				ТОГДА ДанныеОбщихГрафиков.Дней
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА НЕ ПериодыДейсвияОбщихГрафиковСотрудников.ТолькоПлановоеВремя
//		|					И ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеФакт
//		|				ТОГДА ДанныеОбщихГрафиков.Часов
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеОбщихГрафиков.Дней
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеОбщихГрафиков.Часов
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеОбщихГрафиков.ДнейНорма
//		|			ИНАЧЕ 0
//		|		КОНЕЦ,
//		|		ВЫБОР
//		|			КОГДА ИсточникиПолученияДанныхУчетаВремени.ПолучатьДанныеПлан
//		|				ТОГДА ДанныеОбщихГрафиков.ЧасовНорма
//		|			ИНАЧЕ 0
//		|		КОНЕЦ
//		|	ИЗ
//		|		ВТИсточникиПолученияДанныхУчетаВремени КАК ИсточникиПолученияДанныхУчетаВремени
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодыДейсвияОбщихГрафиковСотрудников КАК ПериодыДейсвияОбщихГрафиковСотрудников
//		|			ПО ИсточникиПолученияДанныхУчетаВремени.Сотрудник = ПериодыДейсвияОбщихГрафиковСотрудников.Сотрудник
//		|				И (ИсточникиПолученияДанныхУчетаВремени.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДанныхУчетаВремениСотрудников.ДанныеОбщихГрафиков))
//		|				И ИсточникиПолученияДанныхУчетаВремени.Месяц = ПериодыДейсвияОбщихГрафиковСотрудников.Месяц
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеОбщихГрафиков КАК ДанныеОбщихГрафиков
//		|			ПО (ПериодыДейсвияОбщихГрафиковСотрудников.ГрафикРаботы = ДанныеОбщихГрафиков.ГрафикРаботы)
//		|				И (ДанныеОбщихГрафиков.Дата МЕЖДУ ИсточникиПолученияДанныхУчетаВремени.ДатаНачала И ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания)
//		|				И (ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСмены
//		|						И (ДанныеОбщихГрафиков.Дата <> ИсточникиПолученияДанныхУчетаВремени.ДатаНачала
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьПереходящуюЧастьСменыНаНачалоПериода)
//		|					ИЛИ НЕ ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены
//		|						И (ДанныеОбщихГрафиков.Дата <> ИсточникиПолученияДанныхУчетаВремени.ДатаОкончания
//		|							ИЛИ ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСменыНаКонецПериода)
//		|						И ИсточникиПолученияДанныхУчетаВремени.ПолучатьОсновнуюЧастьСмены)
//		|				И (ПериодыДейсвияОбщихГрафиковСотрудников.ДатаНачала <= ДанныеОбщихГрафиков.Дата)
//		|				И (ПериодыДейсвияОбщихГрафиковСотрудников.ДатаОкончания >= ДанныеОбщихГрафиков.Дата
//		|					ИЛИ ДанныеОбщихГрафиков.Дата = ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПериодыДейсвияОбщихГрафиковСотрудников.ДатаОкончания, ДЕНЬ), ДЕНЬ, 1)
//		|						И ДанныеОбщихГрафиков.ПереходящаяЧастьПредыдущейСмены)
//		|	
//		|	ОБЪЕДИНИТЬ ВСЕ
//		|	
//		|	ВЫБРАТЬ
//		|		ПараметрыПолученияДанныхПоСотрудникам.Сотрудник,
//		|		ПараметрыПолученияДанныхПоСотрудникам.Месяц,
//		|		ПараметрыПолученияДанныхПоСотрудникам.ДатаАктуальности,
//		|		ПараметрыПолученияДанныхПоСотрудникам.ПериодРегистрации,
//		|		ГрафикиРаботыПоВидамВремени.План,
//		|		ГрафикиРаботыПоВидамВремени.ВЦеломЗаПериод,
//		|		ГрафикиРаботыПоВидамВремени.Дата,
//		|		ГрафикиРаботыПоВидамВремени.ВидУчетаВремени,
//		|		ГрафикиРаботыПоВидамВремени.Смена,
//		|		ГрафикиРаботыПоВидамВремени.ПереходящаяЧастьПредыдущейСмены,
//		|		ГрафикиРаботыПоВидамВремени.ПереходящаяЧастьТекущейСмены,
//		|		ГрафикиРаботыПоВидамВремени.Территория,
//		|		ГрафикиРаботыПоВидамВремени.УсловияТруда,
//		|		ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
//		|		ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
//		|		0,
//		|		0,
//		|		ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
//		|		ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма
//		|	ИЗ
//		|		ВТПараметрыПолученияДанныхПоСотрудникам КАК ПараметрыПолученияДанныхПоСотрудникам
//		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
//		|			ПО ПараметрыПолученияДанныхПоСотрудникам.Сотрудник = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
//		|				И ПараметрыПолученияДанныхПоСотрудникам.Месяц = ГрафикиРаботыПоВидамВремени.Месяц
//		|				И ПараметрыПолученияДанныхПоСотрудникам.ПериодРегистрации = ГрафикиРаботыПоВидамВремени.ПериодРегистрации
//		|				И (ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ ПараметрыПолученияДанныхПоСотрудникам.ДатаНачала И ПараметрыПолученияДанныхПоСотрудникам.ДатаОкончания)
//		|				И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени <> &РабочееВремя)
//		|				И (НЕ ГрафикиРаботыПоВидамВремени.ВремяВЧасах)
//		|				И (ПараметрыПолученияДанныхПоСотрудникам.ПолучатьРассчитанныеДанныеФакт)) КАК ДанныеУчетаВремени
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ДанныеУчетаВремени.Сотрудник,
//		|	ДанныеУчетаВремени.Месяц,
//		|	ДанныеУчетаВремени.ДатаАктуальности,
//		|	ДанныеУчетаВремени.ПериодРегистрации,
//		|	ДанныеУчетаВремени.ВЦеломЗаПериод,
//		|	ДанныеУчетаВремени.Период,
//		|	ДанныеУчетаВремени.ВидУчетаВремени,
//		|	ДанныеУчетаВремени.Территория,
//		|	ДанныеУчетаВремени.УсловияТруда,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьПредыдущейСмены,
//		|	ДанныеУчетаВремени.ПереходящаяЧастьТекущейСмены";
//		// удалим лишние запросы
//	КонецЕсли;
//	//end fix Клещ А.Н. 28.06.2019
//	
//	СхемаЗапроса = Новый СхемаЗапроса;
//	СхемаЗапроса.УстановитьТекстЗапроса(ЗапросВТДанныеРегистровУчетаВремени.Текст);	
//	ЗапросПолученияДанных = СхемаЗапроса.ПакетЗапросов[0];
//	
//	Если Не ПараметрыФормированияДанных.ПолучатьДанныеФакт Тогда
//		ЗапросПолученияДанных.Операторы[0].Источники[0].Источник.Запрос.Операторы.Удалить(6);
//		ЗапросПолученияДанных.Операторы[0].Источники[0].Источник.Запрос.Операторы.Удалить(3);
//		ЗапросПолученияДанных.Операторы[0].Источники[0].Источник.Запрос.Операторы.Удалить(2);
//		ЗапросПолученияДанных.Операторы[0].Источники[0].Источник.Запрос.Операторы.Удалить(1);
//		ЗапросПолученияДанных.Операторы[0].Источники[0].Источник.Запрос.Операторы.Удалить(0);		
//	КонецЕсли;
//	
//	ЗапросВТДанныеРегистровУчетаВремени.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();		
//	
//	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТДанныеРегистровУчетаВремени);
//	
//	УстановитьУсловиеНеучитываемыеРегистраторы(ЗапросРезультат, ПараметрыФормированияДанных, "ДанныеРегистраУчетаВремени.Регистратор");
//	УстановитьУсловиеОграниченияПериода(ЗапросРезультат, ПараметрыФормированияДанных, "ДанныеРегистраУчетаВремени.Период");
//	УстановитьПараметрВЗапросПолученияДанныхУчетаВремени(ЗапросРезультат, "ОтноситьПереходящуюЧастьСменыКДнюНачала", ПараметрыФормированияДанных.ОтноситьПереходящуюЧастьСменыКДнюНачала);
//	
//	Если Не ПараметрыФормированияДанных.ПолучатьУсловияТрудаИТерритории Тогда
//		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ДанныеРегистраУчетаВремени.Территория", "ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)");		
//		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ГрафикиРаботыПоВидамВремени.Территория", "ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)");
//		
//		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ДанныеРегистраУчетаВремени.УсловияТруда", "ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)");		
//		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ГрафикиРаботыПоВидамВремени.УсловияТруда", "ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)");
//	ИначеЕсли Не ПараметрыФормированияДанных.УчитыватьТабльныеДанныеОТерриториях Тогда
//		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ДанныеРегистраУчетаВремени.Территория", "ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)");		
//		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ГрафикиРаботыПоВидамВремени.Территория", "ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)");	
//	КонецЕсли;	
//	
//	ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ВТДанныеРегистровУчетаВремени", ПараметрыПостроения.ИмяВТРезультат);
//	
//	ЗапросРезультат.УстановитьПараметр("РабочееВремя", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РабочееВремя"));
//	
//	Возврат ЗапросРезультат;	
//КонецФункции


//&Вместо("СоздатьВТДанныеУчетаРабочегоВремениСотрудников")
//// Помещает в менеджер временных таблиц временную таблицу ВТДанныеУчетаРабочегоВремениСотрудников с данными учета
//// времени сотрудников.
////	
//// Параметры:
////  МенеджерВременныхТаблиц  - МенеджерВременныхТаблиц - обязательно содержащий в себе таблицы:
////     * ВТСотрудники (имя временной таблицы определяется в параметре ПараметрыПолученияДанныхОВремени) - временная
////     таблица - обязательно содержит поля.
////        ** Сотрудник         - СправочникСсылка.Сотрудники - сотрудник, по которому нужно получить данные.
////        ** Месяц 	           - Дата - месяц, за который нужно получить данные.
////        ** ДатаАктуальности  - Дата - Будут учитываться только те данные о времени, 
////										которые зарегистрированы не позже переданного значения.
////        ** ДатаНачала 	   - Дата - ограничивает период получения данных внутри месяца.
////        ** ДатаОкончания 	   - Дата - ограничивает период получения данных внутри месяца.
////  ТолькоРазрешенные - Булево - определяет, будет ли производится попытка получить данные, на которые у пользователя
////                               нет прав.
////								 Используется когда данные необходимо получать целостно.
////  ПараметрыПолученияДанныхОВремени - Структура - структура с полями (см. функцию
////                                                 ПараметрыДляСоздатьВТДанныеУчетаРабочегоВремениСотрудников).
////
//// Результат выполнения - 
////	Помещает в МенеджерВременныхТаблиц таблицу ВТДанныеУчетаРабочегоВремениСотрудников с полями.
////     * Сотрудник         - СправочникСсылка.Сотрудники - сотрудник.
////     * Дата      		   - Дата - дата за которую получены данные.
////     * ВЦеломЗаПериод    - Булево - признак того, что данные были зарегистрированы сводно.
////     * Дней              - Число - в случае сводной регистрации времени может быть меньше 1.
////     * Часов			   - Число - количество часов по виду времени за день.
////     * ВидУчетаВремени   - СправочникСсылка.ВидыИспользованияРабочегоВремени - вид использования рабочего времени.
////     * ОсновноеВремя     - СправочникСсылка.ВидыИспользованияРабочегоВремени - основное время, один из
////                                                                               предопределенных в системе видов
////                                                                               времени.
////     * НормаЧасов        - Число - норма часов по всем видам времени за день.
////     * ПериодРегистрации - Дата  - период в котором были зарегистрированы данные о времени.
////     * ЧасовПлан		   - Число - плановое количество часов.
////     * ДнейПлан		   - Число - плановое количество дней, в случае сводной регистрации планового времени, может быть
////                              меньше 1.
////
//Процедура ВИЛС_СоздатьВТДанныеУчетаРабочегоВремениСотрудников(МенеджерВременныхТаблиц, ТолькоРазрешенные, ПараметрыПолученияДанныхОВремени) Экспорт
//	ПараметрыПолученияДанныхОВремениСлужебный = ПараметрыПолученияДанныхУчетаВремени();
//	
//	ЗаполнитьЗначенияСвойств(ПараметрыПолученияДанныхОВремениСлужебный, ПараметрыПолученияДанныхОВремени);
//	
//	Запрос = ЗапросВТДанныеУчетаРабочегоВремениСотрудников(ТолькоРазрешенные, ПараметрыПолученияДанныхОВремениСлужебный);
//	
//	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
//	
//	//begin fix Клещ А.Н. 04.07.2019  
//	ЗаполнитьДатыВПараметрах(Запрос,МенеджерВременныхТаблиц);
//	//end fix Клещ А.Н. 04.07.2019
//	
//	Запрос.Выполнить();
//КонецПроцедуры

//&Вместо("СоздатьВТПлановоеВремя")
//// Помещает в менеджер временных таблиц временную таблицу ВТПлановоеВремя с данными учета времени сотрудников.
////	
//// Параметры:
////  МенеджерВременныхТаблиц  - МенеджерВременныхТаблиц - обязательно содержащий в себе таблицы:
////     * ВТСотрудники (имя временной таблицы определяется в параметре ПараметрыПолученияДанныхОВремени) - временная
////     таблица - обязательно содержит поля.
////        ** Сотрудник         - СправочникСсылка.Сотрудники - сотрудник, по которому нужно получить данные.
////        ** Месяц 	           - Дата - месяц, за который нужно получить данные.
////        ** ДатаАктуальности  - Дата - период регистрации. Будут учитываться только те данные о времени, 
////										которые зарегистрированы не позже переданного значения.
////        ** ДатаНачала 	   - Дата - ограничивает период получения данных внутри месяца.
////        ** ДатаОкончания 	   - Дата - ограничивает период получения данных внутри месяца.
////  ТолькоРазрешенные - Булево - определяет, будет ли производится попытка получить данные, на которые у пользователя
////                               нет прав.
////								 Используется когда данные необходимо получать целостно.
////  ПараметрыПолученияДанныхОВремени - Структура - структура с полями (см. функцию
////                                                 ПараметрыДляСоздатьВТПлановоеВремяСотрудников).
////
//// Результат выполнения - 
////	Помещает в МенеджерВременныхТаблиц таблицу ВТДанныеУчетаРабочегоВремениСотрудников с полями.
////     * Сотрудник                - СправочникСсылка.Сотрудники - сотрудник.
////     * Период      	          - Дата - дата за которую получены данные.
////     * ПериодРегистрацииВремени - Дата  - период в котором были зарегистрированы данные о времени.
////     * Дней                     - Число - в случае сводной регистрации времени может быть меньше 1.
////     * Часов			          - Число - количество плановых часов по виду времени за день.
////     * ВидУчетаВремени          - СправочникСсылка.ВидыИспользованияРабочегоВремени - вид использования рабочего
////                                                                                      времени.
////     * ВЦеломЗаПериод           - Булево - признак того, что данные были зарегистрированы сводно.
////	   * ТолькоПлановоеВремя      - Булево - если данные получены в целом за месяц, то за те дни когда сотрудник еще не
////	                                         был принят в организацию этот признак выставляется в истину.
////     * НормаЧасов               - Число - норма часов, может отличаться от значения поля  Часов, если сотрудник
////                                          работает по графику неполного времени.
////
//Процедура ВИЛС_СоздатьВТПлановоеВремя(МенеджерВременныхТаблиц, ТолькоРазрешенные, ПараметрыПолученияПлановогоВремени) Экспорт
//	ПараметрыПолученияДанныхОВремени = ПараметрыПолученияДанныхОВремениСлужебный();
//	
//	ПараметрыПолученияДанныхУчетаВремени = ПараметрыПолученияПлановыхДанныхУчетаВремени();
//	
//	ПараметрыПостроенияЗапроса = ПараметрыПостроенияЗапросаКДаннымУчетаВремени();
//	
//	ПараметрыПолученияДанныхУчетаВремени.НеучитываемыеРегистраторы = ПараметрыПолученияПлановогоВремени.НеучитываемыеРегистраторы;
//	ПараметрыПолученияДанныхУчетаВремени.ОтноситьПереходящуюЧастьСменыКДнюНачала = ПараметрыПолученияПлановогоВремени.ОтноситьПереходящуюЧастьСменыКДнюНачала;
//	
//	ПараметрыПостроенияЗапроса.ИмяВТИсточникДанных = ПараметрыПолученияПлановогоВремени.ИмяВТСотрудники;
//	ПараметрыПостроенияЗапроса.ИмяВТРезультат = "ВТПлановоеВремя";
//	
//	ЗапросВТРезультат = СоздатьЗапросПолученияПлановыхДанныхУчетаВремени(ПараметрыПолученияДанныхУчетаВремени, ПараметрыПостроенияЗапроса);	

//	ЗапросВТРезультат.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
//	
//	//begin fix Клещ А.Н. 04.07.2019  
//	ЗаполнитьДатыВПараметрах(ЗапросВТРезультат,МенеджерВременныхТаблиц);
//	//end fix Клещ А.Н. 04.07.2019
//	
//	ЗапросВТРезультат.Выполнить();
//	
//КонецПроцедуры

//Процедура ЗаполнитьДатыВПараметрах(Запрос,МенеджерВременныхТаблиц,ИмяТаблицы="ВТСотрудники")
//	
//	//begin fix Клещ А.Н. 28.06.2019
//	Организация = Справочники.Организации.НайтиПоНаименованию("ОАО ""ВИЛС""");
//	Если ВИЛС_Служебный.ИспользуютсяОсобыеУсловияТруда(Организация) Тогда
//		ЗапросВТ = Новый Запрос;
//		ЗапросВТ.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
//		ЗапросВТ.Текст = 
//		"ВЫБРАТЬ
//		|	МИНИМУМ(ВТСотрудники.ДатаНачала) КАК ДатаНачала,
//		|	МАКСИМУМ(ВТСотрудники.ДатаОкончания) КАК ДатаОкончания
//		|ИЗ
//		|	"+ИмяТаблицы+" КАК ВТСотрудники";
//		Выборка = ЗапросВТ.Выполнить().Выбрать();
//		
//		Выборка.Следующий();
//		
//		Запрос.УстановитьПараметр("ДатаНачала",?(Выборка.ДатаНачала = NULL,Дата(2017,1,1),НачалоМесяца(Выборка.ДатаНачала)));
//		Запрос.УстановитьПараметр("ДатаОкончания",?(Выборка.ДатаНачала = NULL,КонецМесяца(ТекущаяДата()),КонецМесяца(Выборка.ДатаОкончания)));
//	КонецЕсли;
//	//end fix Клещ А.Н. 28.06.2019
//КонецПроцедуры

&Вместо("ЗапросВТДанныеУчетаВремениИСостоянийСотрудников")
Функция ВИЛС_ЗапросВТДанныеУчетаВремениИСостоянийСотрудников(ТолькоРазрешенные, ПараметрыПолученияДанных, ДляСКД = Ложь) 	
	ЗапросРезультат = Новый Запрос;
	
	ЗапросВТПериодыРаботыСотрудников = ЗапросВТПериодыРаботыСотрудников(ТолькоРазрешенные, ПараметрыПолученияДанных);
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТПериодыРаботыСотрудников);	
		
	ЗапросВТМесяцы = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВтПериоды(
						ПараметрыПолученияДанных.МесяцДатаНачала, 
						ПараметрыПолученияДанных.МесяцДатаОкончания, 
						"МЕСЯЦ", 
						"Месяц", 
						"ВТМесяцы");
						
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТМесяцы);	
	
	ЗапросВТСотрудникиМесяцы = Новый Запрос;
	ЗапросВТСотрудникиМесяцы.Текст = 	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыРаботыСотрудников.Сотрудник,
	|	ПериодыРаботыСотрудников.Сотрудник.ГоловнойСотрудник КАК ГоловнойСотрудник,
	|	Месяцы.Месяц,
	|	ВЫБОР
	|		КОГДА &ДатаНачала > Месяцы.Месяц
	|			ТОГДА &ДатаНачала
	|		ИНАЧЕ Месяцы.Месяц
	|	КОНЕЦ КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА &ДатаОкончания < КОНЕЦПЕРИОДА(Месяцы.Месяц, МЕСЯЦ)
	|			ТОГДА &ДатаОкончания
	|		ИНАЧЕ КОНЕЦПЕРИОДА(Месяцы.Месяц, МЕСЯЦ)
	|	КОНЕЦ КАК ДатаОкончания,
	|	&ДатаАктуальности КАК ДатаАктуальности
	|ПОМЕСТИТЬ ВТСотрудникиМесяцы
	|ИЗ
	|	ВТМесяцы КАК Месяцы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериодыРаботыСотрудников КАК ПериодыРаботыСотрудников
	|		ПО (ИСТИНА)";

	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТСотрудникиМесяцы);
	
	ФильтрПолученияГрафиков = ЗарплатаКадрыПериодическиеРегистры.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТПериодыРаботыСотрудников", "Сотрудник");
	ЗапросВТПериодыГрафиков = ЗарплатаКадрыПериодическиеРегистры.ЗапросВТПериодыИмяРегистра("ГрафикРаботыСотрудников", Истина, ФильтрПолученияГрафиков, ,"ВТПериодыДействияГрафиковДляКалендарей");
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТПериодыГрафиков);
	
	ЗапросВТСоответствиеСостоянийВидамУчетаВремени = ЗапросВТСоответствиеСостоянийВидамУчетаВремени();
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТСоответствиеСостоянийВидамУчетаВремени);
	
	ЗапросВТДатыСостояний = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВтПериоды(ПараметрыПолученияДанных.ДатаНачала, ПараметрыПолученияДанных.ДатаОкончания, "ДЕНЬ", "Дата", "ВТДатыСостояний");
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТДатыСостояний);

	ПараметрыПолученияДанныхОВремени = ПараметрыПолученияДанныхУчетаВремени();
	
	ПараметрыПолученияДанныхОВремени.ДатаНачала = ПараметрыПолученияДанных.ДатаНачала;
	ПараметрыПолученияДанныхОВремени.ДатаОкончания = ПараметрыПолученияДанных.ДатаОкончания;
	ПараметрыПолученияДанныхОВремени.УчитыватьТолькоИндивидуальныеСведения = Ложь;
	ПараметрыПолученияДанныхОВремени.ПолучатьДанныеФакт = Истина;	
	ПараметрыПолученияДанныхОВремени.ПолучатьДанныеПлан = ПараметрыПолученияДанных.РассчитыватьПлановоеВремя;
	ПараметрыПолученияДанныхОВремени.ПолучатьДанныеНорма = Истина;
	ПараметрыПолученияДанныхОВремени.ИспользоватьУжеРассчитанныеДанные = ПараметрыПолученияДанных.ПолучатьУжеРассчитанныеДанные;
	ПараметрыПолученияДанныхОВремени.ФормироватьПриНаличииРассчитанныхДанных = Истина;
	ПараметрыПолученияДанныхОВремени.ПолучатьУсловияТрудаИТерритории = ПараметрыПолученияДанных.ПолучатьУсловияТрудаИТерритории;
	ПараметрыПолученияДанныхОВремени.УчитыватьТабльныеДанныеОТерриториях = ПараметрыПолученияДанных.УчитыватьТабльныеДанныеОТерриториях;
	ПараметрыПолученияДанныхОВремени.ПолучатьНормуВремениЗаПолныйМесяц = Ложь;
	ПараметрыПолученияДанныхОВремени.НеучитываемыеРегистраторы = ПараметрыПолученияДанных.НеучитываемыеРегистраторы;
	ПараметрыПолученияДанныхОВремени.ИмяВТСотрудники = "ВТСотрудникиМесяцы";
	ПараметрыПолученияДанныхОВремени.ОтноситьПереходящуюЧастьСменыКДнюНачала = ПараметрыПолученияДанных.ОтноситьПереходящуюЧастьСменыКДнюНачала;

	ЗапросВТДанныеУчетаРабочегоВремениСотрудников = ЗапросВТДанныеУчетаРабочегоВремениСотрудников(ТолькоРазрешенные, ПараметрыПолученияДанныхОВремени, ДляСКД);
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросВТДанныеУчетаРабочегоВремениСотрудников);
	
	Если ПараметрыПолученияДанных.ПолучатьУсловияТрудаИТерритории Тогда
		ОписаниеОтбора = ОписаниеТаблицыОтбораДляЗапросВТПериодыДействияТерриторий();
		ОписаниеОтбора.ИмяТаблицы = "ВТСотрудникиМесяцы";
		
		ОписаниеИсточникаДанныхОВремени = ОписаниеИсточникаДанныхОВремениДляЗапросВТПериоды();
		ОписаниеИсточникаДанныхОВремени.ИмяТаблицы = "ВТДанныеУчетаРабочегоВремениСотрудников";
		
		ЗапросПериодыТерриторий = ЗапросВТПериодыТерриторий(ТолькоРазрешенные, ОписаниеОтбора, ОписаниеИсточникаДанныхОВремени);
		ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьЗапросы(ЗапросРезультат, ЗапросПериодыТерриторий);
	КонецЕсли;	
	
	 //begin fix Клещ А.Н. 28.06.2019 
	Организация = Справочники.Организации.НайтиПоНаименованию("ОАО ""ВИЛС""");
	
	Если ВИЛС_Служебный.ИспользуютсяОсобыеУсловияТруда(Организация) Тогда
		
				ТекстЗапросаВТДанныеУчетаВремениПоСостояниям = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СотрудникиМесяцы.Сотрудник КАК Сотрудник,
		|	СостоянияСотрудниковСрезПоследних.Состояние КАК Состояние,
		|	&ДатаНачала КАК НачалоПериода,
		|	ВЫБОР
		|		КОГДА СостоянияСотрудниковСрезПоследних.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ СостоянияСотрудниковСрезПоследних.ДействуетДо > &ДатаОкончания
		|			ТОГДА ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						ТОГДА ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, 1)
		|					ИНАЧЕ &ДатаОкончания
		|				КОНЕЦ
		|		ИНАЧЕ СостоянияСотрудниковСрезПоследних.ДействуетДо
		|	КОНЕЦ КАК ОкончаниеПериода,
		|	СостоянияСотрудниковСрезПоследних.ВидВремени КАК ВидВремени
		|ПОМЕСТИТЬ ВТСостоянияСотрудников
		|ИЗ
		|	РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиМесяцы КАК СотрудникиМесяцы
		|		ПО СостоянияСотрудниковСрезПоследних.Сотрудник = СотрудникиМесяцы.ГоловнойСотрудник
		|			И (СостоянияСотрудниковСрезПоследних.Период <= &ДатаНачала)
		|			И (СостоянияСотрудниковСрезПоследних.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ СостоянияСотрудниковСрезПоследних.ДействуетДо >= &ДатаНачала)
		|			И (СостоянияСотрудниковСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение))
		|			И (СостоянияСотрудниковСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа))
		|			И (СостоянияСотрудниковСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник,
		|	СостоянияСотрудников.Состояние,
		|	СостоянияСотрудников.Период,
		|	ВЫБОР
		|		КОГДА СостоянияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ СостоянияСотрудников.ДействуетДо > &ДатаОкончания
		|			ТОГДА ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						ТОГДА ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, 1)
		|					ИНАЧЕ &ДатаОкончания
		|				КОНЕЦ
		|		ИНАЧЕ СостоянияСотрудников.ДействуетДо
		|	КОНЕЦ,
		|	СостоянияСотрудников.ВидВремени
		|ИЗ
		|	ВТСотрудникиМесяцы КАК Сотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудников
		|		ПО Сотрудники.ГоловнойСотрудник = СостоянияСотрудников.Сотрудник
		|			И (СостоянияСотрудников.Период > &ДатаНачала)
		|			И Сотрудники.ДатаНачала <= СостоянияСотрудников.Период
		|			И (ДОБАВИТЬКДАТЕ(Сотрудники.ДатаОкончания, ДЕНЬ, 1) >= СостоянияСотрудников.Период)
		|			И (СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение))
		|			И (СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа))
		|			И (СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Сотрудник КАК Сотрудник,
		|	Т.Дата КАК Дата,
		|	Т.ВидУчетаВремени КАК ВидУчетаВремени,
		|	Т.Дни КАК Дни,
		|	Т.Часы КАК Часы,
		|	Т.НормаЧасов КАК НормаЧасов,
		|	Т.Отклонение КАК Отклонение,
		|	Т.Территория КАК Территория,
		|	ВЫБОР
		|		КОГДА Т.ВидУчетаВремени.БуквенныйКод = ""Я""
		|				ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""Н""
		|				ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""ВМ""
		|				ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""ОТ""
		|				ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""ОД""
		|				ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""ОЖ""
		|				ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""Р""
		|               ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""Б""
		|               ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""ВЧ""
		|               ИЛИ Т.ВидУчетаВремени.БуквенныйКод = ""В""
		|			ТОГДА ДанныеУсловийТруда.УсловиеТруда
		|		ИНАЧЕ  ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
		|	КОНЕЦ КАК УсловияТруда,
		|	Т.Смена КАК Смена,
		|	Т.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
		|	Т.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены
		|ПОМЕСТИТЬ ВТДанныеУчетаВремениПоСостояниям
		|ИЗ
		|	(ВЫБРАТЬ
		|		СостоянияСотрудников.Сотрудник КАК Сотрудник,
		|		ДатыСостояний.Дата КАК Дата,
		|		ВЫБОР
		|			КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|					И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|					И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Праздники
		|				ТОГДА ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени
		|			КОГДА (ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|						И ЕСТЬNULL(НормаВремениСотрудников.ДниПлан, 0) = 0
		|					ИЛИ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Праздники)
		|					И (НЕ СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени В (&ВидыВремениСплошнойРегистрации)
		|						И &ВыделятьВыходныеВПериодыОтклонений)
		|				ТОГДА ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени
		|			КОГДА СостоянияСотрудников.ВидВремени <> ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.ПустаяСсылка)
		|				ТОГДА СостоянияСотрудников.ВидВремени
		|			ИНАЧЕ СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени
		|		КОНЕЦ КАК ВидУчетаВремени,
		|		ВЫБОР
		|			КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|					И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|					И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Праздники
		|				ТОГДА ДанныеУчетаОтклоненийСотрудников.Дней
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК Дни,
		|		ВЫБОР
		|			КОГДА НЕ &УчитыватьЧасыОтклонений
		|					И (ОписаниеВидовВремени.Целосменное
		|						ИЛИ СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени В (&ВидыВремениСплошнойРегистрации))
		|				ТОГДА 0
		|			КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|					И ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени <> &Выходной
		|				ТОГДА ДанныеУчетаОтклоненийСотрудников.Часов
		|			ИНАЧЕ ЕСТЬNULL(НормаВремениСотрудников.ЧасыПлан, 0)
		|		КОНЕЦ КАК Часы,
		|		ВЫБОР
		|			КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|				ТОГДА ДанныеУчетаОтклоненийСотрудников.НормаЧасов
		|			ИНАЧЕ ЕСТЬNULL(НормаВремениСотрудников.ЧасыНорма, 0)
		|		КОНЕЦ КАК НормаЧасов,
		|		ВЫБОР
		|			КОГДА ОписаниеВидовВремени.Целосменное
		|				ТОГДА ИСТИНА
		|			КОГДА ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|					И ДанныеУчетаОтклоненийСотрудников.ДнейПлан <> 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК Отклонение,
		|		ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК Территория,
		|		ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка) КАК УсловияТруда,
		|		ЗНАЧЕНИЕ(Справочник.СменыРаботыСотрудников.ПустаяСсылка) КАК Смена,
		|		ЛОЖЬ КАК ПереходящаяЧастьПредыдущейСмены,
		|		ЛОЖЬ КАК ПереходящаяЧастьТекущейСмены
		|	ИЗ
		|		ВТСостоянияСотрудников КАК СостоянияСотрудников
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеСостоянийВидамУчетаВремени КАК СоответствиеСостоянийСотрудниковДаннымУчетаВремени
		|			ПО СостоянияСотрудников.Состояние = СоответствиеСостоянийСотрудниковДаннымУчетаВремени.Состояние
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыИспользованияРабочегоВремени КАК ОписаниеВидовВремени
		|			ПО (СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени = ОписаниеВидовВремени.Ссылка)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыСостояний КАК ДатыСостояний
		|			ПО СостоянияСотрудников.НачалоПериода <= ДатыСостояний.Дата
		|				И СостоянияСотрудников.ОкончаниеПериода >= ДатыСостояний.Дата
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеУчетаРабочегоВремениСотрудников КАК ДанныеУчетаОтклоненийСотрудников
		|			ПО СостоянияСотрудников.Сотрудник = ДанныеУчетаОтклоненийСотрудников.Сотрудник
		|				И (ДатыСостояний.Дата = ДанныеУчетаОтклоненийСотрудников.Дата)
		|				И (СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени = ДанныеУчетаОтклоненийСотрудников.ОсновноеВремя
		|					ИЛИ ДанныеУчетаОтклоненийСотрудников.ОсновноеВремя = &Выходной
		|					ИЛИ ДанныеУчетаОтклоненийСотрудников.ОсновноеВремя = &Праздники)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаВремени КАК НормаВремениСотрудников
		|			ПО СостоянияСотрудников.Сотрудник = НормаВремениСотрудников.Сотрудник
		|				И (ДатыСостояний.Дата = НормаВремениСотрудников.Дата)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеУчетаРабочегоВремениСотрудников.Сотрудник,
		|		ДанныеУчетаРабочегоВремениСотрудников.Дата,
		|		ДанныеУчетаРабочегоВремениСотрудников.ВидУчетаВремени,
		|		ДанныеУчетаРабочегоВремениСотрудников.Дней,
		|		ДанныеУчетаРабочегоВремениСотрудников.Часов,
		|		ДанныеУчетаРабочегоВремениСотрудников.НормаЧасов,
		|		ВЫБОР
		|			КОГДА ДанныеУчетаРабочегоВремениСотрудников.ДнейПлан = 0
		|					И ДанныеУчетаРабочегоВремениСотрудников.ЧасовПлан = 0
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ,
		|		ДанныеУчетаРабочегоВремениСотрудников.Территория,
		|		ДанныеУчетаРабочегоВремениСотрудников.УсловияТруда,
		|		ДанныеУчетаРабочегоВремениСотрудников.Смена,
		|		ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены,
		|		ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьТекущейСмены
		|	ИЗ
		|		ВТДанныеУчетаРабочегоВремениСотрудников КАК ДанныеУчетаРабочегоВремениСотрудников
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСостоянияСотрудников КАК СостоянияСотрудников
		|			ПО (СостоянияСотрудников.Сотрудник = ДанныеУчетаРабочегоВремениСотрудников.Сотрудник)
		|				И (СостоянияСотрудников.НачалоПериода <= ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|							И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|						ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|					ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|				КОНЕЦ)
		|				И (СостоянияСотрудников.ОкончаниеПериода >= ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|							И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|						ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|					ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|				КОНЕЦ)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСостоянияСотрудников КАК СостояниеГоловныхСотрудников
		|			ПО (СостояниеГоловныхСотрудников.Сотрудник = ДанныеУчетаРабочегоВремениСотрудников.Сотрудник.ГоловнойСотрудник)
		|				И (СостояниеГоловныхСотрудников.НачалоПериода <= ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|							И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|						ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|					ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|				КОНЕЦ)
		|				И (СостояниеГоловныхСотрудников.ОкончаниеПериода >= ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|							И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|						ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|					ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|				КОНЕЦ)
		|	ГДЕ
		|		СостоянияСотрудников.Сотрудник ЕСТЬ NULL
		|		И СостояниеГоловныхСотрудников.Сотрудник ЕСТЬ NULL) КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Периоды.Период КАК Период,
		|			УсловияТруда.Сотрудник КАК Сотрудник,
		|			УсловияТруда.УсловиеТруда КАК УсловиеТруда
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.Сотрудник КАК Сотрудник,
		|				ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.УсловияТруда КАК УсловиеТруда,
		|				&ДатаНачала КАК Период
		|			ИЗ
		|				РегистрСведений.ВИЛС_ДанныеУсловийТрудаПоСотрудникам.СрезПоследних(
		|						&ДатаНачала,
		|						Сотрудник В
		|							(ВЫБРАТЬ
		|								ВТПараметрыПолученияДанныхПоСотрудникам.Сотрудник
		|							ИЗ
		|								ВТПараметрыПолученияДанныхПоСотрудникам)) КАК ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.УсловияТруда,
		|				ВИЛС_ДанныеПоУсловиямТрудаПоСотрудникамСрезПоследних.Сотрудник
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Сотрудник,
		|				ВИЛС_ДанныеУсловийТрудаПоСотрудникам.УсловияТруда,
		|				ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Период
		|			ИЗ
		|				РегистрСведений.ВИЛС_ДанныеУсловийТрудаПоСотрудникам КАК ВИЛС_ДанныеУсловийТрудаПоСотрудникам
		|			ГДЕ
		|				ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|				И ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Сотрудник В
		|						(ВЫБРАТЬ
		|							ВТПараметрыПолученияДанныхПоСотрудникам.Сотрудник
		|						ИЗ
		|							ВТПараметрыПолученияДанныхПоСотрудникам)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Период,
		|				ВИЛС_ДанныеУсловийТрудаПоСотрудникам.Сотрудник,
		|				ВИЛС_ДанныеУсловийТрудаПоСотрудникам.УсловияТруда) КАК УсловияТруда
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d) КАК Период
		|				ИЗ
		|					(ВЫБРАТЬ
		|						0 КАК a
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						1
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						2
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						3
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						4
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						5
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						6
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						7
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						8
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						9) КАК aa
		|						ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							0 КАК b
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							1
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							2
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							3
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							4
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							5
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							6
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							7
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							8
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							9) КАК bb
		|						ПО (ИСТИНА)
		|						ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							0 КАК c
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							1
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							2
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							3
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							4
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							5
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							6
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							7
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							8
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							9) КАК cc
		|						ПО (ИСТИНА)
		|						ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							0 КАК d
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							1
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							2
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							3
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							4
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							5
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							6
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							7
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							8
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							9) КАК dd
		|						ПО (ИСТИНА)
		|				ГДЕ
		|					aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d <= РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ)) КАК Периоды
		|				ПО (Периоды.Период >= УсловияТруда.Период)) КАК ДанныеУсловийТруда
		|		ПО Т.Дата = ДанныеУсловийТруда.Период
		|			И Т.Сотрудник = ДанныеУсловийТруда.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеУчетаВремениПоСостояниям.Сотрудник КАК Сотрудник,
		|	ДанныеУчетаВремениПоСостояниям.Дата КАК Дата,
		|	ВЫБОР
		|		КОГДА ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени = &ОсновнойОтпуск
		|				И ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
		|			ТОГДА &Выходной
		|		ИНАЧЕ ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени
		|	КОНЕЦ КАК ВидУчетаВремени,
		|	СУММА(ДанныеУчетаВремениПоСостояниям.Дни) КАК Дни,
		|	СУММА(ДанныеУчетаВремениПоСостояниям.Часы) КАК Часы,
		|	МИНИМУМ(ДанныеУчетаВремениПоСостояниям.Отклонение) КАК Отклонение,
		|	ПериодыРаботыСотрудников.Организация КАК Организация,
		|	ПериодыРаботыСотрудников.Подразделение КАК Подразделение,
		|	ПериодыРаботыСотрудников.Должность КАК Должность,
		|	МАКСИМУМ(ДанныеУчетаВремениПоСостояниям.НормаЧасов) КАК НормаЧасов,
		|	ВЫБОР
		|		КОГДА ПериодыДействияТерриторий.Сотрудник ЕСТЬ NULL
		|			ТОГДА ДанныеУчетаВремениПоСостояниям.Территория
		|		ИНАЧЕ ПериодыДействияТерриторий.Территория
		|	КОНЕЦ КАК Территория,
		|	ДанныеУчетаВремениПоСостояниям.УсловияТруда КАК УсловияТруда,
		|	ДанныеУчетаВремениПоСостояниям.Смена КАК Смена,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены
		|ПОМЕСТИТЬ ВТДанныеУчетаВремениИСостоянийСотрудников
		|ИЗ
		|	ВТПериодыРаботыСотрудников КАК ПериодыРаботыСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеУчетаВремениПоСостояниям КАК ДанныеУчетаВремениПоСостояниям
		|		ПО ПериодыРаботыСотрудников.Сотрудник = ДанныеУчетаВремениПоСостояниям.Сотрудник
		|			И ПериодыРаботыСотрудников.ДатаНачала <= ДанныеУчетаВремениПоСостояниям.Дата
		|			И ПериодыРаботыСотрудников.ДатаОкончания >= ДанныеУчетаВремениПоСостояниям.Дата
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыТерриторий КАК ПериодыДействияТерриторий
		|		ПО (ДанныеУчетаВремениПоСостояниям.Сотрудник = ПериодыДействияТерриторий.Сотрудник)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата >= ПериодыДействияТерриторий.ДатаНачала)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата <= ПериодыДействияТерриторий.ДатаОкончания
		|				ИЛИ ПериодыДействияТерриторий.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыДействияГрафиковДляКалендарей КАК ПериодыДействияГрафиковДляКалендарей
		|		ПО (ДанныеУчетаВремениПоСостояниям.Сотрудник = ПериодыДействияГрафиковДляКалендарей.Сотрудник)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата МЕЖДУ ПериодыДействияГрафиковДляКалендарей.НачалоПериода И ПериодыДействияГрафиковДляКалендарей.КонецПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
		|		ПО (ПериодыДействияГрафиковДляКалендарей.ГрафикРаботы = ГрафикиРаботыСотрудников.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|		ПО (ГрафикиРаботыСотрудников.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата = ДанныеПроизводственногоКалендаря.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеУчетаВремениПоСостояниям.Сотрудник,
		|	ДанныеУчетаВремениПоСостояниям.Дата,
		|	ВЫБОР
		|		КОГДА ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени = &ОсновнойОтпуск
		|				И ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
		|			ТОГДА &Выходной
		|		ИНАЧЕ ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени
		|	КОНЕЦ,
		|	ПериодыРаботыСотрудников.Организация,
		|	ПериодыРаботыСотрудников.Подразделение,
		|	ПериодыРаботыСотрудников.Должность,
		|	ДанныеУчетаВремениПоСостояниям.УсловияТруда,
		|	ДанныеУчетаВремениПоСостояниям.Смена,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьПредыдущейСмены,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьТекущейСмены,
		|	ВЫБОР
		|		КОГДА ПериодыДействияТерриторий.Сотрудник ЕСТЬ NULL
		|			ТОГДА ДанныеУчетаВремениПоСостояниям.Территория
		|		ИНАЧЕ ПериодыДействияТерриторий.Территория
		|	КОНЕЦ";
	Иначе
		
		ТекстЗапросаВТДанныеУчетаВремениПоСостояниям = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СотрудникиМесяцы.Сотрудник КАК Сотрудник,
		|	СостоянияСотрудниковСрезПоследних.Состояние КАК Состояние,
		|	&ДатаНачала КАК НачалоПериода,
		|	ВЫБОР
		|		КОГДА СостоянияСотрудниковСрезПоследних.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ СостоянияСотрудниковСрезПоследних.ДействуетДо > &ДатаОкончания
		|			ТОГДА ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						ТОГДА ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, 1)
		|					ИНАЧЕ &ДатаОкончания
		|				КОНЕЦ
		|		ИНАЧЕ СостоянияСотрудниковСрезПоследних.ДействуетДо
		|	КОНЕЦ КАК ОкончаниеПериода,
		|	СостоянияСотрудниковСрезПоследних.ВидВремени КАК ВидВремени
		|ПОМЕСТИТЬ ВТСостоянияСотрудников
		|ИЗ
		|	РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиМесяцы КАК СотрудникиМесяцы
		|		ПО СостоянияСотрудниковСрезПоследних.Сотрудник = СотрудникиМесяцы.ГоловнойСотрудник
		|			И (СостоянияСотрудниковСрезПоследних.Период <= &ДатаНачала)
		|			И (СостоянияСотрудниковСрезПоследних.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ СостоянияСотрудниковСрезПоследних.ДействуетДо >= &ДатаНачала)
		|			И (СостоянияСотрудниковСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение))
		|			И (СостоянияСотрудниковСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа))
		|			И (СостоянияСотрудниковСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник,
		|	СостоянияСотрудников.Состояние,
		|	СостоянияСотрудников.Период,
		|	ВЫБОР
		|		КОГДА СостоянияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ СостоянияСотрудников.ДействуетДо > &ДатаОкончания
		|			ТОГДА ВЫБОР
		|					КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						ТОГДА ДОБАВИТЬКДАТЕ(&ДатаОкончания, ДЕНЬ, 1)
		|					ИНАЧЕ &ДатаОкончания
		|				КОНЕЦ
		|		ИНАЧЕ СостоянияСотрудников.ДействуетДо
		|	КОНЕЦ,
		|	СостоянияСотрудников.ВидВремени
		|ИЗ
		|	ВТСотрудникиМесяцы КАК Сотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудников
		|		ПО Сотрудники.ГоловнойСотрудник = СостоянияСотрудников.Сотрудник
		|			И (СостоянияСотрудников.Период > &ДатаНачала)
		|			И Сотрудники.ДатаНачала <= СостоянияСотрудников.Период
		|			И (ДОБАВИТЬКДАТЕ(Сотрудники.ДатаОкончания, ДЕНЬ, 1) >= СостоянияСотрудников.Период)
		|			И (СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение))
		|			И (СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа))
		|			И (СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияСотрудников.Сотрудник КАК Сотрудник,
		|	ДатыСостояний.Дата КАК Дата,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|				И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|				И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Праздники
		|			ТОГДА ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени
		|		КОГДА (ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|					И ЕСТЬNULL(НормаВремениСотрудников.ДниПлан, 0) = 0
		|				ИЛИ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Праздники)
		|				И (НЕ СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени В (&ВидыВремениСплошнойРегистрации)
		|					И &ВыделятьВыходныеВПериодыОтклонений)
		|			ТОГДА ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени
		|		КОГДА СостоянияСотрудников.ВидВремени <> ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.ПустаяСсылка)
		|			ТОГДА СостоянияСотрудников.ВидВремени
		|		ИНАЧЕ СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени
		|	КОНЕЦ КАК ВидУчетаВремени,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|				И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|				И НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Праздники
		|			ТОГДА ДанныеУчетаОтклоненийСотрудников.Дней
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Дни,
		|	ВЫБОР
		|		КОГДА НЕ &УчитыватьЧасыОтклонений
		|			И (ОписаниеВидовВремени.Целосменное
		|				ИЛИ СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени В (&ВидыВремениСплошнойРегистрации))
		|			ТОГДА 0
		|		КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|				И ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени <> &Выходной
		|			ТОГДА ДанныеУчетаОтклоненийСотрудников.Часов
		|		ИНАЧЕ ЕСТЬNULL(НормаВремениСотрудников.ЧасыПлан, 0)
		|	КОНЕЦ КАК Часы,
		|	ВЫБОР
		|		КОГДА НЕ ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени ЕСТЬ NULL
		|			ТОГДА ДанныеУчетаОтклоненийСотрудников.НормаЧасов
		|		ИНАЧЕ ЕСТЬNULL(НормаВремениСотрудников.ЧасыНорма, 0)
		|	КОНЕЦ КАК НормаЧасов,
		|	ВЫБОР
		|		КОГДА ОписаниеВидовВремени.Целосменное
		|			ТОГДА ИСТИНА
		|		КОГДА ДанныеУчетаОтклоненийСотрудников.ВидУчетаВремени = &Выходной
		|				И ДанныеУчетаОтклоненийСотрудников.ДнейПлан <> 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Отклонение,
		|	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка) КАК Территория,
		|	ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка) КАК УсловияТруда,
		|	ЗНАЧЕНИЕ(Справочник.СменыРаботыСотрудников.ПустаяСсылка) КАК Смена,
		|	ЛОЖЬ КАК ПереходящаяЧастьПредыдущейСмены,
		|	ЛОЖЬ КАК ПереходящаяЧастьТекущейСмены
		|ПОМЕСТИТЬ ВТДанныеУчетаВремениПоСостояниям
		|ИЗ
		|	ВТСостоянияСотрудников КАК СостоянияСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоответствиеСостоянийВидамУчетаВремени КАК СоответствиеСостоянийСотрудниковДаннымУчетаВремени
		|		ПО СостоянияСотрудников.Состояние = СоответствиеСостоянийСотрудниковДаннымУчетаВремени.Состояние
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыИспользованияРабочегоВремени КАК ОписаниеВидовВремени
		|		ПО (СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени = ОписаниеВидовВремени.Ссылка)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыСостояний КАК ДатыСостояний
		|		ПО СостоянияСотрудников.НачалоПериода <= ДатыСостояний.Дата
		|			И СостоянияСотрудников.ОкончаниеПериода >= ДатыСостояний.Дата
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеУчетаРабочегоВремениСотрудников КАК ДанныеУчетаОтклоненийСотрудников
		|		ПО СостоянияСотрудников.Сотрудник = ДанныеУчетаОтклоненийСотрудников.Сотрудник
		|			И (ДатыСостояний.Дата = ДанныеУчетаОтклоненийСотрудников.Дата)
		|			И (СоответствиеСостоянийСотрудниковДаннымУчетаВремени.ВидВремени = ДанныеУчетаОтклоненийСотрудников.ОсновноеВремя
		|				ИЛИ ДанныеУчетаОтклоненийСотрудников.ОсновноеВремя = &Выходной
		|				ИЛИ ДанныеУчетаОтклоненийСотрудников.ОсновноеВремя = &Праздники)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаВремени КАК НормаВремениСотрудников
		|		ПО СостоянияСотрудников.Сотрудник = НормаВремениСотрудников.Сотрудник
		|			И (ДатыСостояний.Дата = НормаВремениСотрудников.Дата)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеУчетаРабочегоВремениСотрудников.Сотрудник,
		|	ДанныеУчетаРабочегоВремениСотрудников.Дата,
		|	ДанныеУчетаРабочегоВремениСотрудников.ВидУчетаВремени,
		|	ДанныеУчетаРабочегоВремениСотрудников.Дней,
		|	ДанныеУчетаРабочегоВремениСотрудников.Часов,
		|	ДанныеУчетаРабочегоВремениСотрудников.НормаЧасов,
		|	ВЫБОР
		|		КОГДА ДанныеУчетаРабочегоВремениСотрудников.ДнейПлан = 0
		|				И ДанныеУчетаРабочегоВремениСотрудников.ЧасовПлан = 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ДанныеУчетаРабочегоВремениСотрудников.Территория,
		|	ДанныеУчетаРабочегоВремениСотрудников.УсловияТруда,
		|	ДанныеУчетаРабочегоВремениСотрудников.Смена,
		|	ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены,
		|	ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьТекущейСмены
		|ИЗ
		|	ВТДанныеУчетаРабочегоВремениСотрудников КАК ДанныеУчетаРабочегоВремениСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостоянияСотрудников КАК СостоянияСотрудников
		|		ПО (СостоянияСотрудников.Сотрудник = ДанныеУчетаРабочегоВремениСотрудников.Сотрудник)
		|			И (СостоянияСотрудников.НачалоПериода <= ВЫБОР
		|				КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|					ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|				ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|			КОНЕЦ)
		|			И (СостоянияСотрудников.ОкончаниеПериода >= ВЫБОР
		|				КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|					ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|				ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостоянияСотрудников КАК СостояниеГоловныхСотрудников
		|		ПО (СостояниеГоловныхСотрудников.Сотрудник = ДанныеУчетаРабочегоВремениСотрудников.Сотрудник.ГоловнойСотрудник)
		|			И (СостояниеГоловныхСотрудников.НачалоПериода <= ВЫБОР
		|				КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|					ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|				ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|			КОНЕЦ)
		|			И (СостояниеГоловныхСотрудников.ОкончаниеПериода >= ВЫБОР
		|				КОГДА &ОтноситьПереходящуюЧастьСменыКДнюНачала
		|						И ДанныеУчетаРабочегоВремениСотрудников.ПереходящаяЧастьПредыдущейСмены
		|					ТОГДА ДОБАВИТЬКДАТЕ(ДанныеУчетаРабочегоВремениСотрудников.Дата, ДЕНЬ, 1)
		|				ИНАЧЕ ДанныеУчетаРабочегоВремениСотрудников.Дата
		|			КОНЕЦ)
		|ГДЕ
		|	СостоянияСотрудников.Сотрудник ЕСТЬ NULL
		|	И СостояниеГоловныхСотрудников.Сотрудник ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеУчетаВремениПоСостояниям.Сотрудник КАК Сотрудник,
		|	ДанныеУчетаВремениПоСостояниям.Дата КАК Дата,
		|	ВЫБОР
		|		КОГДА ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени = &ОсновнойОтпуск
		|				И ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
		|			ТОГДА &Выходной
		|		ИНАЧЕ ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени
		|	КОНЕЦ КАК ВидУчетаВремени,
		|	СУММА(ДанныеУчетаВремениПоСостояниям.Дни) КАК Дни,
		|	СУММА(ДанныеУчетаВремениПоСостояниям.Часы) КАК Часы,
		|	МИНИМУМ(ДанныеУчетаВремениПоСостояниям.Отклонение) КАК Отклонение,
		|	ПериодыРаботыСотрудников.Организация КАК Организация,
		|	ПериодыРаботыСотрудников.Подразделение КАК Подразделение,
		|	ПериодыРаботыСотрудников.Должность КАК Должность,
		|	МАКСИМУМ(ДанныеУчетаВремениПоСостояниям.НормаЧасов) КАК НормаЧасов,
		|	ВЫБОР
		|		КОГДА ПериодыДействияТерриторий.Сотрудник ЕСТЬ NULL
		|			ТОГДА ДанныеУчетаВремениПоСостояниям.Территория
		|		ИНАЧЕ ПериодыДействияТерриторий.Территория
		|	КОНЕЦ КАК Территория,
		|	ДанныеУчетаВремениПоСостояниям.УсловияТруда КАК УсловияТруда,
		|	ДанныеУчетаВремениПоСостояниям.Смена КАК Смена,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьПредыдущейСмены КАК ПереходящаяЧастьПредыдущейСмены,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьТекущейСмены КАК ПереходящаяЧастьТекущейСмены
		|ПОМЕСТИТЬ ВТДанныеУчетаВремениИСостоянийСотрудников
		|ИЗ
		|	ВТПериодыРаботыСотрудников КАК ПериодыРаботыСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеУчетаВремениПоСостояниям КАК ДанныеУчетаВремениПоСостояниям
		|		ПО ПериодыРаботыСотрудников.Сотрудник = ДанныеУчетаВремениПоСостояниям.Сотрудник
		|			И ПериодыРаботыСотрудников.ДатаНачала <= ДанныеУчетаВремениПоСостояниям.Дата
		|			И ПериодыРаботыСотрудников.ДатаОкончания >= ДанныеУчетаВремениПоСостояниям.Дата
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыТерриторий КАК ПериодыДействияТерриторий
		|		ПО (ДанныеУчетаВремениПоСостояниям.Сотрудник = ПериодыДействияТерриторий.Сотрудник)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата >= ПериодыДействияТерриторий.ДатаНачала)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата <= ПериодыДействияТерриторий.ДатаОкончания
		|				ИЛИ ПериодыДействияТерриторий.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыДействияГрафиковДляКалендарей КАК ПериодыДействияГрафиковДляКалендарей
		|		ПО (ДанныеУчетаВремениПоСостояниям.Сотрудник = ПериодыДействияГрафиковДляКалендарей.Сотрудник)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата МЕЖДУ ПериодыДействияГрафиковДляКалендарей.НачалоПериода И ПериодыДействияГрафиковДляКалендарей.КонецПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
		|		ПО (ПериодыДействияГрафиковДляКалендарей.ГрафикРаботы = ГрафикиРаботыСотрудников.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|		ПО (ГрафикиРаботыСотрудников.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь)
		|			И (ДанныеУчетаВремениПоСостояниям.Дата = ДанныеПроизводственногоКалендаря.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеУчетаВремениПоСостояниям.Сотрудник,
		|	ДанныеУчетаВремениПоСостояниям.Дата,
		|	ВЫБОР
		|		КОГДА ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени = &ОсновнойОтпуск
		|				И ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
		|			ТОГДА &Выходной
		|		ИНАЧЕ ДанныеУчетаВремениПоСостояниям.ВидУчетаВремени
		|	КОНЕЦ,
		|	ПериодыРаботыСотрудников.Организация,
		|	ПериодыРаботыСотрудников.Подразделение,
		|	ПериодыРаботыСотрудников.Должность,
		|	ДанныеУчетаВремениПоСостояниям.УсловияТруда,
		|	ДанныеУчетаВремениПоСостояниям.Смена,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьПредыдущейСмены,
		|	ДанныеУчетаВремениПоСостояниям.ПереходящаяЧастьТекущейСмены,
		|	ВЫБОР
		|		КОГДА ПериодыДействияТерриторий.Сотрудник ЕСТЬ NULL
		|			ТОГДА ДанныеУчетаВремениПоСостояниям.Территория
		|		ИНАЧЕ ПериодыДействияТерриторий.Территория
		|	КОНЕЦ";
	КонецЕсли;
	//end fix Клещ А.Н. 28.06.2019

	Если Не ПараметрыПолученияДанных.ПолучатьУсловияТрудаИТерритории Тогда
		ЗаменяемыйТекст = "ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыТерриторий КАК ПериодыДействияТерриторий
							|		ПО (ДанныеУчетаВремениПоСостояниям.Сотрудник = ПериодыДействияТерриторий.Сотрудник)
							|			И (ДанныеУчетаВремениПоСостояниям.Дата >= ПериодыДействияТерриторий.ДатаНачала)
							|			И (ДанныеУчетаВремениПоСостояниям.Дата <= ПериодыДействияТерриторий.ДатаОкончания
							|				ИЛИ ПериодыДействияТерриторий.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))";	
					  
		ТекстЗапросаВТДанныеУчетаВремениПоСостояниям = СтрЗаменить(ТекстЗапросаВТДанныеУчетаВремениПоСостояниям, ЗаменяемыйТекст, "");			  
		
		ЗаменяемыйТекст = "ДанныеУчетаВремениПоСостояниям.УсловияТруда";
						  
		ТекстЗамены = "	ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)";	
		
		ТекстЗапросаВТДанныеУчетаВремениПоСостояниям = СтрЗаменить(ТекстЗапросаВТДанныеУчетаВремениПоСостояниям, ЗаменяемыйТекст, ТекстЗамены);	
		
		ЗаменяемыйТекст = "ВЫБОР
						|		КОГДА ПериодыДействияТерриторий.Сотрудник ЕСТЬ NULL
						|			ТОГДА ДанныеУчетаВремениПоСостояниям.Территория
						|		ИНАЧЕ ПериодыДействияТерриторий.Территория
						|	КОНЕЦ";
						  
		ТекстЗамены = "	ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)";	
		
		ТекстЗапросаВТДанныеУчетаВремениПоСостояниям = СтрЗаменить(ТекстЗапросаВТДанныеУчетаВремениПоСостояниям, ЗаменяемыйТекст, ТекстЗамены);						  
	КонецЕсли;	
	
		
	Если Не ТолькоРазрешенные Тогда
		ТекстЗапросаВТДанныеУчетаВремениПоСостояниям = СтрЗаменить(ТекстЗапросаВТДанныеУчетаВремениПоСостояниям, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;	

	ЗапросРезультат.УстановитьПараметр("РабочееВремя", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РабочееВремя"));
	ЗапросРезультат.УстановитьПараметр("Праздники", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Праздники"));
	ЗапросРезультат.УстановитьПараметр("Выходной", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ВыходныеДни"));
	ЗапросРезультат.УстановитьПараметр("ОсновнойОтпуск", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОсновнойОтпуск"));
	ЗапросРезультат.УстановитьПараметр("ДополнительныйОтпуск", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ДополнительныйОтпуск"));
	ЗапросРезультат.УстановитьПараметр("ВидыВремениСплошнойРегистрации", ВидыВремениСплошнойРегистрации());
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(ЗапросРезультат.Текст, ТекстЗапросаВТДанныеУчетаВремениПоСостояниям);
		
	Если ТипЗнч(ПараметрыПолученияДанных.ДатаНачала) = Тип("Строка") Тогда
		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "&ДатаНачала", ПараметрыПолученияДанных.ДатаНачала);
	Иначе
		ЗапросРезультат.УстановитьПараметр("ДатаНачала", ПараметрыПолученияДанных.ДатаНачала);
	КонецЕсли;	
	
	Если ТипЗнч(ПараметрыПолученияДанных.ДатаОкончания) = Тип("Строка") Тогда
		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "&ДатаОкончания", ПараметрыПолученияДанных.ДатаОкончания);
	Иначе
		ЗапросРезультат.УстановитьПараметр("ДатаОкончания", ПараметрыПолученияДанных.ДатаОкончания);
	КонецЕсли;	

	Если ТипЗнч(ПараметрыПолученияДанных.ДатаАктуальности) = Тип("Строка") Тогда
		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "&ДатаАктуальности", ПараметрыПолученияДанных.ДатаАктуальности);
	Иначе
		ЗапросРезультат.УстановитьПараметр("ДатаАктуальности", ПараметрыПолученияДанных.ДатаАктуальности);
	КонецЕсли;	
	
	Если ТипЗнч(ПараметрыПолученияДанных.ВыделятьВыходныеВПериодыОтклонений) = Тип("Строка") Тогда
		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "&ВыделятьВыходныеВПериодыОтклонений", ПараметрыПолученияДанных.ВыделятьВыходныеВПериодыОтклонений);
	Иначе
		ЗапросРезультат.УстановитьПараметр("ВыделятьВыходныеВПериодыОтклонений", ПараметрыПолученияДанных.ВыделятьВыходныеВПериодыОтклонений);
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыПолученияДанных.УчитыватьЧасыОтклонений) = Тип("Строка") Тогда
		ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "&УчитыватьЧасыОтклонений", ПараметрыПолученияДанных.УчитыватьЧасыОтклонений);
	Иначе
		ЗапросРезультат.УстановитьПараметр("УчитыватьЧасыОтклонений", ПараметрыПолученияДанных.УчитыватьЧасыОтклонений);
	КонецЕсли;
	
	ЗапросРезультат.Текст = СтрЗаменить(ЗапросРезультат.Текст, "ВТДанныеУчетаВремениИСостоянийСотрудников", ПараметрыПолученияДанных.ИмяВТРезультат);
	
	УстановитьПараметрВЗапросПолученияДанныхУчетаВремени(ЗапросРезультат, "ОтноситьПереходящуюЧастьСменыКДнюНачала", ПараметрыПолученияДанных.ОтноситьПереходящуюЧастьСменыКДнюНачала);
	
	Возврат ЗапросРезультат;
	
КонецФункции	
