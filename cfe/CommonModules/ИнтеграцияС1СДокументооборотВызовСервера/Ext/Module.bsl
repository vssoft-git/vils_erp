// Вызывается при изменении состояния согласования в ДО. Изменяет состояние на стороне ИС.
//
// Параметры:
//   Идентификатор - Строка - идентификатор связанного объекта ДО.
//   Тип - Строка - тип связанного объекта ДО.
//   Состояние - ПеречислениеСсылка.СостоянияСогласованияВДокументообороте - новое состояние, или
//             - Неопределено - при прерывании согласования.
//   ВызовИзФормыОбъекта - Булево - Истина, если изменение состояния вызвано пользователем из формы объекта.
//   ПредметСогласования - ЛюбаяСсылка - согласуемый объект, или
//                       - Неопределено - признак необходимости найти объект ИС по объекту ДО.
//   Установил - Строка - представление пользователя, установившего новое состояние.
//   ДатаУстановки - Дата - Дата установки нового состояния.
//
Процедура ВИЛС_ПриИзмененииУтверждения(Знач Идентификатор, Знач Тип, Знач Состояние, Знач ВызовИзФормыОбъекта,
	ПредметСогласования = Неопределено, Знач Установил = Неопределено, Знач ДатаУстановки = Неопределено) Экспорт
		
	// Ссылка на предмет в ИС может быть неизвестна, если вызов - из формы задачи ДО. Определим ее.
	Если ПредметСогласования = Неопределено Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	Объект КАК ПредметСогласования
			|ИЗ 
			|	РегистрСведений.ОбъектыИнтегрированныеС1СДокументооборотом КАК ОбъектыИнтегрированныеС1СДокументооборотом
			|ГДЕ 
			|	ТипОбъектаДокументооборота = &Тип
			|	И ИдентификаторОбъектаДокументооборота = &Идентификатор
			|");
		Запрос.УстановитьПараметр("Тип", Тип);
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ПредметСогласования = Выборка.ПредметСогласования;
		КонецЕсли;
	КонецЕсли;
	
	// На стороне ИС не следует выполнять действия при согласовании несвязанных объектов ДО.
	Если ПредметСогласования <> Неопределено Тогда
		ИнтеграцияС1СДокументооборотПереопределяемый.ВИЛС_ПриИзмененииУтверждения(
			ПредметСогласования, Состояние, ВызовИзФормыОбъекта);
	КонецЕсли;

КонецПроцедуры
