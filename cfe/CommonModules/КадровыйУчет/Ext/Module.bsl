// Вывод на печать приказа о приеме (Т-1)
&Вместо("ВывестиНаПечатьТ1")
Процедура ВИЛС_ВывестиНаПечатьТ1(ДокументРезультат, ДанныеСсылок, МакетПечатнойФормы, ИдентификаторыМакета = Неопределено, ОбъектыПечати = Неопределено) Экспорт
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПриеме";
	
	СотрудникиПериоды = Новый ТаблицаЗначений;
	СотрудникиПериоды.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	СотрудникиПериоды.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Для Каждого ДанныеНаПечать Из ДанныеСсылок Цикл
		
		Для Каждого ДанныеДетальныхЗаписей Из ДанныеНаПечать.Строки Цикл
			
			НоваяСтрока = СотрудникиПериоды.Добавить();
			НоваяСтрока.Период = ДанныеДетальныхЗаписей.РаботаДатаПриема;
			НоваяСтрока.Сотрудник = ДанныеДетальныхЗаписей.РаботаСотрудник;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СотрудникиПериоды", СотрудникиПериоды);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиПериоды.Период КАК Период,
		|	СотрудникиПериоды.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	&СотрудникиПериоды КАК СотрудникиПериоды";
	
	Запрос.Выполнить();
	
	НачисленияСотрудников = ТаблицаНачисленийСотрудниковПоВременнойТаблице(Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	
	Для Каждого ДанныеНаПечать Из ДанныеСсылок Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПерваяСтрокаПечатнойФормы = ДокументРезультат.ВысотаТаблицы + 1;
		
		Для Каждого ДанныеДетальныхЗаписей Из ДанныеНаПечать.Строки Цикл
			
			ДанныеНачислений = Новый Структура("РаботаСведенияОбОплатеТрудаНадбавкаНаПечать");
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Период", ДанныеДетальныхЗаписей.РаботаДатаПриема);
			СтруктураПоиска.Вставить("Сотрудник", ДанныеДетальныхЗаписей.РаботаСотрудник);
			
			СтрокиНачисленийСотрудника = НачисленияСотрудников.НайтиСтроки(СтруктураПоиска);
			Если СтрокиНачисленийСотрудника.Количество() > 0 Тогда
				
				Если Не ЗначениеЗаполнено(ДанныеДетальныхЗаписей.РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать) Тогда
					
					ДанныеНачислений.Вставить("РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать",
						ЗарплатаКадрыОтчеты.ТарифнаяСтавкаНаПечать(СтрокиНачисленийСотрудника[0].ТарифнаяСтавка));
					
				КонецЕсли;
				
				ДанныеНачислений.РаботаСведенияОбОплатеТрудаНадбавкаНаПечать = СтрокиНачисленийСотрудника[0].Надбавка;
				
			КонецЕсли;
			
			ДанныеПользовательскихПолей = ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(ИдентификаторыМакета, ДанныеДетальныхЗаписей);
			//>>fix Клещ А.Н. добавляем свои поля и прописываем эти поля в макете в режиме 1С:Предприятия
			ДанныеНачислений.РаботаСведенияОбОплатеТрудаНадбавкаНаПечать = ?(СокрЛП(ДанныеНачислений.РаботаСведенияОбОплатеТрудаНадбавкаНаПечать) = "% надб.","",ДанныеНачислений.РаботаСведенияОбОплатеТрудаНадбавкаНаПечать);
			ДанныеПользовательскихПолей.Вставить("РаботаДниИспытательногоСрокаПрописью",СтрЗаменить(НРег(ЧислоПрописью(ДанныеДетальныхЗаписей.РаботаДлительностьИспытательногоСрока))," 00",""));
			Если ТипЗнч(ДанныеДетальныхЗаписей.СсылкаНаОбъект) = Тип("ДокументСсылка.ПриемНаРаботу") Тогда
				ВыплачиваемПропорционально = ?(ДанныеДетальныхЗаписей.СсылкаНаОбъект.КоличествоСтавок = 1,"","выплачиваемые пропорционально отработанному времени.");
			Иначе
				ВыплачиваемПропорционально = "";
			КонецЕсли;
			ДанныеПользовательскихПолей.Вставить("РаботаДополнениеКВидуОплаты",ВыплачиваемПропорционально);
			
			ДополнитьПредыдущимиЗначениями(ДанныеДетальныхЗаписей.СсылкаНаОбъект,,ДанныеНачислений);

			//<<fix Клещ А.Н.
			ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
				ДокументРезультат, МакетПечатнойФормы, "Шапка,Работник,Подвал",
				ДанныеНаПечать,
				ДанныеДетальныхЗаписей,
				ДанныеПользовательскихПолей,
				ДанныеНачислений);
			
		КонецЦикла;
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, ПерваяСтрокаПечатнойФормы, ОбъектыПечати, ДанныеНаПечать.СсылкаНаОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&Вместо("ВывестиНаПечатьТ5")
Процедура ВИЛС_ВывестиНаПечатьТ5(ДокументРезультат, ДанныеСсылок, МакетПечатнойФормы, ИдентификаторыМакета = Неопределено, ОбъектыПечати = Неопределено) Экспорт
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПереводе";
	
	СотрудникиПериоды = Новый ТаблицаЗначений;
	СотрудникиПериоды.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	СотрудникиПериоды.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Для Каждого ДанныеНаПечать Из ДанныеСсылок Цикл
		
		Для Каждого ДанныеДетальныхЗаписей Из ДанныеНаПечать.Строки Цикл
			
			НоваяСтрока = СотрудникиПериоды.Добавить();
			НоваяСтрока.Период = ДанныеДетальныхЗаписей.РаботаДатаНачалаПеревода;
			НоваяСтрока.Сотрудник = ДанныеДетальныхЗаписей.РаботаСотрудник;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СотрудникиПериоды", СотрудникиПериоды);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиПериоды.Период КАК Период,
		|	СотрудникиПериоды.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	&СотрудникиПериоды КАК СотрудникиПериоды";
	
	Запрос.Выполнить();
	
	НачисленияСотрудников = ТаблицаНачисленийСотрудниковПоВременнойТаблице(Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	
	Для Каждого ДанныеНаПечать Из ДанныеСсылок Цикл
		
		ПерваяСтрокаПечатнойФормы = ДокументРезультат.ВысотаТаблицы + 1;
		
		Для Каждого ДанныеДетальныхЗаписей Из ДанныеНаПечать.Строки Цикл
			
			Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ДанныеНачислений = Новый Структура("РаботаСведенияОбОплатеТрудаНадбавкаНаПечать");
			Если ТипЗнч(ДанныеНаПечать.СсылкаНаОбъект) <> Тип("ДокументСсылка.КадровыйПеревод") Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Период", ДанныеДетальныхЗаписей.РаботаДатаНачалаПеревода);
				СтруктураПоиска.Вставить("Сотрудник", ДанныеДетальныхЗаписей.РаботаСотрудник);
				
				СтрокиНачисленийСотрудника = НачисленияСотрудников.НайтиСтроки(СтруктураПоиска);
				Если СтрокиНачисленийСотрудника.Количество() > 0 Тогда
					
					Если Не ЗначениеЗаполнено(ДанныеДетальныхЗаписей.РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать) Тогда
						
						ДанныеНачислений.Вставить("РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать",
						ЗарплатаКадрыОтчеты.ТарифнаяСтавкаНаПечать(СтрокиНачисленийСотрудника[0].ТарифнаяСтавка));
						
					КонецЕсли;
					
					ДанныеНачислений.РаботаСведенияОбОплатеТрудаНадбавкаНаПечать = СтрокиНачисленийСотрудника[0].Надбавка;
					
				КонецЕсли;
				
				ДанныеПользовательскихПолей = ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(ИдентификаторыМакета, ДанныеДетальныхЗаписей);
				
				//begin fix Клещ А.Н. 07.02.2019  
			Иначе
				ДанныеПользовательскихПолей = ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(ИдентификаторыМакета, ДанныеДетальныхЗаписей);
				ДополнитьПредыдущимиЗначениями(ДанныеНаПечать.СсылкаНаОбъект,ДанныеПользовательскихПолей,ДанныеНачислений);
			КонецЕсли;
			//end fix Клещ А.Н. 07.02.2019
			
			ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
			ДокументРезультат, МакетПечатнойФормы, "Шапка,Работник,Подвал",
			ДанныеСсылок,
			ДанныеДетальныхЗаписей,
			ДанныеПользовательскихПолей,
			ДанныеНачислений);
			
		КонецЦикла;
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, ПерваяСтрокаПечатнойФормы, ОбъектыПечати, ДанныеНаПечать.СсылкаНаОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьПредыдущимиЗначениями(Ссылка,ДанныеПользовательскихПолей=Неопределено,ДанныеНачислений)
	ДанныеНачислений.Вставить("РаботаСведенияОбОплатеТрудаНадбавкаНаПечать","-");
	ДанныеНачислений.Вставить("РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать","-");
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	КадровыйПереводПоказатели.Значение КАК Размер,
	|	КадровыйПереводПоказатели.Показатель КАК Начисление,
	|	ВЫБОР
	|		КОГДА КадровыйПереводПоказатели.Показатель.Идентификатор В (""Оклад"", ""ТарифнаяСтавкаЧасовая"", ""ОкладПоЧасамСовместители"", ""ОплатаПоЧасовомуТарифуСовместители"")
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Основное,
	|	КадровыйПереводПоказатели.Показатель.Идентификатор КАК ПоказательИдентификатор
	|ИЗ
	|	Документ."+ссылка.Метаданные().Имя+".Показатели КАК КадровыйПереводПоказатели
	|ГДЕ
	|	КадровыйПереводПоказатели.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",ссылка);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	СтрокаНадбавки = "";
	Для Каждого Строка Из ТЗ Цикл
		Если Строка.Основное Тогда
			РазмерЧислом = Число(Строка.Размер);
			РазмерПрописью =ЗарплатаКадрыОтчеты.ТарифнаяСтавкаНаПечать(РазмерЧислом)+ ?(Строка.ПоказательИдентификатор="ТарифнаяСтавкаЧасовая"," в час","");
			ДанныеНачислений.Вставить("РаботаСведенияОбОплатеТрудаТарифнаяСтавкаНаПечать",РазмерПрописью);
		Иначе
			Если Строка.Размер<>0 Тогда
				СтрокаНадбавки = СтрокаНадбавки+?(СтрокаНадбавки="","",";"+Символы.ПС)+нрег(СокрЛП(Строка.Начисление))+" "+Формат(Строка.Размер,"ЧГ=0")+"%";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	//СтрокаНадбавки = Лев(СтрокаНадбавки,СтрДлина(СтрокаНадбавки)-2);
    ДанныеНачислений.Вставить("РаботаСведенияОбОплатеТрудаНадбавкаНаПечать",СтрокаНадбавки);
	
	Если ДанныеПользовательскихПолей=Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ДанныеПользовательскихПолей.Вставить("СтавкаОкладПрежнее","");
	ДанныеПользовательскихПолей.Вставить("НадбавкаПрежнее","");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Значение КАК Размер,
	|	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Показатель КАК Начисление,
	|	ВЫБОР
	|		КОГДА ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Показатель.Идентификатор В (""Оклад"", ""ТарифнаяСтавкаЧасовая"", ""ОкладПоЧасамСовместители"", ""ОплатаПоЧасовомуТарифуСовместители"")
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Основное,
	|	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Показатель.Идентификатор КАК ПоказательИдентификатор
	|ИЗ
	|	РегистрСведений.ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.СрезПоследних(&НаДату, Сотрудник = &Сотрудник) КАК ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("НаДату",НачалоДня(Ссылка.Дата));
	Запрос.УстановитьПараметр("Сотрудник",Ссылка.Сотрудник);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	СтрокаНадбавки = "";
	Для Каждого Строка Из ТЗ Цикл
		Если Строка.Основное Тогда
			РазмерЧислом = Число(Строка.Размер);
			РазмерПрописью =ЗарплатаКадрыОтчеты.ТарифнаяСтавкаНаПечать(РазмерЧислом)+ ?(Строка.ПоказательИдентификатор="ТарифнаяСтавкаЧасовая"," в час","");
			ДанныеПользовательскихПолей.Вставить("СтавкаОкладПрежнее",РазмерПрописью);
		Иначе
			Если Строка.Размер<>0 Тогда
				СтрокаНадбавки = СтрокаНадбавки+?(СтрокаНадбавки="","",";"+Символы.ПС)+нрег(СокрЛП(Строка.Начисление))+" "+Формат(Строка.Размер,"ЧГ=0")+"% ";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	//СтрокаНадбавки = Лев(СтрокаНадбавки,СтрДлина(СтрокаНадбавки)-2);
	ДанныеПользовательскихПолей.Вставить("НадбавкаПрежнее",СтрокаНадбавки);
	
КонецПроцедуры
