
Функция ВИЛС_ВернутьСтатусДокумента(СсылкаНаОбъект) Экспорт
		
	Попытка
		Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	Исключение
		Возврат Неопределено; // Если нет соединения, вернем статус Ложь 
	КонецПопытки;
	
	Если Прокси = Неопределено Тогда
		Возврат Неопределено; // Если пользователь не авторизован в ДО, вернем Ложь.
	КонецЕсли;
	
	ExternalObject = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	ExternalObject.id = Строка(СсылкаНаОбъект.УникальныйИдентификатор());
	ExternalObject.type = СсылкаНаОбъект.Метаданные().ПолноеИмя();
	ExternalObject.name = Строка(СсылкаНаОбъект);
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetDocumentListRequest");
	Запрос.externalObjects.Добавить(ExternalObject);
	
	Запрос.columnSet.Добавить("status");
	Запрос.columnSet.Добавить("statusApproval");
	Запрос.columnSet.Добавить("statusConfirmation");
	Запрос.columnSet.Добавить("statusRegistration");
	Запрос.columnSet.Добавить("statusConsideration");
	Запрос.columnSet.Добавить("statusPerformance");
	Запрос.columnSet.Добавить("visas");
	
	Результат = Прокси.execute(Запрос);
	
	Если ИнтеграцияС1СДокументооборот.ПроверитьТип(Прокси, Результат, "DMError") Тогда 
		Возврат Неопределено; // Произошла ошибка во время выполнения запроса
	КонецЕсли;	
		
	Если Результат.documents.Количество() > 0 Тогда 
		ОбъектВозврата = Результат.documents[0];
	Иначе 
		Возврат Неопределено; // Нужного документа не оказалось
	КонецЕсли;

	Согласован = Ложь;
	
	Если  не ОбъектВозврата.statusApproval = Неопределено Тогда
	
		 Согласован = ОбъектВозврата.statusApproval.name = "Согласован";
	
	КонецЕсли;
	
	Утвержден = Неопределено;
	
	Если  не ОбъектВозврата.statusConfirmation = Неопределено Тогда
		 Утвержден = ?(ОбъектВозврата.statusConfirmation.name = "На утверждении",Неопределено,ОбъектВозврата.statusConfirmation.name = "Утвержден");
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура("Согласован,Утвержден",Согласован,Утвержден);
	
	Возврат СтруктураВозврата;
КонецФункции


Процедура ВИЛС_ЗагрузитьДеревоБизнесПроцессовИЗадач(Предмет) Экспорт
	
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetTasksTreeRequest");
	
	Запрос.query = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetTasksTreeQuery");
	
	Target = Предмет.СоздатьОбъект(Прокси, "ExternalObject");
	Target.id = Строка(Предмет.УникальныйИдентификатор());
	Target.type = Предмет.Метаданные().ПолноеИмя();
	Target.name = Строка(Предмет);

	Запрос.query.externalTarget.Добавить(Target);
	Если Запрос.query.Свойства().Получить("withExecuted") <> Неопределено Тогда
		Запрос.query.withExecuted = Истина;
	КонецЕсли;
	
	Ответ = Прокси.execute(Запрос);
	ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
	БизнесПроцессы = Ответ.businessProcesses;
		
КонецПроцедуры

&Вместо("ПриИзмененииСостоянияСогласования")
// Вызывается при изменении состояния согласования в ДО. Предназначена для изменения согласуемого объекта.
//
// Параметры:
//   ПредметСогласования - ЛюбаяСсылка - согласуемый объект.
//   Состояние - ПеречислениеСсылка.СостоянияСогласованияВДокументообороте.
//   ВызовИзФормыОбъекта - Булево - Истина, если изменение состояния вызвано пользователем из формы объекта.
//
// Пример реализации:
//
//	Если ВызовИзФормыОбъекта Тогда
//		Возврат;
//	КонецЕсли;
//
//	Если ТипЗнч(ПредметСогласования) = Тип("ДокументСсылка._ДемоЗаказПокупателя") Тогда
//	
//		Объект = ПредметСогласования.ПолучитьОбъект();
//		Если Состояние = Перечисления.СостоянияСогласованияВДокументообороте.НаСогласовании Тогда
//			Объект.Состояние = Перечисления._ДемоСостоянияЗаказаПокупателя.НаСогласовании;
//		ИначеЕсли Состояние = Перечисления.СостоянияСогласованияВДокументообороте.НеСогласован Тогда
//			Объект.Состояние = Перечисления._ДемоСостоянияЗаказаПокупателя.НеСогласован;
//		ИначеЕсли Состояние = Перечисления.СостоянияСогласованияВДокументообороте.Согласован Тогда
//			Объект.Состояние = Перечисления._ДемоСостоянияЗаказаПокупателя.Согласован;
//		Иначе
//			Объект.Состояние = Перечисления._ДемоСостоянияЗаказаПокупателя.Подготовлен;
//		КонецЕсли;
//		Объект.Записать(РежимЗаписиДокумента.Запись);
//	
//	КонецЕсли;
//
//
Процедура ВИЛС_ПриИзмененииСостоянияСогласования(ПредметСогласования, Состояние, ВызовИзФормыОбъекта) Экспорт
	Если ВызовИзФормыОбъекта Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПредметСогласования) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
		
		Объект = ПредметСогласования.ПолучитьОбъект();
		
		СтатусИзменен = Ложь;
		Если Состояние = Перечисления.СостоянияСогласованияВДокументообороте.Согласован 
			и Объект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована Тогда 
			Объект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована;
			СтатусИзменен = Истина;
		ИначеЕсли Состояние = Перечисления.СостоянияСогласованияВДокументообороте.НеСогласован Тогда
			Объект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована;
			СтатусИзменен = Истина;
		КонецЕсли;
		Если СтатусИзменен Тогда 
			Объект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ВИЛС_ПриИзмененииУтверждения(ПредметСогласования,Состояние,ВызовИзФормыОбъекта)Экспорт
	
	 Если ВызовИзФормыОбъекта Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПредметСогласования) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
		
		Объект = ПредметСогласования.ПолучитьОбъект();
		
		СтатусИзменен = Ложь;
		Если Состояние = "Утверждено" Тогда 
			Объект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате;
			СтатусИзменен = Истина;
		ИначеЕсли Состояние = "Отклонено" Тогда
			Объект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена;
			СтатусИзменен = Истина;
		КонецЕсли;
		Если СтатусИзменен Тогда 
			Объект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры
