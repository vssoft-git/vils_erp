&НаСервере
Процедура УстановитьВидимостьФлаговВИЛС(Список,ТипДокумента)
	Если  ТипДокумента = "ЗаказКлиента" 
		или ТипДокумента = "ЗаказНаПеремещение"
		Тогда 
		
		Если Параметры.СписокВыбора <> Неопределено Тогда
			
			Элементы.ГруппаОтгрузить.Видимость =
			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.Отгрузить) <> Неопределено
			Или Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно) <> Неопределено;
			
			Если не ВИЛС_Служебный.ДоступныПоля(ПараметрыСеанса.ТекущийПользователь,"Добавление изменение складских актов") или РольДоступна("ПолныеПрава") Тогда
				Элементы.ГруппаРезервировать.Видимость =
				Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.СоСклада) <> Неопределено;
			Иначе
				Элементы.ГруппаРезервировать.Видимость = Ложь;	
			КонецЕсли;
			
			Если не ВИЛС_Служебный.ДоступныПоля(ПараметрыСеанса.ТекущийПользователь,"Добавление изменение складских актов") или РольДоступна("ПолныеПрава") Тогда
				Элементы.ГруппаРезервироватьКСроку.Видимость =
				Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.ИзЗаказов) <> Неопределено;
			Иначе
				Элементы.ГруппаРезервироватьКСроку.Видимость = Ложь;
			КонецЕсли;
			
			Элементы.ГруппаОбособленно.Видимость =
			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.Обособленно) <> Неопределено;
			
			Элементы.ГруппаТребуется.Видимость =
			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.Требуется) <> Неопределено;
			
			Элементы.ГруппаНеТребуется.Видимость =
			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.НеТребуется) <> Неопределено;
			
		КонецЕсли;
		
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
			
			Элементы.ГруппаОбособленно.Видимость = Ложь;
			
		Иначе
			
			Элементы.Отгрузить.Заголовок = НСтр("ru = 'Отгрузить (при необходимости обособленно)';
			|en = 'Ship (on pegging basis if needed)'");
			
		КонецЕсли;
	Иначе
		УстановитьВидимостьФлагов(Список);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВИЛС_ПриСозданииНаСервереВместо(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПриСозданииНастроитьЭлементыФормы();
	
	ВосстановитьНастройки();
	
//#Вставка
	Если Не РольДоступна("ПолныеПрава") 
		и Не РольДоступна("ВИЛС_ДоступностьДействияРезервироватьВЗаказеНаПеремещение")
		//и (Параметры.Тип = Тип("ДокументСсылка.ЗаказНаПеремещение")
		//или Параметры.Тип = Тип("ДокументСсылка.ЗаказКлиента")) Тогда
		и Параметры.Тип = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		ЭлементСписка = Параметры.СписокВыбора.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.СоСклада);
		Если Не ЭлементСписка = Неопределено Тогда
			Параметры.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли; 
		ЭлементСписка = Параметры.СписокВыбора.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.ИзЗаказов);
		Если Не ЭлементСписка = Неопределено Тогда
			Параметры.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли; 
	КонецЕсли;
//#КонецВставки
	УстановитьВидимостьФлагов(Параметры.СписокВыбора);
	УстановитьПорядок(ЭтаФорма);
	УстановитьПредставлениеФлагов(Параметры.СписокВыбора);
	
КонецПроцедуры

//&НаСервере
//Процедура ВИЛС_ПриСозданииНаСервереИзменениеИКонтроль(Отказ, СтандартнаяОбработка)
//	
//	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
//		Возврат;
//	КонецЕсли;
//	
//	ПриСозданииНастроитьЭлементыФормы();
//	
//	ВосстановитьНастройки();
//	
//#Вставка
	//Если Не РольДоступна("ПолныеПрава") 
	//	и Не РольДоступна("ВИЛС_ДоступностьДействияРезервироватьВЗаказеНаПеремещение")
	//	//и (Параметры.Тип = Тип("ДокументСсылка.ЗаказНаПеремещение")
	//	//или Параметры.Тип = Тип("ДокументСсылка.ЗаказКлиента")) Тогда
	//	и Параметры.Тип = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
	//	ЭлементСписка = Параметры.СписокВыбора.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.СоСклада);
	//	Если Не ЭлементСписка = Неопределено Тогда
	//		Параметры.СписокВыбора.Удалить(ЭлементСписка);
	//	КонецЕсли; 
	//	ЭлементСписка = Параметры.СписокВыбора.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.ИзЗаказов);
	//	Если Не ЭлементСписка = Неопределено Тогда
	//		Параметры.СписокВыбора.Удалить(ЭлементСписка);
	//	КонецЕсли; 
	//КонецЕсли;
//#КонецВставки
//	УстановитьВидимостьФлагов(Параметры.СписокВыбора);
//	УстановитьПорядок(ЭтаФорма);
//	УстановитьПредставлениеФлагов(Параметры.СписокВыбора);
//	
//КонецПроцедуры

//&НаСервере
//Процедура УстановитьВидимостьФлаговВИЛС(Список,ТипДокумента)
//	Если ТипДокумента = Тип("ДокументСсылка.ЗаказНаПеремещение")
//		или ТипДокумента = Тип("ДокументСсылка.ЗаказКлиента") Тогда
//		Если Параметры.СписокВыбора <> Неопределено Тогда
//			
//			Элементы.ГруппаОтгрузить.Видимость =
//			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.Отгрузить) <> Неопределено
//			Или Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно) <> Неопределено;
//			
//			Если не ВИЛС_Служебный.ДоступныПоля(ПараметрыСеанса.ТекущийПользователь,"Добавление изменение складских актов") или РольДоступна("ПолныеПрава") Тогда
//				Элементы.ГруппаРезервировать.Видимость =
//				Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.СоСклада) <> Неопределено;
//			Иначе
//				Элементы.ГруппаРезервировать.Видимость = Ложь;	
//			КонецЕсли;
//			
//			Если не ВИЛС_Служебный.ДоступныПоля(ПараметрыСеанса.ТекущийПользователь,"Добавление изменение складских актов") или РольДоступна("ПолныеПрава") Тогда
//				Элементы.ГруппаРезервироватьКСроку.Видимость =
//				Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.ИзЗаказов) <> Неопределено;
//			Иначе
//				Элементы.ГруппаРезервироватьКСроку.Видимость = Ложь;
//			КонецЕсли;
//			
//			Элементы.ГруппаОбособленно.Видимость =
//			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.Обособленно) <> Неопределено;
//			
//			Элементы.ГруппаТребуется.Видимость =
//			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.Требуется) <> Неопределено;
//			
//			Элементы.ГруппаНеТребуется.Видимость =
//			Список.НайтиПоЗначению(Перечисления.ВариантыОбеспечения.НеТребуется) <> Неопределено;
//			
//		КонецЕсли;
//		
//		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
//			
//			Элементы.ГруппаОбособленно.Видимость = Ложь;
//			
//		Иначе
//			
//			Элементы.Отгрузить.Заголовок = НСтр("ru = 'Отгрузить (при необходимости обособленно)';
//			|en = 'Ship (on pegging basis if needed)'");
//			
//		КонецЕсли;
//	Иначе
//		УстановитьВидимостьФлагов(Список);
//	КонецЕсли;
//КонецПроцедуры

//&НаСервере
//Процедура ВИЛС_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	
//	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
//		Возврат;
//	КонецЕсли;
//	
//	ПриСозданииНастроитьЭлементыФормы();
//	
//	ВосстановитьНастройки();
//	
//	УстановитьВидимостьФлаговВИЛС(Параметры.СписокВыбора,Параметры.Тип);//begin fix Клещ А.Н. 16.10.2019 УстановитьВидимостьФлагов(Параметры.СписокВыбора);
//	УстановитьПорядок(ЭтаФорма);
//	УстановитьПредставлениеФлагов(Параметры.СписокВыбора);
//	
//КонецПроцедуры
