#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область КомандыПодменюПечать


Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт 
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "Печать_ДеревоСебестоимостиПродукции";
	//КомандаПечати.Представление = "Печать дерева себестоимости продукции";
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаОбъекта";
КонецПроцедуры


Процедура Печать(ДеревоРезультат) Экспорт 	
	//
	//ТабДок = СформироватьПечать_ДеревоСебестоимостиПродукции(ДеревоРезультат);
	//
	////Создаём новую коллекцию печатных форм
	//КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Печать_ДеревоСебестоимостиПродукции");
	//
	////Добавляем в коллекцию сформированный табличный документ
	//КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	//
	////Устанавливаем параметры печати (при необходимости)
	//КоллекцияПечатныхФорм[0].Экземпляров = 1;
	//КоллекцияПечатныхФорм[0].СинонимМакета = "Печать_ДеревоСебестоимостиПродукции";  //Так будет выглядеть имя файла при сохранении в файл из формы "Печать документов"
	//
	////Вывод через стандартную процедуру БСП
	// УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
	//
КонецПроцедуры 

Функция СформироватьПечать_ДеревоСебестоимостиПродукции(Форма, ДеревоРезультат) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетПлановойСебестоимости";
	Макет = ПолучитьМакет("ПФ_MXL_ДеревоСебестоимостиПродукции_ВИЛС");	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = "Дерево себестоимости продукции";
	ОбластьМакета.Параметры.Дата = Формат(ТекущаяДата(), "ДЛФ=D");
	ПараметрДатаНачала = Форма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала");
	Если Не ПараметрДатаНачала = Неопределено и ПараметрДатаНачала.Использование Тогда
		ОбластьМакета.Параметры.ДатаНач = Формат(ПараметрДатаНачала.Значение, "ДЛФ=D");	
	КонецЕсли;	
	ПараметрДатаОкончания = Форма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаОкончания");
	Если Не ПараметрДатаОкончания = Неопределено и ПараметрДатаОкончания.Использование Тогда
		ОбластьМакета.Параметры.ДатаКон = Формат(ПараметрДатаОкончания.Значение, "ДЛФ=D");	
	КонецЕсли;	
	ТабДокумент.Вывести(ОбластьМакета);	
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	Уровень = 1;
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	
	Для Каждого Строка Из ДеревоРезультат.Строки Цикл
		//Уровень =  Строка.Уровень();
		ВывестиСтрокуРасчетаПлановойСебестоимости(ТабДокумент, Макет, Строка);//, Уровень);	
		
	КонецЦикла;
	
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Ответственный = Пользователи.ТекущийПользователь();
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент

КонецФункции 

Процедура ВывестиСтрокуРасчетаПлановойСебестоимости(ТабДокумент, Макет, Знач СтрокаДерева)	//, Уровень)
	//СтрокаДляВывода = "" + СтрокаДерева.Номенклатура 
	//	+ ?(ЗначениеЗаполнено(СтрокаДерева.Характеристика),  ", " + СтрокаДерева.Характеристика , "") 
	//	+ ?(ЗначениеЗаполнено(СтрокаДерева.Серия), 			 ", " + СтрокаДерева.Серия 			, "") 
	//	+ ?(ЗначениеЗаполнено(СтрокаДерева.Назначение), 	 ", " + СтрокаДерева.Назначение 	, "") 
	//	+ ?(ЗначениеЗаполнено(СтрокаДерева.Партия), 	     ", " + СтрокаДерева.Партия     	, "");
		
	СтрокаДляВывода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1%2%3%4%5%6%7%8%9'"), 	СтрокаДерева.Номенклатура,
												?(ЗначениеЗаполнено(СтрокаДерева.Характеристика),  					", ", ""), 
												?(ЗначениеЗаполнено(СтрокаДерева.Характеристика),  					СтрокаДерева.Характеристика, ""),
												?(ЗначениеЗаполнено(СтрокаДерева.Серия),  							", ", ""), 
												?(ЗначениеЗаполнено(СтрокаДерева.Серия),  							СтрокаДерева.Серия, ""),
												?(ЗначениеЗаполнено(СтрокаДерева.Назначение),  						", ", ""), 
												?(ЗначениеЗаполнено(СтрокаДерева.Назначение),  						СтрокаДерева.Назначение, ""),
												?(ЗначениеЗаполнено(СтрокаДерева.Партия),  							", ", ""), 
												?(ЗначениеЗаполнено(СтрокаДерева.Партия),  							СтрокаДерева.Партия, ""));
												
	КоличествоПодчиненныхСтрок = СтрокаДерева.Строки.Количество();
	Если КоличествоПодчиненныхСтрок Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Номенклатура");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	КонецЕсли;
	ОбластьМакета.Параметры.Заполнить(СтрокаДерева);
	//Если Уровень = 1 Тогда
	//	ОбластьМакета.Параметры.Номенклатура = "" + СтрокаДляВывода + " (" + СтрокаДерева.ЕдиницаИзмерения + ")";
	//Иначе
		ОбластьМакета.Параметры.Номенклатура = СтрокаДляВывода;
	//КонецЕсли;
	
	ОбластьСтрока = ТабДокумент.Вывести(ОбластьМакета, СтрокаДерева.Уровень);
	Если СтрокаДерева.Уровень > 0 Тогда
		ТабДокумент.Область(ОбластьСтрока.Верх,1+1).Отступ = СтрокаДерева.Уровень;	//Уровень - 1;
	КонецЕсли;	
	
	Если КоличествоПодчиненныхСтрок Тогда		
		//Уровень = Уровень + 1;
	
		Для Каждого Строка Из СтрокаДерева.Строки Цикл			
			ВывестиСтрокуРасчетаПлановойСебестоимости(ТабДокумент, Макет, Строка);//, Уровень);			
		КонецЦикла;
		
		//Уровень = Уровень - 1;
		
	КонецЕсли;
	
КонецПроцедуры // ВывестиСтрокуРасчетаПлановойСебестоимости()

#КонецОбласти

#КонецОбласти
		
#КонецЕсли