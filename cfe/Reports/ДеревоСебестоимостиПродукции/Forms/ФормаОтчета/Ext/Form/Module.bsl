
&НаСервере
Процедура ВИЛС_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	Команда = Команды.Добавить("ПодключаемаяКоманда_КомандаПечати");
	Команда.Действие  = "Подключаемый_Команда";
	Команда.Заголовок = НСтр("ru = 'Печать';
							|en = 'Print'");
	
	Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Элементы.ГруппаПрограммныйИнтерфейс);
	Кнопка.ИмяКоманды = Команда.Имя;
	
	ПостоянныеКоманды.Добавить(Команда.Имя);
КонецПроцедуры

&НаКлиенте
&После("Подключаемый_Команда")
Процедура ВИЛС_Подключаемый_Команда(Команда)
	Если НЕ ЭтотОбъект.ОтчетСформирован Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Отчет не сформирован';
																|en = 'Отчет не сформирован'"));
		Возврат;
	КонецЕсли;
	Если Команда.Имя = "ПодключаемаяКоманда_КомандаПечати" Тогда
		ТабДок = СформироватьВывестиНаПечатьДеревоСебестоимостиПродукции();
		
		//Создаём новую коллекцию печатных форм
		КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Печать_ДеревоСебестоимостиПродукции");
		
		//Добавляем в коллекцию сформированный табличный документ
		КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
		
		//Устанавливаем параметры печати (при необходимости)
		КоллекцияПечатныхФорм[0].Экземпляров = 1;
		КоллекцияПечатныхФорм[0].СинонимМакета = "Печать_ДеревоСебестоимостиПродукции";  //Так будет выглядеть имя файла при сохранении в файл из формы "Печать документов"
		
		//Вывод через стандартную процедуру БСП
	 	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция СформироватьВывестиНаПечатьДеревоСебестоимостиПродукции()
	СПодчиненными = Истина;
	ДеревоСебестоимости = РеквизитФормыВЗначение("ПолноеДеревоСебестоимости");
	Для Каждого СтрокаДерева Из ДеревоСебестоимости.Строки Цикл
		ПараметрыДерева = СтруктураСебестоимости.ПараметрыДереваСебестоимости();
		ПараметрыДерева.ДинамическоеСчитывание	= Не СПодчиненными;
		ПараметрыДерева.Результат = СтрокаДерева;
		
		ПараметрыУзла = СтруктураСебестоимости.ПараметрыУзлаДереваСебестоимости();
		
		Отборы = ПараметрыУзла.Отборы;
		Отборы.Продукция.Добавить(СтрокаДерева.Номенклатура);
		Отборы.ХарактеристикиПродукции.Добавить(СтрокаДерева.Характеристика);
		Отборы.СерииПродукции.Добавить(СтрокаДерева.Серия);
		Отборы.ПартииПродукции.Добавить(СтрокаДерева.Партия);
		Отборы.АналитикиУчетаПартийПродукции.Добавить(СтрокаДерева.АналитикаУчетаПартий);
		Отборы.Числитель = СтрокаДерева.Числитель;
		Отборы.Знаменатель = СтрокаДерева.Знаменатель;
		
		СтруктураПараметров = Новый Структура("ДанныеПоСебестоимости", 1);
		ПолучитьЗначенияПараметровНастроекКД(СтруктураПараметров);
		Отборы.ДанныеПоСебестоимости = СтруктураПараметров.ДанныеПоСебестоимости;
		
		ОписаниеПродукции = Новый Структура;
		ОписаниеПродукции.Вставить("АналитикаУчетаПродукции",		СтрокаДерева.АналитикаУчетаПродукции);
		ОписаниеПродукции.Вставить("ПартияПродукции",				СтрокаДерева.ПартияПродукции);
		ОписаниеПродукции.Вставить("АналитикаУчетаПартийПродукции",	СтрокаДерева.АналитикаУчетаПартийПродукции);
		ОписаниеПродукции.Вставить("Уровень",						СтрокаДерева.Уровень);
		
		СтруктураСебестоимости.ДеревоСебестоимостиПередРазворачиванием(ПараметрыДерева, ПараметрыУзла, ОписаниеПродукции);
	КонецЦикла;	
	Возврат(Отчеты.ДеревоСебестоимостиПродукции.ВывестиНаПечатьДеревоСебестоимостиПродукции(ЭтотОбъект, ДеревоСебестоимости));
КонецФункции