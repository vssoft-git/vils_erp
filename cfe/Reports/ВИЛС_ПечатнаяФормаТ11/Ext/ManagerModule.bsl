#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Т11");
	НастройкиВарианта.Описание = НСтр("ru = 'Унифицированная форма № Т-11 (ВИЛС)';
										|en = 'Unified form No. T-11 (VILS)'");
	НастройкиВарианта.Включен = Ложь;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Т11а");
	НастройкиВарианта.Описание = НСтр("ru = 'Унифицированная форма № Т-11а (ВИЛС)';
										|en = 'Unified form No. T-11a (VILS)'");
	НастройкиВарианта.Включен = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ЗарплатаКадрыОтчеты.ВывестиВКоллекциюПечатнуюФорму("Отчет.ВИЛС_ПечатнаяФормаТ11",
		МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	
КонецПроцедуры

Процедура Сформировать(ДокументРезультат, РезультатКомпоновки, ОбъектыПечати = Неопределено) Экспорт
	
	Если РезультатКомпоновки.КлючВарианта = "Т11" Тогда
		ВывестиНаПечатьТ11(ДокументРезультат, РезультатКомпоновки, ОбъектыПечати);
	ИначеЕсли РезультатКомпоновки.КлючВарианта = "Т11а" Тогда
		ВывестиНаПечатьТ11а(ДокументРезультат, РезультатКомпоновки, ОбъектыПечати);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиНаПечатьТ11(ДокументРезультат, РезультатКомпоновки, ОбъектыПечати)
	
	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Премия_Т11";
	ДокументРезультат.ОриентацияСтраницы= ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	Для Каждого ДанныеНаПечать Из РезультатКомпоновки.ДанныеОтчета.Строки Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПерваяСтрокаПечатнойФормы = ДокументРезультат.ВысотаТаблицы + 1;
		
		ВывестиГоризонтальныйРазделитель = Ложь;
		Для Каждого ДанныеДетальныхЗаписей Из ДанныеНаПечать.Строки Цикл
			
			Если ВывестиГоризонтальныйРазделитель Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ВывестиГоризонтальныйРазделитель = Истина;
			КонецЕсли;
			
			ДанныеПользовательскихПолей = ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(РезультатКомпоновки.ИдентификаторыМакета, ДанныеДетальныхЗаписей);
			ДанныеПользовательскихПолей.Вставить("СсылкаНаОбъектНомерНаПечать", Строка(ДанныеДетальныхЗаписей.СсылкаНаОбъектНомерНаПечать) + "/" + ДанныеДетальныхЗаписей.ДанныеПоощренияНомерСтроки);
			
			ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
				ДокументРезультат,
				РезультатКомпоновки.МакетПечатнойФормы,
				"Приказ",
				ДанныеНаПечать,
				ДанныеДетальныхЗаписей,
				ДанныеПользовательскихПолей);
			
		КонецЦикла;
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, ПерваяСтрокаПечатнойФормы, ОбъектыПечати, ДанныеНаПечать.СсылкаНаОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиНаПечатьТ11а(ДокументРезультат, РезультатКомпоновки, ОбъектыПечати)
	
	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Премия_Т11а";
	ДокументРезультат.ОриентацияСтраницы= ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	Для Каждого ДанныеНаПечать Из РезультатКомпоновки.ДанныеОтчета.Строки Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПерваяСтрокаПечатнойФормы = ДокументРезультат.ВысотаТаблицы + 1;
		
		ДанныеПользовательскихПолейШапки = ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(РезультатКомпоновки.ИдентификаторыМакета, ДанныеНаПечать);
		
		ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
			ДокументРезультат, РезультатКомпоновки.МакетПечатнойФормы, "Шапка",
			ДанныеНаПечать,
			ДанныеПользовательскихПолейШапки);
		
		ОбластьШапкиТаблицы = РезультатКомпоновки.МакетПечатнойФормы.ПолучитьОбласть("ШапкаПовторятьПриПечати");
		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(ОбластьШапкиТаблицы,
			ДанныеНаПечать,
			ДанныеПользовательскихПолейШапки);
		
		ОбластьПодвал = РезультатКомпоновки.МакетПечатнойФормы.ПолучитьОбласть("Подвал");
		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(ОбластьПодвал,
			ДанныеНаПечать,
			ДанныеПользовательскихПолейШапки);
		
		Для Каждого ДанныеДетальныхЗаписей Из ДанныеНаПечать.Строки Цикл
			
			ДанныеПользовательскихПолей = ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(РезультатКомпоновки.ИдентификаторыМакета, ДанныеДетальныхЗаписей);
			
			ОбластьСтроки = РезультатКомпоновки.МакетПечатнойФормы.ПолучитьОбласть("Строка");
			ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(ОбластьСтроки,
				ДанныеНаПечать,
				ДанныеДетальныхЗаписей,
				ДанныеПользовательскихПолей);
			
			СписокУмещаемыхОбластей = Новый Массив;
			СписокУмещаемыхОбластей.Добавить(ОбластьСтроки);
			СписокУмещаемыхОбластей.Добавить(ОбластьПодвал);
			
			Если НЕ ДокументРезультат.ПроверитьВывод(СписокУмещаемыхОбластей) Тогда
				
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ОбластьШапкиТаблицы);
				
			КонецЕсли;
			
			ДокументРезультат.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		ДокументРезультат.Вывести(ОбластьПодвал);
		
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, ПерваяСтрокаПечатнойФормы, ОбъектыПечати, ДанныеНаПечать.СсылкаНаОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВидПоощренияНаПечать(ВидПремии, ВидПризаПодарка) Экспорт
	
	Если ВидПремии = Null Тогда
		
		Если ВидПризаПодарка = Перечисления.ВидыПризовПодарков.Приз Тогда
			ВидПоощрения = НСтр("ru = 'Ценный приз';
								|en = 'A valuable prize'");
		Иначе
			ВидПоощрения = НСтр("ru = 'Ценный подарок';
								|en = 'A valuable gift'");
		КонецЕсли;
		
		Возврат ВидПоощрения;
		
	Иначе
		Возврат Строка(ВидПремии);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли