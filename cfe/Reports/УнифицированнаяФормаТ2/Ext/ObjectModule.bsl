
&ИзменениеИКонтроль("ПриКомпоновкеРезультата")
Процедура ВИЛС_ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	ЗарплатаКадрыОтчеты.ПередНачаломКомпоновкиРезультата(ЭтотОбъект);

	КлючВарианта = ЗарплатаКадрыОтчеты.КлючВарианта(КомпоновщикНастроек);

	ЭтоВариантОтчетаТ2ГСМС = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда

		МодульГосударственнаяСлужба = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		ЭтоВариантОтчетаТ2ГСМС = МодульГосударственнаяСлужба.ЭтоВариантОтчетаТ2ГСМС(КлючВарианта);

	КонецЕсли;

#Удаление
	Если КлючВарианта = "Т2" Или ЭтоВариантОтчетаТ2ГСМС Тогда

#КонецУдаления
#Вставка
	// Здесь можно описать новое поведение.
	Если КлючВарианта = "Т2_ВУР_ВИЛС" Или КлючВарианта = "Т2" Или ЭтоВариантОтчетаТ2ГСМС Тогда


#КонецВставки
		Данные = Новый ДеревоЗначений;

		Попытка

			СтандартнаяОбработка = Ложь;

			Если КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Свойство("ОбъектыПечати") Тогда
				ОбъектыПечати = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.ОбъектыПечати;
			Иначе
				ОбъектыПечати = Новый СписокЗначений;
			КонецЕсли;

			// Параметры документа
			ДокументРезультат.ТолькоПросмотр = Истина;
			ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УнифицированнаяФормаТ2";
			ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			ДокументРезультат.Очистить();
			ДокументРезультат.АвтоМасштаб = Истина;
			ДокументРезультат.НачатьАвтогруппировкуСтрок();

			НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
			НастройкиОтчета.Выбор.Элементы.Очистить();
			СоответствиеПользовательскихПолей = ЗарплатаКадрыОтчеты.СоответствиеПользовательскихПолей(НастройкиОтчета);
			ПроверитьЗначенияПараметров(НастройкиОтчета, Истина);

			ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
			Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("СтандартнаяДатаНачала") Тогда
				ДатаОтчета = ЗначениеПараметра.Значение.Дата;
			Иначе
				ДатаОтчета = ЗначениеПараметра.Значение;
			КонецЕсли;

			РаботникКадровойСлужбыРасшифровкаПодписи = "";
			ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("РаботникКадровойСлужбы"));
			Если ЗначениеПараметра <> Неопределено
				И ЗначениеЗаполнено(ЗначениеПараметра.Значение) Тогда

				КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ЗначениеПараметра.Значение, "ИОФамилия", ДатаОтчета);
				Если КадровыеДанные.Количество() > 0 Тогда
					РаботникКадровойСлужбыРасшифровкаПодписи = КадровыеДанные[0].ИОФамилия;
				КонецЕсли;

			КонецЕсли;
#Вставка
			Если КлючВарианта = "Т2_ВУР_ВИЛС" Тогда
				ПараметрыДанныхДолжностьРаботникаКадровойСлужбы = "";
				ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДолжностьРаботникаКадровойСлужбы"));
				Если ЗначениеПараметра <> Неопределено Тогда
					ПараметрыДанныхДолжностьРаботникаКадровойСлужбы = ЗначениеПараметра.Значение;
				КонецЕсли;
				РаботникКадровойСлужбыРасшифровкаПодписи = Новый Структура("РаботникКадровойСлужбыРасшифровкаПодписи,ПараметрыДанныхДолжностьРаботникаКадровойСлужбы",РаботникКадровойСлужбыРасшифровкаПодписи,ПараметрыДанныхДолжностьРаботникаКадровойСлужбы);
			КонецЕсли;
#КонецВставки

			МакетКомпоновки = ЗарплатаКадрыОтчеты.МакетКомпоновкиДанныхДляКоллекцииЗначений(СхемаКомпоновкиДанных, НастройкиОтчета);

			// Создадим и инициализируем процессор компоновки.
			ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
			ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);

			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
			ПроцессорВывода.УстановитьОбъект(Данные);

			// Обозначим начало вывода
			ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);

			Группировки = ЗарплатаКадрыОтчеты.ПолучитьПоляГруппировок(КомпоновщикНастроек);

			ВывестиМакетыСГруппировкамиT2(ДокументРезультат, Данные, Группировки, ДатаОтчета, СоответствиеПользовательскихПолей, РаботникКадровойСлужбыРасшифровкаПодписи, КлючВарианта, ОбъектыПечати);

			ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();

		Исключение
			ВызватьИсключение НСтр("ru = 'В настройку отчета внесены критичные изменения. Отчет не будет сформирован.';
			|en = 'Critical changes have been made to the report settings. Cannot generate the report.'") + " " + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;

		ДопСвойства = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
		ДопСвойства.Вставить("ОтчетПустой", Данные.Строки.Количество() = 0);

	КонецЕсли;

КонецПроцедуры

&ИзменениеИКонтроль("ВывестиМакетT2")
Процедура ВИЛС_ВывестиМакетT2(ДокументРезультат, СтрокаДанных, Уровень, ДатаОтчета, ДополнительныеСведения, СоответствиеПользовательскихПолей, РаботникКадровойСлужбыРасшифровкаПодписи, КлючВарианта, ОбъектыПечати)

	ПерваяСтрокаФормы = ДокументРезультат.ВысотаТаблицы + 1;

	НастройкиПечатныхФорм = ЗарплатаКадры.НастройкиПечатныхФорм();

#Удаление
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.УнифицированнаяФормаТ2.ПФ_MXL_Т2");

#КонецУдаления
#Вставка
	Если КлючВарианта = "Т2_ВУР_ВИЛС" Тогда                                                    				// begin fix Suetin 26.04.2021 19:24:20
		Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.УнифицированнаяФормаТ2.ПФ_MXL_Т2_ВУР_ВИЛС"); 	
		ВтораяСтраницаТ2Продолжение2Подвал		= Макет.ПолучитьОбласть("ВтораяСтраницаТ2Продолжение2Подвал");	
		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
			ВтораяСтраницаТ2Продолжение2Подвал,
			СтрокаДанных);
		//ВтораяСтраницаТ2Продолжение2Подвал.Параметры.ПараметрыДанныхДолжностьРаботникаКадровойСлужбы	
		//	= РаботникКадровойСлужбыРасшифровкаПодписи.ПараметрыДанныхДолжностьРаботникаКадровойСлужбы;
		//ВтораяСтраницаТ2Продолжение2Подвал.Параметры.РаботникКадровойСлужбыРасшифровкаПодписи 		
		//	= РаботникКадровойСлужбыРасшифровкаПодписи.РаботникКадровойСлужбыРасшифровкаПодписи;			// end fix Suetin 26.04.2021 19:24:24
	Иначе
		Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.УнифицированнаяФормаТ2.ПФ_MXL_Т2");
	КонецЕсли; 

#КонецВставки
	ВыводитьФормуТ2ГС = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		ВыводитьФормуТ2ГС = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба").ЭтоВариантОтчетаТ2ГСМС(КлючВарианта);
	КонецЕсли;

	ПерваяСтраницаТ2Заголовок				= Макет.ПолучитьОбласть("ПерваяСтраницаТ2Заголовок");
	ПерваяСтраницаТ2						= Макет.ПолучитьОбласть("ПерваяСтраницаТ2");
	ПерваяСтраницаТ2Продолжение				= Макет.ПолучитьОбласть("ПерваяСтраницаТ2Продолжение");
	ВтораяСтраницаТ2						= Макет.ПолучитьОбласть("ВтораяСтраницаТ2");
	ВтораяСтраницаТ2Продолжение1			= Макет.ПолучитьОбласть("ВтораяСтраницаТ2Продолжение1");
	ВтораяСтраницаТ2Продолжение2			= Макет.ПолучитьОбласть("ВтораяСтраницаТ2Продолжение2");
	ТретьяСтраницаТ2						= Макет.ПолучитьОбласть("ТретьяСтраницаТ2");
	ЧетвертаяСтраницаТ2						= Макет.ПолучитьОбласть("ЧетвертаяСтраницаТ2");
	ЧетвертаяСтраницаТ2Продолжение			= Макет.ПолучитьОбласть("ЧетвертаяСтраницаТ2Продолжение");
	ЧетвертаяСтраницаТ2Продолжение2			= Макет.ПолучитьОбласть("ЧетвертаяСтраницаТ2Продолжение2");
	ШапкаСоставСемьи						= Макет.ПолучитьОбласть("ШапкаСоставСемьи");
	СтрокаСоставСемьи						= Макет.ПолучитьОбласть("СтрокаСоставСемьи");
	ЗаголовокПриемыПеремещения				= Макет.ПолучитьОбласть("ЗаголовокПриемыПеремещения");
	ШапкаПриемыПеремещения					= Макет.ПолучитьОбласть("ШапкаПриемыПеремещения");
	СтрокаПриемыПеремещения					= Макет.ПолучитьОбласть("СтрокаПриемыПеремещения");
	ПриемыПеремещенияКоличествоСтрок		= 5;

	КлассныеЧиныЗаголовок					= Макет.ПолучитьОбласть("КлассныеЧиныЗаголовок");
	КлассныеЧиныШапка						= Макет.ПолучитьОбласть("КлассныеЧиныШапка");
	КлассныеЧиныСтрока						= Макет.ПолучитьОбласть("КлассныеЧиныСтрока");
	КлассныеЧиныКоличествоСтрок				= 3;

	АттестацияЗаголовок						= Макет.ПолучитьОбласть("АттестацияЗаголовок");
	АттестацияШапка							= Макет.ПолучитьОбласть("АттестацияШапка");
	АттестацияСтрока						= Макет.ПолучитьОбласть("АттестацияСтрока");
	АттестацияКоличествоСтрок				= 3;

	ПовышениеКвалификацииЗаголовок			= Макет.ПолучитьОбласть("ПовышениеКвалификацииЗаголовок");
	ПовышениеКвалификацииШапка				= Макет.ПолучитьОбласть("ПовышениеКвалификацииШапка");
	ПовышениеКвалификацииСтрока				= Макет.ПолучитьОбласть("ПовышениеКвалификацииСтрока");
	ПовышениеКвалификацииКоличествоСтрок	= 3;

	ПрофессиональнаяПереподготовкаЗаголовок	= Макет.ПолучитьОбласть("ПрофессиональнаяПереподготовкаЗаголовок");
	ПрофессиональнаяПереподготовкаШапка		= Макет.ПолучитьОбласть("ПрофессиональнаяПереподготовкаШапка");
	ПрофессиональнаяПереподготовкаСтрока	= Макет.ПолучитьОбласть("ПрофессиональнаяПереподготовкаСтрока");
	ПрофессиональнаяПереподготовкаКоличествоСтрок = 3;

	ЗаголовокНаграды						= Макет.ПолучитьОбласть("ЗаголовокНаграды");
	ШапкаНаграды							= Макет.ПолучитьОбласть("ШапкаНаграды");
	СтрокаНаграды							= Макет.ПолучитьОбласть("СтрокаНаграды");
	ЗаголовокОтпуска						= Макет.ПолучитьОбласть("ЗаголовокОтпуска");
	ШапкаОтпуска							= Макет.ПолучитьОбласть("ШапкаОтпуска");
	СтрокаОтпуска							= Макет.ПолучитьОбласть("СтрокаОтпуска");
	ЗаголовокДополнительногоЛиста			= Макет.ПолучитьОбласть("ЗаголовокДополнительногоЛиста");
	ПодвалДополнительногоЛиста				= Макет.ПолучитьОбласть("ПодвалДополнительногоЛиста");

	ШапкаСтажи								= Макет.ПолучитьОбласть("ШапкаСтажи");
	СтрокаСтажи								= Макет.ПолучитьОбласть("СтрокаСтажи");
	ЗаголовокДополнительногоЛистаСтажи		= Макет.ПолучитьОбласть("ЗаголовокДополнительногоЛистаСтажи");

	ЗаголовокДополнительногоЛистаСоставСемьи	= Макет.ПолучитьОбласть("ЗаголовокДополнительногоЛистаСоставСемьи");

	Если ВыводитьФормуТ2ГС Тогда

		ПерваяСтраницаТ2Заголовок				= Макет.ПолучитьОбласть("ПерваяСтраницаТ2ЗаголовокГС");
		ПерваяСтраницаТ2Продолжение				= Макет.ПолучитьОбласть("ПерваяСтраницаТ2ПродолжениеГС");
		АттестацияЗаголовок						= Макет.ПолучитьОбласть("АттестацияЗаголовокГС");
		ПовышениеКвалификацииЗаголовок			= Макет.ПолучитьОбласть("ПовышениеКвалификацииЗаголовокГС");
		ПрофессиональнаяПереподготовкаЗаголовок	= Макет.ПолучитьОбласть("ПрофессиональнаяПереподготовкаЗаголовокГС");
		ЗаголовокНаграды						= Макет.ПолучитьОбласть("ЗаголовокНаградыГС");
		ЗаголовокОтпуска						= Макет.ПолучитьОбласть("ЗаголовокОтпускаГС");
		ЧетвертаяСтраницаТ2Продолжение			= Макет.ПолучитьОбласть("ЧетвертаяСтраницаТ2ПродолжениеГС");

		ПриемыПеремещенияКоличествоСтрок		= 3;
		АттестацияКоличествоСтрок				= 2;
		ПовышениеКвалификацииКоличествоСтрок	= 2;
		ПрофессиональнаяПереподготовкаКоличествоСтрок = 2;

	КонецЕсли; 

	ВтораяСтраницаТ2Продолжение2Параметры = Новый Структура;
	ЧетвертаяСтраницаТ2Продолжение2Параметры = Новый Структура;
	ПодвалДополнительногоЛистаПараметры = Новый Структура;
	ПерваяСтраницаТ2Параметры = Новый Структура;
	ПерваяСтраницаТ2ПродолжениеПараметры = Новый Структура;
	ЗаголовокДополнительногоЛистаПараметры = Новый Структура;
	ШапкаСтажиПараметры = Новый Структура;

	ВтораяСтраницаТ2Продолжение2Параметры.Вставить("РаботникКадровойСлужбыРасшифровкаПодписи", РаботникКадровойСлужбыРасшифровкаПодписи);
	ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("РаботникКадровойСлужбыРасшифровкаПодписи", РаботникКадровойСлужбыРасшифровкаПодписи);
	ПодвалДополнительногоЛистаПараметры.Вставить("РаботникКадровойСлужбыРасшифровкаПодписи", РаботникКадровойСлужбыРасшифровкаПодписи);

	Если СтрокаДанных.Владелец().Колонки.Найти("ЛичныеДанныеУченаяСтепеньУченаяСтепеньРодитель") <> Неопределено
		И ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУченаяСтепеньУченаяСтепеньРодитель) Тогда

		ПерваяСтраницаТ2ПродолжениеПараметры.Вставить("ЛичныеДанныеУченаяСтепеньУченаяСтепень", СтрокаДанных.ЛичныеДанныеУченаяСтепеньУченаяСтепеньРодитель);

	КонецЕсли;

	ПерваяСтраницаТ2Параметры.Вставить("МестоРождения", СтрокаДанных.ЛичныеДанныеМестоРождения);
	ПерваяСтраницаТ2Параметры.Вставить("ПерваяБукваФамилии", Лев(СокрЛП(СтрокаДанных.ЛичныеДанныеФамилия), 1));
	ПерваяСтраницаТ2Параметры.Вставить("ДатаАктуальности", ДатаОтчета);
	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыПользовательскихПолей(ПерваяСтраницаТ2, СтрокаДанных, СоответствиеПользовательскихПолей);

	Если ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеСтрана) И СтрокаДанных.ЛичныеДанныеСтрана <> Справочники.СтраныМира.Россия Тогда
		ПерваяСтраницаТ2Параметры.Вставить("Гражданство", ПерваяСтраницаТ2.Параметры.Гражданство + " (" + СтрокаДанных.ЛичныеДанныеСтрана + ")");
	КонецЕсли; 

	// АДРЕСА
	Индекс = "";
	СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(СтрокаДанных.ЛичныеДанныеКонтактнаяИнформацияАдресПоПрописке, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
	Если СтруктураАдреса.Свойство("Индекс") Тогда
		Индекс = СтруктураАдреса.Индекс;
	КонецЕсли; 
	ВтораяСтраницаТ2Продолжение2Параметры.Вставить("ИндексАдресПоПаспорту", Индекс);
	ВтораяСтраницаТ2Продолжение2Параметры.Вставить("АдресПоПаспорту", СтрЗаменить(СтрокаДанных.ЛичныеДанныеКонтактнаяИнформацияАдресПоПропискеПредставление, Индекс + ",",""));
	ВтораяСтраницаТ2Продолжение2Параметры.Вставить("ДатаРегистрацииПоМестуЖительства", Формат(СтрокаДанных.ЛичныеДанныеКонтактнаяИнформацияДатаРегистрации, "ДЛФ=DD"));

	Индекс = "";
	СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(СтрокаДанных.ЛичныеДанныеКонтактнаяИнформацияАдресМестаПроживания, Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица);
	Если СтруктураАдреса.Свойство("Индекс") Тогда
		Индекс = СтруктураАдреса.Индекс;
	КонецЕсли; 
	ВтораяСтраницаТ2Продолжение2Параметры.Вставить("ИндексАдресФактический", Индекс);
	ВтораяСтраницаТ2Продолжение2Параметры.Вставить("АдресФактический", СтрЗаменить(СтрокаДанных.ЛичныеДанныеКонтактнаяИнформацияАдресМестаПроживанияПредставление, Индекс + ",",""));

	ВидыДокументовПаспорта = ВидыДокументовФизическихЛицПаспортаПоКодамМВД();

	// ПАСПОРТ
	Если ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументВид) Тогда

		Если ВидыДокументовПаспорта.Найти(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументВид) = Неопределено Тогда

			ВтораяСтраницаТ2Продолжение2Параметры.Вставить("ДругойДокумент",
			?(ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументВид), "" + СтрокаДанных.ЛичныеДанныеУдостоверениеДокументВид, "<" + НСтр("ru = 'вид документа не указан';
			|en = 'document kind is not specified'") + ">")
			+ " №" + ?(ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументНомер), СтрокаДанных.ЛичныеДанныеУдостоверениеДокументНомер, "<" + НСтр("ru = 'номер документа не указан';
			|en = 'document number is not entered'") + ">")
			+ ?(ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументСерия), " " + СтрокаДанных.ЛичныеДанныеУдостоверениеДокументСерия, "")
			+ "; " + НСтр("ru = 'выдан';
			|en = 'issued'") + ": " + ?(ЗначениеЗаполнено(СокрЛП(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументКемВыдан)), СокрЛП(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументКемВыдан), "<" + НСтр("ru = 'не указано';
			|en = 'not specified'") + "> ")
			+ " "+ Формат(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументДатаВыдачи,"ДЛФ=DD"));

		Иначе

			ВтораяСтраницаТ2Продолжение2Параметры.Вставить("НомерПаспорта", НСтр("ru = 'серия';
			|en = 'series'") + " " + ?(ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументСерия),СтрокаДанных.ЛичныеДанныеУдостоверениеДокументСерия,"") + " № " + ?(ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументНомер),СтрокаДанных.ЛичныеДанныеУдостоверениеДокументНомер,""));
			ВтораяСтраницаТ2Продолжение2Параметры.Вставить("ДатаВыдачиПаспорта", Формат(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументДатаВыдачи, "ДЛФ=DD"));
			ВтораяСтраницаТ2Продолжение2Параметры.Вставить("КемВыданПаспорт", ?(ЗначениеЗаполнено(СокрЛП(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументКемВыдан)), СокрЛП(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументКемВыдан),"") + ?(ЗначениеЗаполнено(СтрокаДанных.ЛичныеДанныеУдостоверениеДокументКодПодразделения)," № " + НСтр("ru = 'подразделения';
			|en = 'departments'") + " " + СтрокаДанных.ЛичныеДанныеУдостоверениеДокументКодПодразделения,""));

		КонецЕсли;

	КонецЕсли;

	ЗаголовокДополнительногоЛистаПараметры.Вставить("МестоРождения", СтрокаДанных.ЛичныеДанныеМестоРождения);
	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ЗаголовокДополнительногоЛиста,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
	ЗаголовокДополнительногоЛистаПараметры);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ПодвалДополнительногоЛиста,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
	ПодвалДополнительногоЛистаПараметры);

	Если ЗначениеЗаполнено(СтрокаДанных.РаботаПриказОбУвольненииСтатьяТКРФ) Тогда
		ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("РаботаПриказОбУвольненииСтатьяТКРФ",
		КадровыйУчет.ПредставлениеСтатьиУвольненияДляТ8(СтрокаДанных.РаботаПриказОбУвольненииСтатьяТКРФ));
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(СтрокаДанных.РаботаПриказОбУвольненииНомер) Тогда
		ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("ПриказОбУвольненииНомер", "__________");
	Иначе

		ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("ПриказОбУвольненииНомер",
		ЗарплатаКадрыОтчеты.НомерНаПечать(СтрокаДанных.РаботаПриказОбУвольненииНомер, СтрокаДанных.РаботаПриказОбУвольненииНомерПриказа));

	КонецЕсли;

	Если ЗначениеЗаполнено(СтрокаДанных.РаботаПриказОбУвольненииДата) ИЛИ ЗначениеЗаполнено(СтрокаДанных.РаботаДатаУвольнения) Тогда

		Если ЗначениеЗаполнено(СтрокаДанных.РаботаПриказОбУвольненииДата) Тогда
			ПриказОбУвольненииДатаПредставление = Формат(СтрокаДанных.РаботаПриказОбУвольненииДата, "ДЛФ=DD");
		Иначе
			ПриказОбУвольненииДатаПредставление = Формат(СтрокаДанных.РаботаДатаУвольнения, "ДЛФ=DD");
		КонецЕсли;

		ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("ПриказОбУвольненииЧисло", СокрЛП(Лев(ПриказОбУвольненииДатаПредставление, 2)));
		ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("ПриказОбУвольненииМесяцГод", СокрЛП(Сред(ПриказОбУвольненииДатаПредставление, 3)));
	Иначе
		ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("ПриказОбУвольненииЧисло", "_____");
		ЧетвертаяСтраницаТ2Продолжение2Параметры.Вставить("ПриказОбУвольненииМесяцГод", " ___________ 20___ г.");
	КонецЕсли;

	ОбластиДополнительныхСтрок = Новый Массив;
	МассивПодвалов = Новый Массив;
	МассивПодвалов.Добавить(ПодвалДополнительногоЛиста);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(ПерваяСтраницаТ2Заголовок, СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ПерваяСтраницаТ2Заголовок, Уровень + 1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ПерваяСтраницаТ2,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
	ПерваяСтраницаТ2Параметры);
	ДокументРезультат.Вывести(ПерваяСтраницаТ2, Уровень + 1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ПерваяСтраницаТ2Продолжение,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
	ПерваяСтраницаТ2ПродолжениеПараметры);
	ДокументРезультат.Вывести(ПерваяСтраницаТ2Продолжение, Уровень + 1);

	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ВтораяСтраницаТ2,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ВтораяСтраницаТ2, Уровень + 1);

#Удаление
	// Стажи
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛистаСтажи);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияСтажи");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;

	Если ДанныеЗаполненияПоСотруднику.Количество() > 0 Тогда

		ПредставлениеДатаСтажа = "8. " + НСтр("ru = 'Стаж работы (по состоянию на';
		|en = 'Length of service (as of'") + "  " + Формат(СтрокаДанных.ПараметрыДанныхПериод, "ДЛФ=DD") + "):";

		// Добавление пустых строк, если стажей менее 4-х.
		Если ДанныеЗаполненияПоСотруднику.Количество() < 4 Тогда
			Для НомерСтажа = ДанныеЗаполненияПоСотруднику.Количество() + 1 По 4 Цикл
				ДанныеЗаполненияПоСотруднику.Добавить(СтруктураПустогоСтажа());
			КонецЦикла;
		КонецЕсли; 

	Иначе
		ПредставлениеДатаСтажа = "8. " + НСтр("ru = 'Стаж работы (по состоянию на';
		|en = 'Length of service (as of'") + "  ""         "" _________ 20     " + НСтр("ru = 'г';
		|en = 'year'") + ".):";
		ДанныеЗаполненияПоСотруднику = СведенияОСтажахПоУмолчанию();
	КонецЕсли; 

	ШапкаСтажиПараметры.Вставить("ДатаСтажа", ПредставлениеДатаСтажа);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ШапкаСтажи,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
	ШапкаСтажиПараметры);
	ДокументРезультат.Вывести(ШапкаСтажи, Уровень+1);

	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	4, ОбластиДополнительныхСтрок, ШапкаСтажи, СтрокаСтажи, МассивЗаголовков, МассивПодвалов);

#КонецУдаления
#Вставка
	Если Не КлючВарианта = "Т2_ВУР_ВИЛС" Тогда                                                    				// begin fix Suetin 26.04.2021 19:24:20
		// Стажи
		МассивЗаголовков = Новый Массив;
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛистаСтажи);

		ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияСтажи");
		Если ДанныеЗаполнения = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		Иначе
			ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
			Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			КонецЕсли;
		КонецЕсли;

		Если ДанныеЗаполненияПоСотруднику.Количество() > 0 Тогда

			ПредставлениеДатаСтажа = "8. " + НСтр("ru = 'Стаж работы (по состоянию на';
			|en = 'Length of service (as of'") + "  " + Формат(СтрокаДанных.ПараметрыДанныхПериод, "ДЛФ=DD") + "):";

			// Добавление пустых строк, если стажей менее 4-х.
			Если ДанныеЗаполненияПоСотруднику.Количество() < 4 Тогда
				Для НомерСтажа = ДанныеЗаполненияПоСотруднику.Количество() + 1 По 4 Цикл
					ДанныеЗаполненияПоСотруднику.Добавить(СтруктураПустогоСтажа());
				КонецЦикла;
			КонецЕсли; 

		Иначе
			ПредставлениеДатаСтажа = "8. " + НСтр("ru = 'Стаж работы (по состоянию на';
			|en = 'Length of service (as of'") + "  ""         "" _________ 20     " + НСтр("ru = 'г';
			|en = 'year'") + ".):";
			ДанныеЗаполненияПоСотруднику = СведенияОСтажахПоУмолчанию();
		КонецЕсли; 

		ШапкаСтажиПараметры.Вставить("ДатаСтажа", ПредставлениеДатаСтажа);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ШапкаСтажи,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
		ШапкаСтажиПараметры);
		ДокументРезультат.Вывести(ШапкаСтажи, Уровень+1);

		ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
		4, ОбластиДополнительныхСтрок, ШапкаСтажи, СтрокаСтажи, МассивЗаголовков, МассивПодвалов);

	КонецЕсли; 

#КонецВставки
	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ВтораяСтраницаТ2Продолжение1,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ВтораяСтраницаТ2Продолжение1, Уровень+1);

	// Состав семьи
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛистаСоставСемьи);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ШапкаСоставСемьи,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ШапкаСоставСемьи, Уровень+1);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияСоставСемьи");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;
	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	6, ОбластиДополнительныхСтрок, ШапкаСоставСемьи, СтрокаСоставСемьи, МассивЗаголовков, МассивПодвалов);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ВтораяСтраницаТ2Продолжение2,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
	ВтораяСтраницаТ2Продолжение2Параметры);
	ДокументРезультат.Вывести(ВтораяСтраницаТ2Продолжение2, Уровень+1);

	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
#Удаление

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ТретьяСтраницаТ2,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ТретьяСтраницаТ2, Уровень+1);
#КонецУдаления
#Вставка
	Если Не КлючВарианта = "Т2_ВУР_ВИЛС" Тогда                                                    				// begin fix Suetin 26.04.2021 19:24:20

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ТретьяСтраницаТ2,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ТретьяСтраницаТ2, Уровень+1);
		
	КонецЕсли;
#КонецВставки

	// Прием на работу и переводы на другую работу.
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(ЗаголовокПриемыПеремещения);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ЗаголовокПриемыПеремещения,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ЗаголовокПриемыПеремещения, Уровень+1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ШапкаПриемыПеремещения,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ШапкаПриемыПеремещения, Уровень+1);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияКадровойИстории");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.Сотрудник);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;
	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	ПриемыПеремещенияКоличествоСтрок, ОбластиДополнительныхСтрок, ШапкаПриемыПеремещения, СтрокаПриемыПеремещения, МассивЗаголовков, МассивПодвалов);
#Удаление

	Если ВыводитьФормуТ2ГС Тогда

		// Классные чины
		МассивЗаголовков = Новый Массив;
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
		МассивЗаголовков.Добавить(КлассныеЧиныЗаголовок);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		КлассныеЧиныЗаголовок,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(КлассныеЧиныЗаголовок, Уровень + 1);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		КлассныеЧиныШапка,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(КлассныеЧиныШапка, Уровень + 1);

		ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеКлассныхЧинов");
		Если ДанныеЗаполнения = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		Иначе
			ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
			Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			КонецЕсли;
		КонецЕсли;
		ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
		КлассныеЧиныКоличествоСтрок, ОбластиДополнительныхСтрок, КлассныеЧиныШапка, КлассныеЧиныСтрока, МассивЗаголовков, МассивПодвалов);

	КонецЕсли;

	// Аттестации
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(АттестацияЗаголовок);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	АттестацияЗаголовок,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(АттестацияЗаголовок, Уровень + 1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	АттестацияШапка,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(АттестацияШапка, Уровень + 1);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеАттестаций");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.Сотрудник);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;
	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	АттестацияКоличествоСтрок, ОбластиДополнительныхСтрок, АттестацияШапка, АттестацияСтрока, МассивЗаголовков, МассивПодвалов);

	// Повышении квалификации
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(ПовышениеКвалификацииЗаголовок);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ПовышениеКвалификацииЗаголовок,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ПовышениеКвалификацииЗаголовок, Уровень + 1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ПовышениеКвалификацииШапка,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ПовышениеКвалификацииШапка, Уровень + 1);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеПовышенияКвалификаций");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;
	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	ПовышениеКвалификацииКоличествоСтрок, ОбластиДополнительныхСтрок, ПовышениеКвалификацииШапка, ПовышениеКвалификацииСтрока, МассивЗаголовков, МассивПодвалов);

	// Профессиональная подготовка.
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(ПрофессиональнаяПереподготовкаЗаголовок);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ПрофессиональнаяПереподготовкаЗаголовок,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ПрофессиональнаяПереподготовкаЗаголовок, Уровень + 1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ПрофессиональнаяПереподготовкаШапка,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ПрофессиональнаяПереподготовкаШапка, Уровень + 1);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеПрофессиональныхПереподготовок");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;
	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	ПрофессиональнаяПереподготовкаКоличествоСтрок, ОбластиДополнительныхСтрок, ПрофессиональнаяПереподготовкаШапка, ПрофессиональнаяПереподготовкаСтрока, МассивЗаголовков, МассивПодвалов);

	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ЧетвертаяСтраницаТ2,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ЧетвертаяСтраницаТ2, Уровень+1);

	// Награды (поощрения), почетные звания.
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(ЗаголовокНаграды);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ЗаголовокНаграды,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ЗаголовокНаграды, Уровень+1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ШапкаНаграды,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ШапкаНаграды, Уровень+1);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияНаграды");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;
	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	5, ОбластиДополнительныхСтрок, ШапкаНаграды, СтрокаНаграды, МассивЗаголовков, МассивПодвалов);

	// Отпуск
	МассивЗаголовков = Новый Массив;
	МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
	МассивЗаголовков.Добавить(ЗаголовокОтпуска);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ЗаголовокОтпуска,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ЗаголовокОтпуска, Уровень+1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ШапкаОтпуска,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ШапкаОтпуска, Уровень+1);

	ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияОтпуска");
	Если ДанныеЗаполнения = Неопределено Тогда
		ДанныеЗаполненияПоСотруднику = Новый Массив;
	Иначе
		ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.Сотрудник);
		Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		КонецЕсли;
	КонецЕсли;

	ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
	СтрокВФормеТ2 = 14;

	ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
	СтрокВФормеТ2, ОбластиДополнительныхСтрок, ШапкаОтпуска, СтрокаОтпуска, МассивЗаголовков, МассивПодвалов);

	ВысотаТаблицыДополнительныхОтпусков = 0;
	ИндексОтпуска = 0;
	Для Каждого СведенияОтпуска Из ДанныеЗаполненияПоСотруднику Цикл

		Если ЗначениеЗаполнено(СведенияОтпуска.ВидОтпуска) Тогда

			Если Не ЗначениеЗаполнено(СведенияОтпуска.ДатаС) И Не ЗначениеЗаполнено(СведенияОтпуска.ДатаПо) Тогда

				Если ИндексОтпуска >= СтрокВФормеТ2 Тогда

					ТаблицаДокумента = ОбластиДополнительныхСтрок[ОбластиДополнительныхСтрок.Количество() - 1];

					Если ВысотаТаблицыДополнительныхОтпусков = 0 Тогда

						Для Каждого ТаблицаЗаголовка Из МассивЗаголовков Цикл
							ВысотаТаблицыДополнительныхОтпусков = ВысотаТаблицыДополнительныхОтпусков + ТаблицаЗаголовка.ВысотаТаблицы;
						КонецЦикла;

						ВысотаТаблицыДополнительныхОтпусков = ВысотаТаблицыДополнительныхОтпусков + ШапкаОтпуска.ВысотаТаблицы;

					КонецЕсли;

					НомерСтроки = ВысотаТаблицыДополнительныхОтпусков + ИндексОтпуска - СтрокВФормеТ2 + 1;
					ОбластьСтроки = ТаблицаДокумента.Область(НомерСтроки, 10, НомерСтроки, 12);

				Иначе

					НомерСтроки = ВысотаТаблицы + ИндексОтпуска + 1;
					ОбластьСтроки = ДокументРезультат.Область(НомерСтроки, 10, НомерСтроки, 12);

				КонецЕсли;

				ОбластьСтроки.Объединить();
				ОбластьСтроки.Текст = НСтр("ru = 'Выплачивается денежная компенсация';
				|en = 'Financial compensation is paid '");

			КонецЕсли;

		Иначе
			Прервать;
		КонецЕсли;

		ИндексОтпуска = ИндексОтпуска + 1;

	КонецЦикла;

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(ЧетвертаяСтраницаТ2Продолжение, СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
	ДокументРезультат.Вывести(ЧетвертаяСтраницаТ2Продолжение, Уровень+1);

	ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
	ЧетвертаяСтраницаТ2Продолжение2,
	СтрокаДанных,
	ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
	ЧетвертаяСтраницаТ2Продолжение2Параметры);
	ДокументРезультат.Вывести(ЧетвертаяСтраницаТ2Продолжение2, Уровень+1);

#КонецУдаления
#Вставка
	Если КлючВарианта = "Т2_ВУР_ВИЛС" Тогда                                                    					// begin fix Suetin 26.04.2021 19:24:20
		ДокументРезультат.Вывести(ВтораяСтраницаТ2Продолжение2Подвал, Уровень+1);
	Иначе

		Если ВыводитьФормуТ2ГС Тогда

			// Классные чины
			МассивЗаголовков = Новый Массив;
			МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
			МассивЗаголовков.Добавить(КлассныеЧиныЗаголовок);

			ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
			КлассныеЧиныЗаголовок,
			СтрокаДанных,
			ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
			ДокументРезультат.Вывести(КлассныеЧиныЗаголовок, Уровень + 1);

			ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
			КлассныеЧиныШапка,
			СтрокаДанных,
			ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
			ДокументРезультат.Вывести(КлассныеЧиныШапка, Уровень + 1);

			ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеКлассныхЧинов");
			Если ДанныеЗаполнения = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			Иначе
				ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
				Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
					ДанныеЗаполненияПоСотруднику = Новый Массив;
				КонецЕсли;
			КонецЕсли;
			ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
			КлассныеЧиныКоличествоСтрок, ОбластиДополнительныхСтрок, КлассныеЧиныШапка, КлассныеЧиныСтрока, МассивЗаголовков, МассивПодвалов);

		КонецЕсли;

		// Аттестации
		МассивЗаголовков = Новый Массив;
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
		МассивЗаголовков.Добавить(АттестацияЗаголовок);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		АттестацияЗаголовок,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(АттестацияЗаголовок, Уровень + 1);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		АттестацияШапка,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(АттестацияШапка, Уровень + 1);

		ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеАттестаций");
		Если ДанныеЗаполнения = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		Иначе
			ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.Сотрудник);
			Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			КонецЕсли;
		КонецЕсли;
		ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
		АттестацияКоличествоСтрок, ОбластиДополнительныхСтрок, АттестацияШапка, АттестацияСтрока, МассивЗаголовков, МассивПодвалов);

		// Повышении квалификации
		МассивЗаголовков = Новый Массив;
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
		МассивЗаголовков.Добавить(ПовышениеКвалификацииЗаголовок);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ПовышениеКвалификацииЗаголовок,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ПовышениеКвалификацииЗаголовок, Уровень + 1);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ПовышениеКвалификацииШапка,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ПовышениеКвалификацииШапка, Уровень + 1);

		ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеПовышенияКвалификаций");
		Если ДанныеЗаполнения = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		Иначе
			ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
			Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			КонецЕсли;
		КонецЕсли;
		ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
		ПовышениеКвалификацииКоличествоСтрок, ОбластиДополнительныхСтрок, ПовышениеКвалификацииШапка, ПовышениеКвалификацииСтрока, МассивЗаголовков, МассивПодвалов);

		// Профессиональная подготовка.
		МассивЗаголовков = Новый Массив;
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
		МассивЗаголовков.Добавить(ПрофессиональнаяПереподготовкаЗаголовок);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ПрофессиональнаяПереподготовкаЗаголовок,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ПрофессиональнаяПереподготовкаЗаголовок, Уровень + 1);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ПрофессиональнаяПереподготовкаШапка,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ПрофессиональнаяПереподготовкаШапка, Уровень + 1);

		ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеПрофессиональныхПереподготовок");
		Если ДанныеЗаполнения = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		Иначе
			ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
			Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			КонецЕсли;
		КонецЕсли;
		ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
		ПрофессиональнаяПереподготовкаКоличествоСтрок, ОбластиДополнительныхСтрок, ПрофессиональнаяПереподготовкаШапка, ПрофессиональнаяПереподготовкаСтрока, МассивЗаголовков, МассивПодвалов);

		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ЧетвертаяСтраницаТ2,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ЧетвертаяСтраницаТ2, Уровень+1);

		// Награды (поощрения), почетные звания.
		МассивЗаголовков = Новый Массив;
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
		МассивЗаголовков.Добавить(ЗаголовокНаграды);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ЗаголовокНаграды,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ЗаголовокНаграды, Уровень+1);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ШапкаНаграды,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ШапкаНаграды, Уровень+1);

		ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияНаграды");
		Если ДанныеЗаполнения = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		Иначе
			ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.ЛичныеДанныеФизическоеЛицо);
			Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			КонецЕсли;
		КонецЕсли;
		ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
		5, ОбластиДополнительныхСтрок, ШапкаНаграды, СтрокаНаграды, МассивЗаголовков, МассивПодвалов);

		// Отпуск
		МассивЗаголовков = Новый Массив;
		МассивЗаголовков.Добавить(ЗаголовокДополнительногоЛиста);
		МассивЗаголовков.Добавить(ЗаголовокОтпуска);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ЗаголовокОтпуска,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ЗаголовокОтпуска, Уровень+1);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ШапкаОтпуска,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ШапкаОтпуска, Уровень+1);

		ДанныеЗаполнения = ДополнительныеСведения.Получить("ДанныеЗаполненияОтпуска");
		Если ДанныеЗаполнения = Неопределено Тогда
			ДанныеЗаполненияПоСотруднику = Новый Массив;
		Иначе
			ДанныеЗаполненияПоСотруднику = ДанныеЗаполнения.Получить(СтрокаДанных.Сотрудник);
			Если ДанныеЗаполненияПоСотруднику = Неопределено Тогда
				ДанныеЗаполненияПоСотруднику = Новый Массив;
			КонецЕсли;
		КонецЕсли;

		ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
		СтрокВФормеТ2 = 14;

		ЗарплатаКадры.СформироватьОбластьТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ДанныеЗаполненияПоСотруднику,
		СтрокВФормеТ2, ОбластиДополнительныхСтрок, ШапкаОтпуска, СтрокаОтпуска, МассивЗаголовков, МассивПодвалов);

		ВысотаТаблицыДополнительныхОтпусков = 0;
		ИндексОтпуска = 0;
		Для Каждого СведенияОтпуска Из ДанныеЗаполненияПоСотруднику Цикл

			Если ЗначениеЗаполнено(СведенияОтпуска.ВидОтпуска) Тогда

				Если Не ЗначениеЗаполнено(СведенияОтпуска.ДатаС) И Не ЗначениеЗаполнено(СведенияОтпуска.ДатаПо) Тогда

					Если ИндексОтпуска >= СтрокВФормеТ2 Тогда

						ТаблицаДокумента = ОбластиДополнительныхСтрок[ОбластиДополнительныхСтрок.Количество() - 1];

						Если ВысотаТаблицыДополнительныхОтпусков = 0 Тогда

							Для Каждого ТаблицаЗаголовка Из МассивЗаголовков Цикл
								ВысотаТаблицыДополнительныхОтпусков = ВысотаТаблицыДополнительныхОтпусков + ТаблицаЗаголовка.ВысотаТаблицы;
							КонецЦикла;

							ВысотаТаблицыДополнительныхОтпусков = ВысотаТаблицыДополнительныхОтпусков + ШапкаОтпуска.ВысотаТаблицы;

						КонецЕсли;

						НомерСтроки = ВысотаТаблицыДополнительныхОтпусков + ИндексОтпуска - СтрокВФормеТ2 + 1;
						ОбластьСтроки = ТаблицаДокумента.Область(НомерСтроки, 10, НомерСтроки, 12);

					Иначе

						НомерСтроки = ВысотаТаблицы + ИндексОтпуска + 1;
						ОбластьСтроки = ДокументРезультат.Область(НомерСтроки, 10, НомерСтроки, 12);

					КонецЕсли;

					ОбластьСтроки.Объединить();
					ОбластьСтроки.Текст = НСтр("ru = 'Выплачивается денежная компенсация';
					|en = 'Financial compensation is paid '");

				КонецЕсли;

			Иначе
				Прервать;
			КонецЕсли;

			ИндексОтпуска = ИндексОтпуска + 1;

		КонецЦикла;

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(ЧетвертаяСтраницаТ2Продолжение, СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных));
		ДокументРезультат.Вывести(ЧетвертаяСтраницаТ2Продолжение, Уровень+1);

		ЗарплатаКадрыОтчеты.ЗаполнитьПараметрыОбластиМакета(
		ЧетвертаяСтраницаТ2Продолжение2,
		СтрокаДанных,
		ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(СоответствиеПользовательскихПолей, СтрокаДанных),
		ЧетвертаяСтраницаТ2Продолжение2Параметры);
		ДокументРезультат.Вывести(ЧетвертаяСтраницаТ2Продолжение2, Уровень+1);

	КонецЕсли; 
#КонецВставки
	ЗарплатаКадры.ВывестиОбластиТабличногоДокументаСОграниченнымНаборомСтрок(ДокументРезультат, ОбластиДополнительныхСтрок);

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, ПерваяСтрокаФормы, ОбъектыПечати, СтрокаДанных.Сотрудник);

КонецПроцедуры
