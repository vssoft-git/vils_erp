
&НаСервере
Процедура ВИЛС_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	ПродажиКлиентСервер.СформироватьТекстДокументыНаОсновании(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОткрытьРеквизитыПечатиРеализации")
Процедура ВИЛС_ОткрытьРеквизитыПечатиРеализации(ПоказыватьРеквизитыТТН)

	Попытка
		ЗаблокироватьДанныеФормыДляРедактирования();
	Исключение
		ПоказатьПредупреждение(Неопределено, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;

	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("АдресДоставки",                  Объект.АдресДоставки);
	СтруктураПараметров.Вставить("БанковскийСчетГрузоотправителя", Объект.БанковскийСчетГрузоотправителя);
	СтруктураПараметров.Вставить("БанковскийСчетГрузополучателя",  Объект.БанковскийСчетГрузополучателя);
	СтруктураПараметров.Вставить("БанковскийСчетКонтрагента",      Объект.БанковскийСчетКонтрагента);
	СтруктураПараметров.Вставить("Грузоотправитель",               Объект.Грузоотправитель);
	СтруктураПараметров.Вставить("Грузополучатель",                Объект.Грузополучатель);
	СтруктураПараметров.Вставить("ДоверенностьВыдана",             Объект.ДоверенностьВыдана);
	СтруктураПараметров.Вставить("ДоверенностьДата",               Объект.ДоверенностьДата);
	СтруктураПараметров.Вставить("ДоверенностьЛицо",               Объект.ДоверенностьЛицо);
	СтруктураПараметров.Вставить("ДоверенностьНомер",              Объект.ДоверенностьНомер);
	СтруктураПараметров.Вставить("Договор",                        Объект.Договор);
	СтруктураПараметров.Вставить("Основание",                      Объект.Основание);
	СтруктураПараметров.Вставить("ОснованиеНомер",                 Объект.ОснованиеНомер);
	СтруктураПараметров.Вставить("ОснованиеДата",                  Объект.ОснованиеДата);
	СтруктураПараметров.Вставить("Отпустил",                       Объект.Отпустил);
	СтруктураПараметров.Вставить("ОтпустилДолжность",              Объект.ОтпустилДолжность);
	СтруктураПараметров.Вставить("Партнер",                        Объект.Партнер);
	СтруктураПараметров.Вставить("ХозяйственнаяОперация",          Объект.ХозяйственнаяОперация);
	СтруктураПараметров.Вставить("Контрагент",                     Объект.Контрагент);
	СтруктураПараметров.Вставить("ТолькоПросмотр",                 ТолькоПросмотр);
	СтруктураПараметров.Вставить("ПоказыватьРеквизитыТТН",         ПоказыватьРеквизитыТТН);
	СтруктураПараметров.Вставить("ТипОбъекта",                     "РеализацияУслугПрочихАктивов");
	СтруктураПараметров.Вставить("БанковскийСчетОрганизации",      Объект.БанковскийСчетОрганизации);
	СтруктураПараметров.Вставить("Организация",                    Объект.Организация);
	СтруктураПараметров.Вставить("Дата",                           Объект.Дата);
	СтруктураПараметров.Вставить("Руководитель",                   Объект.Руководитель);
	СтруктураПараметров.Вставить("ГлавныйБухгалтер",               Объект.ГлавныйБухгалтер);
#Удаление
	СтруктураПараметров.Вставить("ТаблицаОснованийДляПечати",      ТаблицаОснованийДляПечати);

#КонецУдаления
#Вставка
// Здесь можно описать новое поведение.
	СтруктураПараметров.Вставить("ТаблицаОснованийДляПечати",      ТаблицаОснованийДляПечати);
	СтруктураПараметров.Вставить("ДополнительнаяИнформацияПоДоставке",""); // fix Suetin 01.02.2019 11:58:36
#КонецВставки
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("ХозяйственнаяОперация");
	СтруктураПараметров.Вставить("НеПоказыватьРеквизиты", МассивРеквизитов);

	ОткрытьФорму("ОбщаяФорма.РеквизитыПечатиРеализации", СтруктураПараметров, ЭтаФорма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ВИЛС_ТекстДокументыНаОснованииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	ПараметрыРегистрации = ПараметрыРегистрацииСчетовФактурВыданных(Объект);
	УчетНДСУПКлиент.ОбработкаНавигационнойСсылкиСчетаФактурыВыданные(ЭтаФорма, НавигационнаяСсылка,  СтандартнаяОбработка, ПараметрыРегистрации);
	
	ПродажиКлиент.ОбработкаНавигационнойСсылкиТранспортныеНакладные(ЭтаФорма, НавигационнаяСсылка, СтандартнаяОбработка);
	
	ФискальнаяОперацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
&После("ОбновитьТекстСчетаФактуры")
Процедура ВИЛС_ОбновитьТекстСчетаФактуры()
	ПродажиКлиентСервер.СформироватьТекстДокументыНаОсновании(ЭтаФорма);
КонецПроцедуры

//&НаСервере
//&ИзменениеИКонтроль("ПриЧтенииСозданииНаСервере")
//Процедура ВИЛС_ПриЧтенииСозданииНаСервере()

//	ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
//	ИспользоватьОтгрузкуБезПереходаПраваСобственности = ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности");
//	//++ НЕ УТ
//	ИспользуетсяУчетВНА_2_4 = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата);
//	//-- НЕ УТ
//#Вставка
//	ОбновитьТекстСчетаФактуры();
//#КонецВставки

//	ОснованиеИзменено = Ложь;
//	ТаблицаОснованийДляПечати.Загрузить(Документы.РеализацияУслугПрочихАктивов.ТаблицаОснованийДляПечати(Объект));
//	Если ПравоДоступа("Изменение", Метаданные.Документы.РеализацияУслугПрочихАктивов) И ЗначениеЗаполнено(Объект.Основание) Тогда
//		Если ЗначениеЗаполнено(Объект.Основание) Тогда
//			СтруктураОснования = Документы.РеализацияУслугПрочихАктивов.СформироватьОснование(Объект);
//			ОснованиеИзменено = (СокрЛП(Объект.Основание) <> СтруктураОснования.Основание) 
//			ИЛИ (СокрЛП(Объект.ОснованиеНомер) <> СтруктураОснования.ОснованиеНомер)
//			ИЛИ (Объект.ОснованиеДата <> СтруктураОснования.ОснованиеДата);
//		КонецЕсли;
//	КонецЕсли;

//	ИспользоватьНаправленияДеятельности = ПолучитьФункциональнуюОпцию("ИспользоватьУчетДоходовПоНаправлениямДеятельности");
//	НоваяАрхитектураВзаиморасчетов      = ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов");

//	ЗаполнитьДанныеФормы(Истина);
//	УстановитьВидимостьОпераций(Ложь);
//	НастроитьЭлементыФормы();
//	УстановитьСвойстваЭлементовПоПорядкуРасчетов();
//	УстановитьВидимостьЗапретаОтгрузкиПартнеру();
//	УстановитьВидимостьСтатусаИДатыПереходаПраваСобственности();
//	//++ НЕ УТ
//	УстановитьВидимостьСатьиАктиваПассива();
//	//-- НЕ УТ

//	ПланыВидовХарактеристик.СтатьиДоходов.ЗаполнитьПризнакАналитикаДоходовОбязательна(Объект.Доходы);
//	ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьПризнакАналитикаРасходовОбязательна(Объект.Расходы);
//	ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьПризнакАналитикаРасходовЗаказРеализация(Объект.Расходы);

//	ДатаДокументаДоИзменения = Объект.Дата;

//	Перечисления.ПорядокОплатыПоСоглашениям.ЗаполнитьВозможныеПорядкиОплаты(Объект.ВалютаВзаиморасчетов, Элементы.ПорядокОплаты, Объект.ПорядокОплаты);

//	//++ НЕ УТ
//	РеглУчетВызовСервера.ЗаполнитьПредставлениеСчетаРеглУчетаВТЧ(Объект.Расходы);
//	УстановитьЗаголовокСтраницыРасходы();
//	//-- НЕ УТ

//	Если Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов
//		И Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда

//		Элементы.Расходы.АвтоОтметкаНезаполненного = Ложь;
//		Элементы.Расходы.ОтметкаНезаполненного = Ложь;
//	Иначе
//		Элементы.Расходы.АвтоОтметкаНезаполненного = Истина;
//	КонецЕсли; 

//	//++ НЕ УТ
//	НастроитьЗависимыеЭлементыФормыНаСервере();
//	//-- НЕ УТ

//КонецПроцедуры


//&НаСервере
//&После("ОбновитьТекстСчетаФактуры")
//Процедура ВИЛС_ОбновитьТекстСчетаФактуры()
//	Если Элементы.Найти("ТекстТТН") = Неопределено Тогда
//		//Реквизиты
//		МассивДобавляемыхРеквизитов = Новый Массив;
//		Реквизит = Новый РеквизитФормы("ТекстТТН",Новый ОписаниеТипов("ФорматированнаяСтрока"),,"Текст ТТН");
//		МассивДобавляемыхРеквизитов.Добавить(Реквизит);
//		
//		ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
//		
//			
//		НовыйЭлемент = Элементы.Добавить("ТекстТТН",Тип("ПолеФормы"),Элементы.Подвал);
//		НовыйЭлемент.Заголовок = "Текст ТТН";
//		НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
//	КонецЕсли; 
//	ПродажиКлиентСервер.СформироватьТекстДокументыНаОсновании(ЭтаФорма);
//КонецПроцедуры

//&НаСервере
//&После("УстановитьВидимостьСтатусаИДатыПереходаПраваСобственности")
//Процедура ВИЛС_УстановитьВидимостьСтатусаИДатыПереходаПраваСобственности()
//		ОбновитьТекстДокументыНаОсновании();
//КонецПроцедуры

//&НаСервере
//Процедура ОбновитьТекстДокументыНаОсновании()
//	
//	ОбновитьТекстСчетаФактуры();
//	
//КонецПроцедуры
