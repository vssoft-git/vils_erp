
&ИзменениеИКонтроль("ЗаполнитьСтрокуРеестра")
Процедура ВИЛС_ЗаполнитьСтрокуРеестра(ROW, СтруктураДанных)
	
	ROW.TYPE_INFO = Число(СтруктураДанных.Перерасчет);
	Если СтруктураДанных.Перерасчет Тогда
		ROW.RECALC_REASON_CODE = Число(СтруктураДанных.КодПричиныПерерасчета);
	КонецЕсли;
	
	Если СтруктураДанных.ВидВыплаты = "1" Или СтруктураДанных.ВидВыплаты = "2" Тогда
		ROW.FSS_PAYMENT_FLAG = ?(ЗначениеЗаполнено(СтруктураДанных.ДатаНачалаОплаты), 1, 0);
	КонецЕсли;
	
	ROW.DOC_TYPE   = СтруктураДанных.ВидВыплаты;
	ROW.DOC_DT1    = СтруктураДанных.ДатаПредставленияПакетаДокументов;
	ROW.SNILS      = СтрЗаменить(СтрЗаменить(СтруктураДанных.СНИЛСПолучателя, "-","")," ","");
	ROW.SURNAME    = СтруктураДанных.Фамилия;
	ROW.NAME       = СтруктураДанных.Имя;
	ROW.PATRONIMIC = СтруктураДанных.Отчество;
	УстановитьЗначениеЕслиЗаполнено(ROW.INN_PERSON, СтруктураДанных.ИННПолучателя);
	
	ЗаполнитьСтатусНалогоплательщикаВСтрокеРеестра(ROW, СтруктураДанных);
	
	ROW.RESIDENT_CODE = СтруктураДанных.КодСтраны;
	ROW.BIRTHDAY      = СтруктураДанных.ДатаРождения;
	ROW.GENDER        = Число(СтруктураДанных.Пол = Перечисления.ПолФизическогоЛица.Женский);
	
	ROW.ID_TYPE = СтруктураДанных.УдостоверениеЛичностиКодМВД;
	ROW.ID_NO   = СокрЛПД(СтруктураДанных.СерияУдостоверенияЛичности + " " + СтруктураДанных.НомерУдостоверенияЛичности);
	ROW.ID_DT   = СтруктураДанных.ДатаВыдачиУдостоверенияЛичности;
	ROW.ID_DEPT = СокрЛПД(СтруктураДанных.КемВыданоУдостоверениеЛичности);
	УстановитьДатуЕслиЗаполнена(ROW.ID1_FN_DT, СтруктураДанных.УдостоверениеЛичностиСрокДействия);
	
	Если ЗначениеЗаполнено(СтруктураДанных.Гражданство)
		И СтруктураДанных.Гражданство <> ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтраныМира.Россия")
		И (ЗначениеЗаполнено(СтруктураДанных.СерияДокументаНаПроживание)
			Или ЗначениеЗаполнено(СтруктураДанных.НомерДокументаНаПроживание)
			Или ЗначениеЗаполнено(СтруктураДанных.ДатаВыдачиДокументаНаПроживание)) Тогда
		ROW.ID3_TYPE = СтруктураДанных.КодМВДДокументаНаПроживание;
		СерияНомер = СокрЛПД(СтруктураДанных.СерияДокументаНаПроживание + " " + СтруктураДанных.НомерДокументаНаПроживание);
		УстановитьЗначениеЕслиЗаполнено(ROW.ID3_NO, СерияНомер);
		УстановитьДатуЕслиЗаполнена(ROW.ID3_DT, СтруктураДанных.ДатаВыдачиДокументаНаПроживание);
	КонецЕсли;
	
	ROW.OWNER_FLAG = 1;
	ROW.EMPL_FLAG = Число(Не СтруктураДанных.Совместительство);
	
	HOLID_TYPE = Перечисления.ОснованияПрекращенияПособийПоУходу.ЗначениеЧислом(
		СтруктураДанных.ДосрочноеПрекращениеОтпускаПоУходуТипПриказа);
	Если HOLID_TYPE <> Неопределено Тогда
		ROW.HOLID_TYPE  = HOLID_TYPE;
		ROW.HOLID_NO    = СтруктураДанных.ДосрочноеПрекращениеОтпускаПоУходуНомерПриказа;
		ROW.HOLID_DT    = СтруктураДанных.ДосрочноеПрекращениеОтпускаПоУходуДатаПриказа;
		ROW.HOLID_DT_EX = СтруктураДанных.ДосрочноеПрекращениеОтпускаПоУходуДатаПрекращенияОплаты;
	КонецЕсли;
	
	// Извещение о представлении недостающих сведений в ФСС;
	// Решение об отказе в назначении пособия:
	Если СтруктураДанных.ИзвещениеИзФССИспользование Тогда
		ROW.RESP_NO = СтруктураДанных.ИзвещениеИзФССНомер;
		ROW.RESP_DT = СтруктураДанных.ИзвещениеИзФССДата;
	КонецЕсли;
	
	Если СтруктураДанных.СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ПочтовымПереводом Тогда
		ROW.PAYMENT_TYPE  = 0; // Способ выплаты: почтовый перевод.
		ОписаниеАдреса    = СтруктураАдреса(СтруктураДанных.АдресПолучателяФактический);
		ROW.POST_INDEX    = ОписаниеАдреса.Индекс;
		ROW.ADDR_A1       = ОписаниеАдреса.Регион;
		ROW.ADDR_A2       = ОписаниеАдреса.Район;
		ROW.ADDR_A3       = ОписаниеАдреса.Город;
		ROW.ADDR_A4       = ОписаниеАдреса.НаселенныйПункт;
		ROW.ADDR_PLAN     = ОписаниеАдреса.Территория;
		ROW.ADDR_A5       = ОписаниеАдреса.Улица;
		ROW.ADDR_HOUSE    = ОписаниеАдреса.Дом;
		ROW.ADDR_BUILDING = ОписаниеАдреса.Корпус;
		ROW.ADDR_FLAT     = ОписаниеАдреса.Квартира;
		ROW.ADDR_KLADR    = СтруктураДанных.АдресПолучателяФактическийКодКЛАДР;
		ROW.ADDR_GUID     = СтруктураДанных.АдресПолучателяФактическийИдентификаторФИАС;
	ИначеЕсли СтруктураДанных.СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ЧерезБанк Тогда
		ROW.PAYMENT_TYPE = 1; // Способ выплаты: банковский счет (расчетный счет).
		ROW.ACCOUNT_BIC  = СтруктураДанных.БИКБанка;
		ROW.ACCOUNT_NAME = СтруктураДанных.НаименованиеБанка;
		ROW.ACCOUNT      = СтруктураДанных.НомерЛицевогоСчета;
	ИначеЕсли СтруктураДанных.СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.НаКартуМИР Тогда
		ROW.PAYMENT_TYPE = 2; // Способ выплаты: банковский счет (карта МИР).
		ROW.PAYCARD_NUM  = БанковскиеКарты.ПолныйНомерКарты(СтруктураДанных.КартаМИР);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураДанных.ТелефонПолучателя) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформациейЗарплатаКадры.СтруктураТелефона(
			СтруктураДанных.ТелефонПолучателя);
		Если ЗначениеЗаполнено(СтруктураТелефона.Представление) Тогда
			ROW.PERSON_PHONE = УправлениеКонтактнойИнформациейЗарплатаКадры.ПредставлениеТелефона(СтруктураТелефона, 30);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураДанных.АдресПолучателяРегистрации) Тогда
		Если ROW.RESIDENT_FLAG = 1 Тогда
			ОписаниеАдреса = СтруктураАдреса(СтруктураДанных.АдресПолучателяРегистрации);
			ROW.POST_INDEX2    = ОписаниеАдреса.Индекс;
			ROW.ADDR2_A1       = ОписаниеАдреса.Регион;
			ROW.ADDR2_A2       = ОписаниеАдреса.Район;
			ROW.ADDR2_A3       = ОписаниеАдреса.Город;
			ROW.ADDR2_A4       = ОписаниеАдреса.НаселенныйПункт;
			ROW.ADDR2_PLAN     = ОписаниеАдреса.Территория;
			ROW.ADDR2_A5       = ОписаниеАдреса.Улица;
			ROW.ADDR2_HOUSE    = ОписаниеАдреса.Дом;
			ROW.ADDR2_BUILDING = ОписаниеАдреса.Корпус;
			ROW.ADDR2_FLAT     = ОписаниеАдреса.Квартира;
			ROW.ADDR2_KLADR    = СтруктураДанных.АдресПолучателяРегистрацииКодКЛАДР;
			ROW.ADDR2_GUID     = СтруктураДанных.АдресПолучателяРегистрацииИдентификаторФИАС;
		Иначе
			ROW.ADDR2 = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(
				СтруктураДанных.АдресПолучателяРегистрации,
				КадровыйУчет.ВидКонтактнойИнформацииАдресПоПропискеФизическиеЛица());
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураДанных.РайонныйКоэффициент >= 1.10 И СтруктураДанных.РайонныйКоэффициент <= 3 Тогда
		ROW.KF_REG = СтруктураДанных.РайонныйКоэффициент * 100;
	Иначе
		ROW.KF_REG = 100;
	КонецЕсли;
	
	Если СтруктураДанных.ВидВыплаты = "1" Или СтруктураДанных.ВидВыплаты = "2" Тогда
		Если ЗначениеЗаполнено(СтруктураДанных.ПериодПростояС1) Или ЗначениеЗаполнено(СтруктураДанных.ПериодПростояПо1)
			Или ЗначениеЗаполнено(СтруктураДанных.ПериодПростояС2) Или ЗначениеЗаполнено(СтруктураДанных.ПериодПростояПо2) Тогда
			
			ТипPERIODS = ROW.Свойства().Получить("PERIODS").Тип;
			PERIODS = ФабрикаXDTO.Создать(ТипPERIODS);
			
			ТипPERIOD = PERIODS.Свойства().Получить("PERIOD").Тип;
			
			Если ЗначениеЗаполнено(СтруктураДанных.ПериодПростояС1) Или ЗначениеЗаполнено(СтруктураДанных.ПериодПростояПо1) Тогда
				
				PERIOD = ФабрикаXDTO.Создать(ТипPERIOD);
				
				PERIOD.START_DATE   = XMLДатаДляРеестра(СтруктураДанных.ПериодПростояС1);
				PERIOD.END_DATE     = XMLДатаДляРеестра(СтруктураДанных.ПериодПростояПо1);
				PERIOD.IDLE_AVERAGE = СтруктураДанных.СреднийЗаработокНаПериодПростоя1;
				
				PERIODS.PERIOD.Добавить(PERIOD);
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтруктураДанных.ПериодПростояС2) Или ЗначениеЗаполнено(СтруктураДанных.ПериодПростояПо2) Тогда
				
				PERIOD = ФабрикаXDTO.Создать(ТипPERIOD);
				
				PERIOD.START_DATE   = XMLДатаДляРеестра(СтруктураДанных.ПериодПростояС2);
				PERIOD.END_DATE     = XMLДатаДляРеестра(СтруктураДанных.ПериодПростояПо2);
				PERIOD.IDLE_AVERAGE = СтруктураДанных.СреднийЗаработокНаПериодПростоя2;
				
				PERIODS.PERIOD.Добавить(PERIOD);
				
			КонецЕсли;
			
			ROW.PERIODS.Добавить(PERIODS);
			
		КонецЕсли;
		
		РазностьСтажей = УчетПособийСоциальногоСтрахования.ПодсчитатьРазностьСтажейВГодахИМесяцах(
			СтруктураДанных.СтажРасширенныйЛет,
			СтруктураДанных.СтажРасширенныйМесяцев,
			СтруктураДанных.СтажЛет,
			СтруктураДанных.СтажМесяцев);
		Если РазностьСтажей.РазностьЛет <> 0 Или РазностьСтажей.РазностьМесяцев <> 0 Тогда
			ROW.INSUR_YY = СтруктураДанных.СтажРасширенныйЛет;
			ROW.INSUR_MM = СтруктураДанных.СтажРасширенныйМесяцев;
			ROW.NOT_INSUR_YY = РазностьСтажей.РазностьЛет;
			ROW.NOT_INSUR_MM = РазностьСтажей.РазностьМесяцев;
		Иначе
			ROW.INSUR_YY = СтруктураДанных.СтажЛет;
			ROW.INSUR_MM = СтруктураДанных.СтажМесяцев;
		КонецЕсли;
		
		ROW.LN_CODE = СтруктураДанных.НомерЛисткаНетрудоспособности;
		ROW.LN_TYPE = Число(СтруктураДанных.ЭтоЭЛН);
		
		Если ЗначениеЗаполнено(СтруктураДанных.ПоУходуФИО1) Тогда
			УстановитьЗначениеЕслиЗаполнено(ROW.SERV1_DAYS, СтруктураДанных.УходЗаРодственникомИспользованоДней1);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанных.ПоУходуФИО2) Тогда
			УстановитьЗначениеЕслиЗаполнено(ROW.SERV2_DAYS, СтруктураДанных.УходЗаРодственникомИспользованоДней2);
		КонецЕсли;
		
		ROW.CALC_CONDITION1 = СтруктураДанных.УсловияИсчисленияКод1;
		ROW.CALC_CONDITION2 = СтруктураДанных.УсловияИсчисленияКод2;
		ROW.CALC_CONDITION3 = СтруктураДанных.УсловияИсчисленияКод3;
		Если СтруктураДанных.УсловияИсчисленияКод1 = "43"
			Или СтруктураДанных.УсловияИсчисленияКод2 = "43"
			Или СтруктураДанных.УсловияИсчисленияКод3 = "43" Тогда
			ЗаполнитьПричинуРадиационногоВоздействия(ROW, СтруктураДанных);
		КонецЕсли;
		УстановитьДатуЕслиЗаполнена(ROW.FORM1_DT, СтруктураДанных.ДатаАктаФормыН1);
		УстановитьДатуЕслиЗаполнена(ROW.RETURN_DATE_EMPL, СтруктураДанных.ДатаНачалаРаботы);
		Если ЗначениеЗаполнено(СтруктураДанных.СрочныйДоговорС) И ЗначениеЗаполнено(СтруктураДанных.СрочныйДоговорПо) Тогда
			ROW.WORK_CONTRACT_START_DT  = XMLДатаДляРеестра(СтруктураДанных.СрочныйДоговорС);
			ROW.WORK_CONTRACT_FINISH_DT = XMLДатаДляРеестра(СтруктураДанных.СрочныйДоговорПо);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанных.ДатаНачалаОплаты) Тогда
			ROW.DT1 = XMLДатаДляРеестра(СтруктураДанных.ДатаНачалаОплаты);
			ROW.DT2 = XMLДатаДляРеестра(СтруктураДанных.ДатаОкончанияОплаты);
		КонецЕсли;
		УстановитьЗначениеЕслиЗаполнено(ROW.EMPL_PAYMENT, СтруктураДанных.СуммаПособияРаботодателя);
		УстановитьЗначениеЕслиЗаполнено(ROW.FSS_PAYMENT, СтруктураДанных.СуммаПособияФСС);
		УстановитьЗначениеЕслиЗаполнено(ROW.PAYMENT, СтруктураДанных.СуммаПособияВсего);
	КонецЕсли;
	
	УстановитьЗначениеЕслиЗаполнено(ROW.EMPL_NOTE, СтруктураДанных.ИнаяИнформация);
	
	Если СтруктураДанных.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки
		Или СтруктураДанных.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки Тогда
		PREGN12W_FLAG = 1; // Да, поставлена на учет.
	ИначеЕсли СтруктураДанных.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам Тогда
		Если СтруктураДанных.ПоставленаНаУчетВРанниеСрокиБеременности = Перечисления.ПостановкаНаУчетВРанниеСрокиБеременности.НеИзвестно Тогда
			PREGN12W_FLAG = 2; // Отсутствует информация.
		ИначеЕсли СтруктураДанных.ПоставленаНаУчетВРанниеСрокиБеременности = Перечисления.ПостановкаНаУчетВРанниеСрокиБеременности.Поставлена Тогда
			PREGN12W_FLAG = 1; // Да, поставлена на учет.
		Иначе
			PREGN12W_FLAG = 0; // Нет, не поставлена на учет.
		КонецЕсли;
	Иначе
		PREGN12W_FLAG = Неопределено;
	КонецЕсли;
	Если PREGN12W_FLAG <> Неопределено Тогда
		ROW.PREGN12W_FLAG = PREGN12W_FLAG;
	КонецЕсли;
	
	ЗаполнитьСведенияОЛисткеНетрудоспособностиВСтрокеРеестра(ROW, СтруктураДанных);
	
	Если СтруктураДанных.ВидВыплаты = "1" Или СтруктураДанных.ВидВыплаты = "2" Или СтруктураДанных.ВидВыплаты = "5" Тогда
		ROW.BASE_AVG_DAILY_SAL = СтруктураДанных.СреднийЗаработокЗаРасчетныйПериод;
		Если СтруктураДанных.ПорядокРасчетаСреднегоЗаработка = Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок Тогда
			ROW.YEAR1 = СтруктураДанных.ПервыйГодРасчета;
			ROW.YEAR2 = СтруктураДанных.ВторойГодРасчета;
			
			Если СтруктураДанных.ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка Тогда
				ROW.YEAR_CHANGE_FLAG = 1;
				ROW.YEAR1_OLD = СтруктураДанных.ЗамененныйПервыйГодРасчета;
				ROW.YEAR2_OLD = СтруктураДанных.ЗамененныйВторойГодРасчета;
			Иначе
				ROW.YEAR_CHANGE_FLAG = 0;
			КонецЕсли;
			
			ROW.BASE_CALC_DAYS = СтруктураДанных.КалендарныхДнейРасчетногоПериода;
			ROW.BASE_SUM1 = СтруктураДанных.ЗаработокПервыйГодРасчета;
			ROW.BASE_SUM2 = СтруктураДанных.ЗаработокВторойГодРасчета;
			ROW.BASE_AVG_SAL = СреднийЗаработокЗаДваКалендарныхГода(СтруктураДанных);
		КонецЕсли;
		Если СтруктураДанных.ДоляВремени > 0 И СтруктураДанных.ДоляВремени < 1 Тогда
			ROW.KF_SHORT_DAY = Окр(СтруктураДанных.ДоляВремени, 3);
		Иначе
			ROW.KF_SHORT_DAY = 1;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураДанных.ВидВыплаты = "3" 
		Или (СтруктураДанных.ВидВыплаты = "2" И PREGN12W_FLAG = 1) Тогда
		ROW.REF_12WEEK_NO = СтруктураДанных.НомерСправкиБеременной;
		ROW.REF_12WEEK_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаСправкиБеременной);
	КонецЕсли;
	
	Если СтруктураДанных.ВидВыплаты = "4" Тогда
		
		Если ЗначениеЗаполнено(СтруктураДанных.ВидСправкиОРожденииРебенка)
			И ЗначениеЗаполнено(СтруктураДанных.НомерСправки)
			И ЗначениеЗаполнено(СтруктураДанных.ДатаСправки) Тогда
			
			Если СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма24 Тогда
				ВидСправкиОРожденииРебенка = "24"; 
			ИначеЕсли СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма25 Тогда
				ВидСправкиОРожденииРебенка = "25"; 
			ИначеЕсли СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма26 Тогда
				ВидСправкиОРожденииРебенка = "26"; 
			ИначеЕсли СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма1 Тогда
				ВидСправкиОРожденииРебенка = "48";
			ИначеЕсли СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма2 Тогда
				ВидСправкиОРожденииРебенка = "49";
			ИначеЕсли СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма3 Тогда
				ВидСправкиОРожденииРебенка = "50";
			ИначеЕсли СтруктураДанных.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма4 Тогда
				ВидСправкиОРожденииРебенка = "51"; 
			КонецЕсли;	
			ROW.REF_TYPE = ВидСправкиОРожденииРебенка;
			ROW.REF_24_NO = СтруктураДанных.НомерСправки;
			ROW.REF_24_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаСправки);
			
		Иначе
			
			ЗаполнитьИнойДокументПодтверждающийРождениеРебенка(ROW, СтруктураДанных);
			
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанных.НомерДоговораОПередачеНаВоспитание) И ЗначениеЗаполнено(СтруктураДанных.ДатаДоговораОПередачеНаВоспитание) Тогда
			ROW.REF_FAMILY_NO = СтруктураДанных.НомерДоговораОПередачеНаВоспитание;
			ROW.REF_FAMILY_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаДоговораОПередачеНаВоспитание);
		КонецЕсли;
		ROW.REF_NPAY_OTHER_NO = СтруктураДанных.НомерСправкиОтДругогоРодителя;
		ROW.REF_NPAY_OTHER_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаСправкиОтДругогоРодителя); 
		
	КонецЕсли;
	
	Если СтруктураДанных.ВидВыплаты = "2" Или СтруктураДанных.ВидВыплаты = "5" Тогда
		ROW.HOLID_DT_ST  = XMLДатаДляРеестра(СтруктураДанных.ДатаНачала);
		ROW.HOLID_DT_FN  = XMLДатаДляРеестра(СтруктураДанных.ДатаОкончания);
		ROW.HOLID_ORD_NO = СтруктураДанных.НомерПриказаНаОтпускПоУходуЗаРебенком;
		ROW.HOLID_ORD_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаПриказаНаОтпускПоУходуЗаРебенком);
	КонецЕсли;
	
	Если СтруктураДанных.ВидВыплаты = "4" Или СтруктураДанных.ВидВыплаты = "5" Тогда
		ROW.CERT_BR         = XMLДатаДляРеестра(СтруктураДанных.ДатаРожденияРебенка);
		ROW.CERT_SURNAME    = СтруктураДанных.ФамилияРебенка;
		ROW.CERT_NAME       = СтруктураДанных.ИмяРебенка;
		ROW.CERT_PATRONIMIC = СтруктураДанных.ОтчествоРебенка;
		Если ЗначениеЗаполнено(СтруктураДанных.УсыновлениеОпека) Тогда
			ROW.WARD_FLAG   = СтруктураДанных.УсыновлениеОпека;
			ROW.WARD_REF_NO = СтруктураДанных.УсыновлениеОпекаСерияНомер;
			ROW.WARD_REF_DT = XMLДатаДляРеестра(СтруктураДанных.УсыновлениеОпекаДатаВыдачи);
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураДанных.ВидВыплаты = "5" Тогда
		
		ROW.MULTPATR            = Число(СтруктураДанных.ОдновременныйУходЗаНесколькимиДетьми);
		ROW.CHILD_SER           = СтруктураДанных.Очередность;
		ROW.MH_OUT              = Число(СтруктураДанных.НаличиеРешенияСудаОЛишенииПрав);
		ROW.OTHER_CHILD_FLAG_DT = Число(СтруктураДанных.НаличиеСвидетельстваОСмертиПредыдущихДетей);
		ROW.OTHER_CHILD_FLAG_BR = Число(СтруктураДанных.НаличиеОдногоИзДокументовНаПредыдущихДетей);
		
		Если СтруктураДанных.ВидПодтверждающегоДокумента = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении Тогда
			ROW.CERT_NO = СокрЛПД(СтруктураДанных.СерияНомерПодтверждающегоДокумента);
			ROW.CERT_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаПодтверждающегоДокумента);
		Иначе
			ЗаполнитьИнойДокументПодтверждающийРождениеРебенка(ROW, СтруктураДанных);
		КонецЕсли;
		Если СтруктураДанных.ОдновременныйУходЗаНесколькимиДетьми Тогда
			ROW.AVG_SAL = Окр(СтруктураДанных.СреднийЗаработокЗаРасчетныйПериод * 30.4, 2);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанных.НомерПриказаОЗаменеПослеродовогоОтпуска) И ЗначениеЗаполнено(СтруктураДанных.ДатаПриказаОЗаменеПослеродовогоОтпуска) Тогда
			ROW.HOLID_CH_ORD_NO = СтруктураДанных.НомерПриказаОЗаменеПослеродовогоОтпуска;
			ROW.HOLID_CH_ORD_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаПриказаОЗаменеПослеродовогоОтпуска);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанных.НомерСправкиОНеполученииПособияОтОтца) И ЗначениеЗаполнено(СтруктураДанных.ДатаСправкиОНеполученииПособияОтОтца) Тогда
			ROW.REF_NPAY_FATHER_NO = СтруктураДанных.НомерСправкиОНеполученииПособияОтОтца;
			ROW.REF_NPAY_FATHER_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаСправкиОНеполученииПособияОтОтца);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанных.НомерСправкиОНеполученииПособияОтМатери) И ЗначениеЗаполнено(СтруктураДанных.ДатаСправкиОНеполученииПособияОтМатери) Тогда
			ROW.REF_NPAY_MOTHER_NO = СтруктураДанных.НомерСправкиОНеполученииПособияОтМатери;
			ROW.REF_NPAY_MOTHER_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаСправкиОНеполученииПособияОтМатери);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураДанных.НомерСправкиПоДругимМестамРаботы) И ЗначениеЗаполнено(СтруктураДанных.ДатаСправкиПоДругимМестамРаботы) Тогда
			ROW.REF_NPAY_WORK_NO = СтруктураДанных.НомерСправкиПоДругимМестамРаботы;
			ROW.REF_NPAY_WORK_DT = XMLДатаДляРеестра(СтруктураДанных.ДатаСправкиПоДругимМестамРаботы);
		КонецЕсли;
		УстановитьДатуЕслиЗаполнена(ROW.CERT_DT_DATE, СтруктураДанных.ДатаСмертиРебенка);
		Если ЗначениеЗаполнено(СтруктураДанных.ФинансированиеФедеральнымБюджетом) 
			И НЕ СтруктураДанных.ФинансированиеФедеральнымБюджетом = Перечисления.ОснованияФинансированияПособияФедеральнымБюджетом.ЗачетНестраховыхПериодов 
			И ЗначениеЗаполнено(СтруктураДанных.ПроживаниеРаботаВЛьготнойЗоне)
			И НЕ СтруктураДанных.ПроживаниеРаботаВЛьготнойЗоне = Перечисления.ОтношениеКОсобойЗоне.Нет Тогда
			
			Если СтруктураДанных.ПроживаниеРаботаВЛьготнойЗоне = Перечисления.ОтношениеКОсобойЗоне.Проживает Тогда
				ROW.LIVE_COND_FLAG 	= 1; 
			ИначеЕсли СтруктураДанных.ПроживаниеРаботаВЛьготнойЗоне = Перечисления.ОтношениеКОсобойЗоне.Работает Тогда	
				ROW.LIVE_COND_FLAG 	= 2; 
			КонецЕсли;
			
			Если СтруктураДанных.СтатусЛьготнойЗоны = Перечисления.ВидыОсобойЗоныПроживанияРаботы.ЗонаСПравомНаОтселение Тогда
				ROW.LIVE_COND 		= 1;
			ИначеЕсли СтруктураДанных.СтатусЛьготнойЗоны = Перечисления.ВидыОсобойЗоныПроживанияРаботы.ЗонаОтселения Тогда	
				ROW.LIVE_COND 		= 3;
			ИначеЕсли СтруктураДанных.СтатусЛьготнойЗоны = Перечисления.ВидыОсобойЗоныПроживанияРаботы.ЗонаСЛьготнымСоциальноЭкономическимСтатусом Тогда 
				ROW.LIVE_COND 		= 2;
			ИначеЕсли СтруктураДанных.СтатусЛьготнойЗоны = Перечисления.ВидыОсобойЗоныПроживанияРаботы.ЗонаЗагрязненияПриАварииПОМаяк Тогда 
				ROW.LIVE_COND 		= 4;
			КонецЕсли;
			
			ЗаполнитьПричинуРадиационногоВоздействия(ROW, СтруктураДанных);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
