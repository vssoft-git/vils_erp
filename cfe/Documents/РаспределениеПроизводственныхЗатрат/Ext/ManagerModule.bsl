
&После("Печать")
Процедура ВИЛС_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВИЛС_АктИнвентаризацииМатериаловИПолуфабрикатов") Тогда
		
		ТабличныйДокумент = ВИЛС_СформироватьАктИнвентаризацииМатериаловИПолуфабрикатов(ПараметрыПечати, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
									КоллекцияПечатныхФорм, 
									"ВИЛС_АктИнвентаризацииМатериаловИПолуфабрикатов",
									НСтр("ru = 'Акт инвентаризации материалов и полуфабрикатов в цехе (ВИЛС';
										|en = 'Report on materials and semi-finished products stocktaking in the shop (VILS)'"),
									ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

Функция ВИЛС_СформироватьАктИнвентаризацииМатериаловИПолуфабрикатов(ПараметрыПечати, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РаспределениеПроизводственныхЗатрат.ПФ_MXL_АктИнвентаризацииМатериаловИПолуфабрикатов2_2_ВИЛС");
		
	// begin fix Suetin 14.01.2020 16:35:52
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ГруппыФУН.Ссылка КАК ГруппаФинансовогоУчета
	|ПОМЕСТИТЬ ГруппыФУН
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФУН
	|ГДЕ
	|	ВЫБОР КОГДА ГруппыФУН.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы)) ТОГДА ИСТИНА
	|		КОГДА ГруппыФУН.СчетУчетаНаСкладе = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Полуфабрикаты) 
	|			ТОГДА ИСТИНА   
	|		КОГДА ГруппыФУН.СчетУчетаНаСкладе = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ГотоваяПродукция)
	|			ТОГДА ИСТИНА   
	|		ИНАЧЕ ЛОЖЬ 
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ДД.Организация 								КАК Организация,
	|	ДД.Организация.Представление 				КАК ОрганизацияПредставление,
	|	ДД.Подразделение 							КАК Подразделение,
	|	ДД.Подразделение.Представление 				КАК ПодразделениеПредставление,
	|	СпрНоменклатура.Ссылка						КАК Номенклатура,
	|	СпрНоменклатура.Код 						КАК НоменклатураКод,
	|	СпрНоменклатура.Артикул 					КАК НоменклатураАртикул,
	|	СпрНоменклатура.ЕдиницаИзмерения 			КАК ЕдиницаИзмерения,
	|	СпрНоменклатура.Представление 				КАК НоменклатураПредставление,
	|	ДД.Характеристика 							КАК Характеристика,
	|	ДД.Характеристика.Представление 			КАК ХарактеристикаПредставление,
	|	ДД.ЗаказНаПроизводство 						КАК Документ,
	//|	СУММА(ДД.еКонечныйОстатокКоличество) 		КАК еКонечныйОстатокКоличество,
	//|	СУММА(ДД.еКонечныйОстатокСтоимость) 		КАК еКонечныйОстатокСтоимость,
	//|	СУММА(ДД.еКонечныйОстатокПР) 				КАК еКонечныйОстатокПР,
	//|	СУММА(ДД.еКонечныйОстатокВР) 				КАК еКонечныйОстатокВР,    
	//|	СУММА(ДД.еКонечныйОстатокЗабалансовая) 		КАК еКонечныйОстатокЗабалансовая,
	|	СУММА(ДД.еКонечныйОстатокКоличество) 		КАК Наличие,
	|	СУММА(ДД.еКонечныйОстатокСтоимость) + СУММА(ДД.еКонечныйОстатокЗабалансовая) КАК НаличиеСтоимость
	|ИЗ
	|	(ВЫБРАТЬ
	|		""Производство"" 					КАК Таблица,
	|		""Конечный остаток (материалы)"" 	КАК Содержание,
	|		ДД.Организация 						КАК Организация,
	|		Аналитика.МестоХранения 			КАК Подразделение,
	|		Аналитика.Номенклатура 				КАК Номенклатура,
	|		Аналитика.Характеристика 			КАК Характеристика,
	|		ВЫБОР
	|			КОГДА СпрПартииПроизводства.Документ ЕСТЬ НЕ NULL 
	|					И ТИПЗНАЧЕНИЯ(СпрПартииПроизводства.Документ) = ТИП(Документ.ЗаказНаПроизводство2_2)
	|				ТОГДА СпрПартииПроизводства.Документ
	|			КОГДА ИСТИНА
	|				ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
	|			КОГДА ИСТИНА
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|		КОНЕЦ 								КАК ЗаказНаПроизводство,
	|		ВЫБОР
	|			КОГДА Аналитика.СтатьяКалькуляции.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ВозвратныеОтходы)
	|				ТОГДА -ДД.КоличествоОстаток
	|			ИНАЧЕ ДД.КоличествоОстаток
	|		КОНЕЦ 						КАК еКонечныйОстатокКоличество,
	|		ВЫБОР
	|			КОГДА &ДанныеПоСебестоимости = 1
	|				ТОГДА ДД.СтоимостьОстаток + ДД.ДопРасходыОстаток + ДД.ТрудозатратыОстаток + ДД.ПостатейныеПостоянныеСНДСОстаток + ДД.ПостатейныеПеременныеСНДСОстаток
	|			КОГДА &ДанныеПоСебестоимости = 2
	|				ТОГДА ДД.СтоимостьБезНДСОстаток + ДД.ДопРасходыБезНДСОстаток + ДД.ТрудозатратыОстаток + ДД.ПостатейныеПостоянныеБезНДСОстаток + ДД.ПостатейныеПеременныеБезНДСОстаток
	|			КОГДА &ДанныеПоСебестоимости = 3
	|				ТОГДА ДД.СтоимостьУпрОстаток + ДД.ДопРасходыУпрОстаток + ДД.ТрудозатратыУпрОстаток + ДД.ПостатейныеПостоянныеУпрОстаток + ДД.ПостатейныеПеременныеУпрОстаток
	|			КОГДА &ДанныеПоСебестоимости = 4
	|				ТОГДА ДД.СтоимостьРеглОстаток + ДД.ДопРасходыРеглОстаток + ДД.ТрудозатратыРеглОстаток + ДД.ПостатейныеПостоянныеРеглОстаток + ДД.ПостатейныеПеременныеРеглОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА &ПоПредприятию
	|						ТОГДА ДД.СтоимостьБезНДСОстаток + ДД.ДопРасходыБезНДСОстаток + ДД.ТрудозатратыОстаток + ДД.ПостатейныеПостоянныеБезНДСОстаток + ДД.ПостатейныеПеременныеБезНДСОстаток
	|					ИНАЧЕ ДД.СтоимостьУпрОстаток + ДД.ДопРасходыУпрОстаток + ДД.ТрудозатратыУпрОстаток + ДД.ПостатейныеПостоянныеУпрОстаток + ДД.ПостатейныеПеременныеУпрОстаток
	|				КОНЕЦ
	|		КОНЕЦ 						КАК еКонечныйОстатокСтоимость,
	
	//|		ДД.ПостояннаяРазницаОстаток КАК еКонечныйОстатокПР,
	//|		ДД.ВременнаяРазницаОстаток 	КАК еКонечныйОстатокВР,
	|		ВЫБОР
	|			КОГДА &ДанныеПоСебестоимости = 1
	|				ТОГДА 0
	|			КОГДА &ДанныеПоСебестоимости = 2
	|					ИЛИ &ДанныеПоСебестоимости = 3
	|				ТОГДА ДД.СтоимостьЗабалансоваяОстаток
	|			КОГДА &ДанныеПоСебестоимости = 4
	|				ТОГДА ДД.СтоимостьЗабалансоваяРеглОстаток
	|		КОНЕЦ 						КАК еКонечныйОстатокЗабалансовая
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				{(&ОкончаниеПериодаГраница)}, 
	|				АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|					И (АналитикаУчетаНоменклатуры.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|						ИЛИ Партия ССЫЛКА Документ.ЗаказНаПроизводство)
	|					И (ВЫБОР КОГДА &ОрганизацияЗаполнено ТОГДА Организация = &Организация ИНАЧЕ ИСТИНА КОНЕЦ)
	|			) КАК ДД
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО ДД.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|			ПО (СпрПартииПроизводства.Ссылка = ДД.Партия)
	|	ГДЕ 
	|			(ВЫБОР КОГДА &ПодразделениеЗаполнено ТОГДА Аналитика.МестоХранения = &Подразделение ИНАЧЕ ИСТИНА КОНЕЦ)
	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Производство"",
	|		""Конечный остаток (трудозатраты) для 2.2"",
	|		ДД.Организация,
	|		ДД.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|		ВЫБОР
	|			КОГДА СпрПартииПроизводства.Документ ЕСТЬ НЕ NULL 
	|					И ТИПЗНАЧЕНИЯ(СпрПартииПроизводства.Документ) = ТИП(Документ.ЗаказНаПроизводство2_2)
	|				ТОГДА СпрПартииПроизводства.Документ
	|			КОГДА ИСТИНА
	|				ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
	|			КОГДА ИСТИНА
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		ДД.КоличествоОстаток,
	|		ВЫБОР
	|			КОГДА &ДанныеПоСебестоимости = 4
	|				ТОГДА ДД.СтоимостьРеглОстаток
	|			ИНАЧЕ ДД.СтоимостьОстаток
	|		КОНЕЦ,
	//|		0,
	//|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ТрудозатратыНезавершенногоПроизводства.Остатки(
	|				{(&ОкончаниеПериодаГраница)},
	|				(ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|					ИЛИ УдалитьПартияПроизводства <> НЕОПРЕДЕЛЕНО)
	|					И (ВЫБОР КОГДА &ОрганизацияЗаполнено ТОГДА Организация = &Организация ИНАЧЕ ИСТИНА КОНЕЦ)
	|					И (ВЫБОР КОГДА &ПодразделениеЗаполнено ТОГДА Подразделение = &Подразделение ИНАЧЕ ИСТИНА КОНЕЦ)) КАК ДД
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|			ПО (СпрПартииПроизводства.Ссылка = ДД.ПартияПроизводства)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Производство"",
	|		""Конечный остаток (трудозатраты) для 2.1"",
	|		ДД.Организация,
	|		ДД.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|		ДД.ЗаказНаПроизводство,
	|		ДД.КоличествоОстаток,
	|		ВЫБОР
	|			КОГДА &ДанныеПоСебестоимости = 4
	|				ТОГДА ДД.СтоимостьРеглОстаток
	|			ИНАЧЕ ДД.СтоимостьОстаток
	|		КОНЕЦ,
	//|		0,
	//|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.ТрудозатратыНезавершенногоПроизводства.Остатки(
	|				{(&ОкончаниеПериодаГраница)},
	|				ПартияПроизводства = ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|					И УдалитьПартияПроизводства = НЕОПРЕДЕЛЕНО
	|					И (ВЫБОР КОГДА &ОрганизацияЗаполнено ТОГДА Организация = &Организация ИНАЧЕ ИСТИНА КОНЕЦ)
	|					И (ВЫБОР КОГДА &ПодразделениеЗаполнено ТОГДА Подразделение = &Подразделение ИНАЧЕ ИСТИНА КОНЕЦ)) КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Производство"",
	|		""Конечный остаток (постатейные) для 2.2"",
	|		ДД.Организация,
	|		ДД.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|		ВЫБОР
	|			КОГДА СпрПартииПроизводства.Документ ЕСТЬ НЕ NULL 
	|					И ТИПЗНАЧЕНИЯ(СпрПартииПроизводства.Документ) = ТИП(Документ.ЗаказНаПроизводство2_2)
	|				ТОГДА СпрПартииПроизводства.Документ
	|			КОГДА ИСТИНА
	|				ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
	|			КОГДА ИСТИНА
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		0,
	|		ВЫБОР
	|			КОГДА &ДанныеПоСебестоимости = 1
	|				ТОГДА ДД.СтоимостьОстаток
	|			КОГДА &ДанныеПоСебестоимости = 2
	|				ТОГДА ДД.СтоимостьБезНДСОстаток
	|			КОГДА &ДанныеПоСебестоимости = 3
	|				ТОГДА ДД.СтоимостьУпрОстаток
	|			КОГДА &ДанныеПоСебестоимости = 4
	|				ТОГДА ДД.СтоимостьРеглОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА &ПоПредприятию
	|						ТОГДА ДД.СтоимостьБезНДСОстаток
	|					ИНАЧЕ ДД.СтоимостьУпрОстаток
	|				КОНЕЦ
	|		КОНЕЦ,
	//|		ДД.ПостояннаяРазницаОстаток,
	//|		ДД.ВременнаяРазницаОстаток,
	|		0
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства.Остатки(
	|				{(&ОкончаниеПериодаГраница)},
	|				(ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|					ИЛИ УдалитьПартияПроизводства <> НЕОПРЕДЕЛЕНО)
	|					И (ВЫБОР КОГДА &ОрганизацияЗаполнено ТОГДА Организация = &Организация ИНАЧЕ ИСТИНА КОНЕЦ)
	|					И (ВЫБОР КОГДА &ПодразделениеЗаполнено ТОГДА Подразделение = &Подразделение ИНАЧЕ ИСТИНА КОНЕЦ)) КАК ДД
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|			ПО (СпрПартииПроизводства.Ссылка = ДД.ПартияПроизводства)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Производство"",
	|		""Конечный остаток (постатейные) для 2.1"",
	|		ДД.Организация,
	|		ДД.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|		ВЫБОР
	|			КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
	|				ТОГДА ДД.ЗаказНаПроизводство
	|			КОГДА ИСТИНА
	|				ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			КОГДА ИСТИНА
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		0,
	|		ВЫБОР
	|			КОГДА &ДанныеПоСебестоимости = 1
	|				ТОГДА ДД.СтоимостьОстаток
	|			КОГДА &ДанныеПоСебестоимости = 2
	|				ТОГДА ДД.СтоимостьБезНДСОстаток
	|			КОГДА &ДанныеПоСебестоимости = 3
	|				ТОГДА ДД.СтоимостьУпрОстаток
	|			КОГДА &ДанныеПоСебестоимости = 4
	|				ТОГДА ДД.СтоимостьРеглОстаток
	|			ИНАЧЕ ВЫБОР
	|					КОГДА &ПоПредприятию
	|						ТОГДА ДД.СтоимостьБезНДСОстаток
	|					ИНАЧЕ ДД.СтоимостьУпрОстаток
	|				КОНЕЦ
	|		КОНЕЦ,
	//|		ДД.ПостояннаяРазницаОстаток,
	//|		ДД.ВременнаяРазницаОстаток,
	|		0
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства.Остатки(
	|				{(&ОкончаниеПериодаГраница)},
	|				ПартияПроизводства = ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
	|					И УдалитьПартияПроизводства = НЕОПРЕДЕЛЕНО
	|					И (ВЫБОР КОГДА &ОрганизацияЗаполнено ТОГДА Организация = &Организация ИНАЧЕ ИСТИНА КОНЕЦ)
	|					И (ВЫБОР КОГДА &ПодразделениеЗаполнено ТОГДА Подразделение = &Подразделение ИНАЧЕ ИСТИНА КОНЕЦ)) КАК ДД) КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГруппыФУН КАК ГруппыФУН
	|			ПО СпрНоменклатура.ГруппаФинансовогоУчета = ГруппыФУН.ГруппаФинансовогоУчета
	|		ПО ДД.Номенклатура = СпрНоменклатура.Ссылка
	| 
	|СГРУППИРОВАТЬ ПО
	|	ДД.Организация,
	|	ДД.Организация.Представление,
	|	ДД.Подразделение,
	|	ДД.Подразделение.Представление,
	|	ДД.Характеристика,
	|	ДД.Характеристика.Представление,
	|	ДД.ЗаказНаПроизводство,
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.Код,
	|	СпрНоменклатура.Артикул,
	|	СпрНоменклатура.ЕдиницаИзмерения,
	|	СпрНоменклатура.Представление
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	Номенклатура,
	|	Характеристика,
	|	Документ
	|
	|ИТОГИ
	//|	СУММА(аНачальныйОстатокКоличество),
	//|	СУММА(бПоступилоКоличество),
	|	СУММА(НаличиеСтоимость),
	|	СУММА(Наличие) 
	|ПО
	|	Организация,
	|	Подразделение,
	|	Номенклатура,
	|	Характеристика
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Организация"				, ПараметрыПечати.Организация);
	Запрос.УстановитьПараметр("ОрганизацияЗаполнено"	, ПараметрыПечати.Свойство("Организация") и ЗначениеЗаполнено(ПараметрыПечати.Организация));
	Запрос.УстановитьПараметр("Подразделение"			, ПараметрыПечати.Подразделение);
	Запрос.УстановитьПараметр("ПодразделениеЗаполнено"	, ПараметрыПечати.Свойство("Подразделение") и ЗначениеЗаполнено(ПараметрыПечати.Подразделение));
	Запрос.УстановитьПараметр("НачалоПериода"			, НачалоМесяца(ПараметрыПечати.Период));  
	Запрос.УстановитьПараметр("ОкончаниеПериода"		, КонецМесяца(ПараметрыПечати.Период)); 
	Запрос.УстановитьПараметр("ОкончаниеПериодаГраница"	, Новый Граница(КонецМесяца(ПараметрыПечати.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("БезОтбораПоПериоду"		, Ложь);   
	Запрос.УстановитьПараметр("ПоПредприятию"			, Ложь);  
	Запрос.УстановитьПараметр("ДанныеПоСебестоимости"	, 4);
	Результат 											= Запрос.Выполнить();
	ВыборкаПоОрганизации 								= Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктИнвентаризацииМатериаловИПолуфабрикатов";
	
  	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы" + ?(ВыводитьКоды, "_Код", ""));
	ОбластьМакета = Макет.ПолучитьОбласть("Строка" + ?(ВыводитьКоды, "_Код", ""));
	ОбластьМакетаДокумент = Макет.ПолучитьОбласть("Строка" + ?(ВыводитьКоды, "_Код_Документ", "_Документ"));       // fix Suetin 20.12.2019 16:57:21
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("Подвал");
	
	Если ВыводитьКоды Тогда
		ОбластьШапкаТаблицы.Параметры.ИмяКолонкиКодов = КолонкаКодов;
	КонецЕсли; 
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоОрганизации.Следующий() Цикл
		ВыборкаПоПодразделению 								= ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоПодразделению.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ПараметрыЗаголовка = Новый Структура("ОрганизацияПредставление,ПодразделениеПредставление");
			ЗаполнитьЗначенияСвойств(ПараметрыЗаголовка, ВыборкаПоПодразделению);
			ПараметрыЗаголовка.Вставить("ДатаДокумента", Формат(КонецМесяца(ПараметрыПечати.Период), "ДЛФ=D"));
			
			ОбластьЗаголовок.Параметры.Заполнить(ПараметрыЗаголовка);
			
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			СсылкаОбластьПечати = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Акт инвентаризации в подразделении %1';
											|en = 'Stocktaking report in department %1'"),
										ВыборкаПоПодразделению.ПодразделениеПредставление);
									
			НомерСтраницы = 1;
			НомерСтроки = 0;
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			ДанныеПечати = ВыборкаПоПодразделению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			Пока ДанныеПечати.Следующий() Цикл
				ДанныеПечати1 = ДанныеПечати.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Характеристика");
				Пока ДанныеПечати1.Следующий() Цикл
					
					НомерСтроки = НомерСтроки + 1;
					
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати1);
					// Используем структуру для заполнения параметров, т.к. макет может изменяться пользователем.
					ДополнительныеПараметрыОбластьМакета = Новый Структура;
					ДополнительныеПараметрыОбластьМакета.Вставить("НомерСтроки", НомерСтроки);
					Если ВыводитьКоды Тогда
						ДополнительныеПараметрыОбластьМакета.Вставить("Артикул", ДанныеПечати1["Номенклатура" + КолонкаКодов]);
					КонецЕсли;
					
					НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
												ДанныеПечати1.НоменклатураПредставление, 
												ДанныеПечати1.ХарактеристикаПредставление);
													
					ДополнительныеПараметрыОбластьМакета.Вставить("НоменклатураПредставление", НоменклатураПредставление);
					ОбластьМакета.Параметры.Заполнить(ДополнительныеПараметрыОбластьМакета);
					
					Если НомерСтроки = 1 Тогда
						
						ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
						
					КонецЕсли;
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					ДанныеПечати2 = ДанныеПечати1.Выбрать();
					Пока ДанныеПечати2.Следующий() Цикл
						Если Не ЗначениеЗаполнено(ДанныеПечати2.Документ) Тогда Продолжить; КонецЕсли;
						
						Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
							
							НомерСтраницы = НомерСтраницы + 1;
							ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							
							ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
							
							Для каждого ЭлементОбластьМакета Из МассивВыводимыхОбластей Цикл
								ТабличныйДокумент.Вывести(ЭлементОбластьМакета);
							КонецЦикла;
					        МассивВыводимыхОбластей.Очистить();
							
						КонецЕсли;
						ОбластьМакетаДокумент = Макет.ПолучитьОбласть("Строка" + ?(ВыводитьКоды, "_Код_Документ", "_Документ"));       // fix Suetin 20.12.2019 16:57:21
						ОбластьМакетаДокумент.Параметры.Заполнить(ДанныеПечати2);
						МассивВыводимыхОбластей.Добавить(ОбластьМакетаДокумент);
					КонецЦикла; 
					
					Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						
						ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
						
					КонецЕсли;
					
					Для каждого ЭлементОбластьМакета Из МассивВыводимыхОбластей Цикл
						ТабличныйДокумент.Вывести(ЭлементОбластьМакета);
					КонецЦикла; 
				КонецЦикла;     
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
			
			ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
			ТабличныйДокумент.Вывести(ОбластьПодписи);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, СсылкаОбластьПечати);
		
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
