
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
&Вместо("ЗаполнитьПоЗаказуКлиента")
Процедура ВИЛС_ЗаполнитьПоЗаказуКлиента(ЗаказКлиента)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗаказКлиента.Статус             КАК СтатусДокумента,
		|	ЗаказКлиента.Приоритет          КАК Приоритет,
		|	ЗаказКлиента.Проведен           КАК Проведен,
		|	ЗаказКлиента.Склад              КАК СкладДокумента,
		|	ЗаказКлиента.Организация        КАК Организация,
		|	ЗаказКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВЫБОР 
		|		КОГДА ЗаказКлиента.НаправлениеДеятельности.УчетЗатрат 
		|			ТОГДА ЗаказКлиента.НаправлениеДеятельности
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|	КОНЕЦ КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка = &ЗаказКлиента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВЫБОР
		|		КОГДА Товары.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА Товары.Ссылка.ЖелаемаяДатаОтгрузки
		|		ИНАЧЕ Товары.ДатаОтгрузки
		|	КОНЕЦ) КАК Дата
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &ЗаказКлиента
		|	И НЕ Товары.Отменено");
	
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
	
	Результат = Запрос.ВыполнитьПакет();
	Реквизиты = Результат[0].Выбрать();
	Реквизиты.Следующий();
	
	ВыборкаДатаПотребности = Результат[1].Выбрать();
	ВыборкаДатаПотребности.Следующий();
	
	Документы.ЗаказКлиента.ПроверитьВозможностьВводаНаОсновании(
		ЗаказКлиента,
		Реквизиты.СтатусДокумента,
		НЕ Реквизиты.Проведен);
	
	// Заполнение шапки
	Организация             = Реквизиты.Организация;
	ДокументОснование       = ЗаказКлиента;
	ЗаказПодДеятельность    = Реквизиты.НалогообложениеНДС;
	Приоритет               = Реквизиты.Приоритет;
	НаправлениеДеятельности = Реквизиты.НаправлениеДеятельности;
	ДатаПотребности         = ВыборкаДатаПотребности.Дата;
	
	// Заполнение табличной части
	ПараметрыТаблицыТовары = ОбеспечениеСервер.ПараметрыТаблицыОстатковПоЗаказу();
	ПараметрыТаблицыТовары.ПолучатьУслуги = Ложь;
	ТаблицаТоваров = ОбеспечениеСервер.ТаблицаОстатковКЗаказу(ЗаказКлиента, ПараметрыТаблицыТовары);
	
	//begin fix Клещ А.Н. 27.03.2019  
	ДополнитьТЧНазначениями(ТаблицаТоваров);
	//end fix Клещ А.Н. 27.03.2019
	
	
	Продукция.Загрузить(ТаблицаТоваров);
	
	ЗаполнитьДанныеСпецификацииВСтроках();
	
	ДоходыИРасходыСервер.ИнициализироватьПустоеЗначениеСтатьиВТЧ(Продукция, "СтатьяРасходов");
	
КонецПроцедуры	

Процедура ДополнитьТЧНазначениями(ТЧ)
	
	Если не ТЧ.Количество() 
		и (не ЗначениеЗаполнено(ДокументОснование) и не ТипЗнч(ДокументОснование) = тип("ДокументСсылка.ЗаказКлиента")) Тогда
		Возврат;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Назначения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Назначения КАК Назначения
	|ГДЕ
	|	НЕ Назначения.ПометкаУдаления
	|    и Назначения.Заказ = &Заказ" ;
	Запрос.УстановитьПараметр("Заказ",ДокументОснование);
	
	МассивНазначений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Если МассивНазначений.Количество() Тогда
		ТекНазначение = МассивНазначений[0];
		Для Каждого СтрокаТЧ ИЗ ТЧ Цикл
			
			СтрокаТЧ.Назначение = ТекНазначение;
			
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

#КонецЕсли
