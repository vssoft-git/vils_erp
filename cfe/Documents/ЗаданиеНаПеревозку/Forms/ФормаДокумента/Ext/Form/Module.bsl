
//&НаСервере
//&Вместо("НастроитьПоТипуИсполнителя")
//Процедура ВИЛС_НастроитьПоТипуИсполнителя()
//	
//	ВыполняетПеревозчик = Объект.ЗаданиеВыполняет = Перечисления.ТипыИсполнителейЗаданийНаПеревозку.Перевозчик;
//	
//	Элементы.Перевозчик.Видимость       = ВыполняетПеревозчик;
//	//Элементы.Водитель.Видимость         = Не ВыполняетПеревозчик;     // fix Suetin 02.08.2019 17:05:35
//	Элементы.КурьерЭкспедитор.Видимость = Не ВыполняетПеревозчик;
//	Элементы.РеквизитыТТН.Видимость     = //ВыполняетПеревозчик         // begin fix Suetin 02.08.2019 17:05:45
//											//И Объект.Операция = Перечисления.ВидыДоставки.СоСклада
//											//И                         // end fix Suetin 02.08.2019 17:05:49
//											ПолучитьФункциональнуюОпцию("ИспользоватьТТН");
//	
//	Если ВыполняетПеревозчик
//		И ЗначениеЗаполнено(Объект.Перевозчик) Тогда
//		
//		Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
//			ЗаполнитьКонтрагентаИБанковскийСчетПеревозчика();
//		КонецЕсли;
//		
//	Иначе
//		Объект.Перевозчик = Справочники.Партнеры.ПустаяСсылка();
//		Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
//		Объект.БанковскийСчетПеревозчика = Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();
//		
//		Перевозчик = Объект.Перевозчик;
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаСервере
//&Вместо("ВодительПриИзмененииНаСервере")
//Процедура ВИЛС_ВодительПриИзмененииНаСервере()
//	
//	ПараметрыТТН = Новый Структура;
//	ПараметрыТТН.Вставить("ВодительФИО");
//	ПараметрыТТН.Вставить("УдостоверениеСерия");
//	ПараметрыТТН.Вставить("УдостоверениеНомер");
//	
//	Если ЗначениеЗаполнено(Объект.ТранспортноеСредство) Тогда
//		Запрос = Новый Запрос;
//		Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ФизическиеЛица.Наименование КАК ВодительФИО,
//		|	ДокументыФизическихЛиц.Серия КАК УдостоверениеСерия,
//		|	ДокументыФизическихЛиц.Номер КАК УдостоверениеНомер
//		|ИЗ
//		|	Справочник.Контрагенты КАК ФизическиеЛица           // fix Suetin 02.08.2019 17:09:20   ФизическиеЛица
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛиц
//		|		ПО ФизическиеЛица.Ссылка = ДокументыФизическихЛиц.Физлицо
//		|			И (ДокументыФизическихЛиц.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение))
//		|ГДЕ
//		|	ФизическиеЛица.Ссылка = &Ссылка";
//		
//		Запрос.УстановитьПараметр("Ссылка", Объект.Водитель);
//		Выборка = Запрос.Выполнить().Выбрать();
//		Если Выборка.Следующий() Тогда
//			ЗаполнитьЗначенияСвойств(ПараметрыТТН, Выборка);
//		КонецЕсли;			
//	КонецЕсли;
//	
//	ЗаполнитьЗначенияСвойств(Объект, ПараметрыТТН);

//КонецПроцедуры
