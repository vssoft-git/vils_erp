
&ИзменениеИКонтроль("УстановитьПараметрыЗапросаКоэффициентыВалют")
Процедура ВИЛС_УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)

	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР") Тогда
		Возврат;
	КонецЕсли;

#Удаление
	КоэффициентПересчетаВВалютуУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
	Запрос.Параметры.Валюта, 
	Константы.ВалютаУправленческогоУчета.Получить(), 
	Запрос.Параметры.Период);

#КонецУдаления
#Вставка
	КоэффициентПересчетаВВалютуУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
	Запрос.Параметры.Валюта, 
	Константы.ВалютаУправленческогоУчета.Получить(), 
	Запрос.Параметры.Период_ВИЛС);

#КонецВставки
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", КоэффициентПересчетаВВалютуУпр);

КонецПроцедуры

&ИзменениеИКонтроль("ИнициализироватьДанныеДокумента")
Процедура ВИЛС_ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры)

	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений

	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса

	// Текст запроса, формирующего таблицы движений
	ТекстыЗапроса = Новый СписокЗначений;

	ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры);
#Вставка
	Если ДокументСсылка.ВИЛС_КурсНаДатуОтгрузки 
		и ЗначениеЗаполнено(ДокументСсылка.ВИЛС_КурсНаДату) Тогда
		Запрос.Параметры.Вставить("Период_ВИЛС", ДокументСсылка.ВИЛС_КурсНаДату);
	Иначе
		Запрос.Параметры.Вставить("Период_ВИЛС", Запрос.Параметры.Период);
	КонецЕсли; 
#КонецВставки
	ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);

	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);

	// Выполение запроса и выгрузка полученных таблиц для формирования движений
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);

КонецПроцедуры

//&ИзменениеИКонтроль("НастройкиПолейФормы")
//Функция ВИЛС_НастройкиПолейФормы()
//	
//	Финансы = ФинансоваяОтчетностьСервер;
//	Настройки = ДенежныеСредстваСервер.ИнициализироватьНастройкиПолейФормы();
//	
//	#Область Шапка
//	// ТипНалога
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ТипНалога");
//	Элемент.Поля.Добавить("ЗаполнитьПоПредыдущемуПлатежу");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Отражение в регл. учете
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ОтражениеВРеглУчетеЗаголовок");
//	Элемент.Поля.Добавить("НастроитьОтражениеВРеглУчете");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьРеглУчет", Истина);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ОплатаНДСВБюджетПоОтдельнымОперациям", Ложь);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	//++ НЕ УТ
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("НастроитьОтражениеВРеглУчете");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ПравоДоступаКПлануСчетов", Истина);
//	Элемент.Свойства.Вставить("Доступность");
//	//-- НЕ УТ
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПодобратьСчетаФактуры");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ОплатаНДСВБюджетПоОтдельнымОперациям", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	//++ НЕ УТ
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПодобратьСчетаФактуры");
//	Финансы.НовыйОтбор(Элемент.Условие, "ТипНалога", Перечисления.ТипыНалогов.НДС_НалоговыйАгент);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Подобрать счета-фактуры';
//												|en = 'Select tax invoices'"));
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПодобратьСчетаФактуры");
//	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
//	Финансы.НовыйОтбор(ГруппаНе, "ТипНалога", Перечисления.ТипыНалогов.НДС_НалоговыйАгент);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Подобрать заявления о ввозе';
//												|en = 'Select import applications'"));
//	//-- НЕ УТ
//	
//	// НадписьРеквизитыПлательщика
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("НадписьРеквизитыПлательщика");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ХозяйственнаяОперацияПоЗарплате
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ХозяйственнаяОперацияПоЗарплате");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ФормаОплаты
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ФормаОплаты");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ФормаОплатыОграничена", Ложь);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Банковский счет
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчет");
//	Финансы.НовыйОтбор(Элемент.Условие, "ФормаОплатыЗаявки", Перечисления.ФормыОплаты.Безналичная);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Касса
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("Касса");
//	Финансы.НовыйОтбор(Элемент.Условие, "ФормаОплатыЗаявки", Перечисления.ФормыОплаты.Наличная);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Контрагент
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("Контрагент");
//	Элемент.Поля.Добавить("ГруппаИндексыСПАРКРиски");
//	
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	
//	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
//	
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// БанковскийСчетКонтрагента
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
//	
//	ГруппаИли1 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	
//	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли1,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
//	
//	ОтборДопускаетсяБезналичнаяОплата = Новый ОтборКомпоновкиДанных();
//	ГруппаИли = Финансы.НовыйОтбор(ОтборДопускаетсяБезналичнаяОплата,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ФормаОплатыЗаявки", Перечисления.ФормыОплаты.Безналичная);
//	ГруппаНе = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
//	Финансы.НовыйОтбор(ГруппаНе, "Дополнительно.ФормаОплаты", "Наличная");
//	Финансы.СкопироватьОтбор(ОтборДопускаетсяБезналичнаяОплата, Элемент.Условие);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Лицевой счет';
//												|en = 'Personal account'"));
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
//	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
//	Финансы.НовыйОтбор(ГруппаНе, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Счет получателя';
//												|en = 'Payee account'"));
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
//	Элемент.Свойства.Вставить("Доступность", Ложь);
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
//	Элемент.Свойства.Вставить("Доступность", Ложь);
//	
//	// Подотчетное лицо
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПодотчетноеЛицо");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("Сотрудник");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПодотчетноеЛицо");
//	Финансы.НовыйОтбор(Элемент.Условие, "СписокФизЛиц", Истина);
//	Элемент.Свойства.Вставить("Доступность", Ложь);
//	
//	// Список физ. лиц
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("СписокФизЛицВключено");
//	Элемент.Поля.Добавить("СписокФизЛицОтключено");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ОрганизацияПолучатель
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ОрганизацияПолучатель");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// БанковскийСчетПолучатель
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Финансы.НовыйОтбор(Элемент.Условие, "ФормаОплатыЗаявки", Перечисления.ФормыОплаты.Безналичная);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Счет конвертации';
//												|en = 'Conversion account'"));
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
//	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
//	Финансы.НовыйОтбор(ГруппаНе, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Счет получателя';
//												|en = 'Payee account'"));
//	
//	// КассаПолучатель
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("КассаПолучатель");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Финансы.НовыйОтбор(Элемент.Условие, "ФормаОплатыЗаявки", Перечисления.ФормыОплаты.Наличная);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("КассаПолучатель");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Касса конвертации';
//												|en = 'Conversion cash account '"));
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("КассаПолучатель");
//	ГруппаНе = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаНе.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
//	Финансы.НовыйОтбор(ГруппаНе, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'Касса получателя';
//												|en = 'Receiving cash account'"));
//	
//	// Статья ДДС
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("СтатьяДвиженияДенежныхСредств");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	
//	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
//	
//	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
//	
//	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ3, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(ГруппаИ3, "СписокФизЛиц", Истина);
//	
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ПланированиеСуммы
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПланированиеСуммы");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	Элемент.Свойства.Вставить("Видимость");
//	#КонецОбласти
//	
//	#Область Реквизиты
//	// Кто решил
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("КтоРешил");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована);
//	Финансы.НовыйОтбор(ГруппаИли, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Только просмотр
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("Номер");
//	Элемент.Поля.Добавить("Дата");
//	Элемент.Поля.Добавить("ПланированиеСуммы");
//	Элемент.Поля.Добавить("СуммаДокумента");
//	Элемент.Поля.Добавить("Валюта");
//	Элемент.Поля.Добавить("ФормаОплаты");
//	Элемент.Поля.Добавить("Организация");
//	Элемент.Поля.Добавить("Подразделение");
//	Элемент.Поля.Добавить("Заявитель");
//	Элемент.Поля.Добавить("ХозяйственнаяОперация");
//	Элемент.Поля.Добавить("ТипНалога");
//	Элемент.Поля.Добавить("НДФЛПоВедомостям");
//	Элемент.Поля.Добавить("ЛицевыеСчетаСотрудников");
//	Элемент.Поля.Добавить("ХозяйственнаяОперацияПоЗарплате");
//	Элемент.Поля.Добавить("ЖелательнаяДатаПлатежа");
//	Элемент.Поля.Добавить("Контрагент");
//	Элемент.Поля.Добавить("ОрганизацияПолучатель");
//	Элемент.Поля.Добавить("ПодотчетноеЛицо");
//	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
//	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
//	Элемент.Поля.Добавить("КассаПолучатель");
//	Элемент.Поля.Добавить("СтатьяДвиженияДенежныхСредств");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиения");
//	Элемент.Поля.Добавить("ПеречислениеВБюджет");
//	Элемент.Поля.Добавить("ПлатежиПо275ФЗ");
//	Элемент.Поля.Добавить("ПлатежиПо275ФЗВыплатаЗарплаты");
//	Элемент.Поля.Добавить("НазначениеПлатежа");
//	Элемент.Поля.Добавить("ИдентификаторПлатежа");
//	Элемент.Поля.Добавить("ВалютаКонвертации");
//	Элемент.Поля.Добавить("КурсКонвертации");
//	Элемент.Поля.Добавить("СуммаКонвертации");
//	Элемент.Поля.Добавить("СверхЛимита");
//	Элемент.Поля.Добавить("НомерВедомостиНаВыплатуЗарплаты");
//	Элемент.Поля.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
//	Элемент.Поля.Добавить("ТипПлатежаФЗ275");
//	Элемент.Поля.Добавить("ПредметОплаты");
//	Элемент.Поля.Добавить("ВариантОплаты");
//	Элемент.Поля.Добавить("ПунктКонтрактаПредмета");
//	Элемент.Поля.Добавить("ПунктКонтрактаОплаты");
//	Элемент.Поля.Добавить("БанковскийСчет");
//	Элемент.Поля.Добавить("Касса");
//	Элемент.Поля.Добавить("ПодтверждающиеДокументы");
//	Элемент.Поля.Добавить("ПериодАвансовогоОтчета");
//	Элемент.Поля.Добавить("СписокФизЛицВключено");
//	Элемент.Поля.Добавить("СписокФизЛицОтключено");
//	Элемент.Поля.Добавить("КодВидаДохода");
//	
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована);
//	Финансы.НовыйОтбор(ГруппаИли, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате);
//	Финансы.НовыйОтбор(Элемент.Условие, "Проведен", Истина);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.Модифицированность", Ложь);
//	Элемент.Свойства.Вставить("ТолькоПросмотр");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ЗаполнитьПоПредыдущемуПлатежу");
//	Элемент.Поля.Добавить("НадписьРеквизитыПлатежаВБюджет");
//	Элемент.Поля.Добавить("РасшифровкаПлатежаПодборПоОстаткам");
//	Элемент.Поля.Добавить("РасшифровкаПлатежаЗаполнитьРасшифровкуПлатежа");
//	Элемент.Поля.Добавить("ЗаполнитьНазначениеПлатежа");
//	Элемент.Поля.Добавить("ЗаполнитьВедомостиПоОстаткам");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПредставлениеОтраженияВРеглУчете");
//	Элемент.Поля.Добавить("РасшифровкаПлатежаСчетРеглУчетаАктивовПассивов");
//	Элемент.Поля.Добавить("ЗаполнитьПодтверждающиеДокументы");
//	Элемент.Поля.Добавить("НадписьРеквизитыПлательщика");
//	//++ НЕ УТ
//	Элемент.Поля.Добавить("НастроитьОтражениеВРеглУчете");
//	Элемент.Поля.Добавить("ПодобратьСчетаФактуры");
//	//-- НЕ УТ
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована);
//	Финансы.НовыйОтбор(ГруппаИли, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате);
//	Финансы.НовыйОтбор(Элемент.Условие, "Проведен", Истина);
//	Элемент.Свойства.Вставить("Доступность", Ложь);
//	
//	// РаспределениеПоСчетам
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РаспределениеПоСчетам");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	
//	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	ГруппаИли1 = Финансы.НовыйОтбор(ГруппаИ1,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли1, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована);
//	Финансы.НовыйОтбор(ГруппаИли1, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате);
//	Финансы.НовыйОтбор(ГруппаИ1, "Проведен", Истина);
//	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ПравоУтверждения", Ложь);
//	
//	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ПравоСогласования", Ложь);
//	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ПравоУтверждения", Ложь);
//	Элемент.Свойства.Вставить("ТолькоПросмотр");
//	
//	// Номер и дата ведомости на выплату зарплаты
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("НомерВедомостиНаВыплатуЗарплаты");
//	Элемент.Поля.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("НомерВедомостиНаВыплатуЗарплаты");
//	Элемент.Поля.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьСинхронизациюДанных", Ложь);
//	Элемент.Свойства.Вставить("АвтоОтметкаНезаполненного", Ложь);
//	Элемент.Свойства.Вставить("ОтметкаНезаполненного", Ложь);
//	
//	// Лицевые счета
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ЛицевыеСчетаСотрудников");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	
//	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
//	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
//	
//	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(ГруппаИ2, "СписокФизЛиц", Истина);
//	
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// НДФЛПоВедомостям
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("НДФЛПоВедомостям");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(Элемент.Условие, "ТипНалога", Перечисления.ТипыНалогов.НДФЛ);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// НадписьФактическаяОплата
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("НадписьФактическаяОплата");
//	Финансы.НовыйОтбор(Элемент.Условие, "Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Конвертация
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ВалютаКонвертации");
//	Элемент.Поля.Добавить("ВариантКурсаБанк");
//	Элемент.Поля.Добавить("ВариантКурсаЦБ");
//	Элемент.Поля.Добавить("КурсКонвертации");
//	Элемент.Поля.Добавить("СуммаКонвертации");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("БанковскийСчетСписанияКомиссии");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
//	Финансы.НовыйОтбор(Элемент.Условие, "УсловиеСделкиКонвертации", 1);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ПериодАвансовогоОтчета, ДатаАвансовогоОтчета
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПериодАвансовогоОтчета");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ДатаАвансовогоОтчета");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ПериодАвансовогоОтчетаДата", Ложь);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ПеречислениеВБюджет
//	ОтборОперацийПеречисленияВБюджет = Новый ОтборКомпоновкиДанных();
//	ГруппаИли = Финансы.НовыйОтбор(ОтборОперацийПеречисленияВБюджет,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПеречислениеВБюджет");
//	Элемент.Поля.Добавить("Декорация1");
//	Финансы.СкопироватьОтбор(ОтборОперацийПеречисленияВБюджет, Элемент.Условие);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("НадписьРеквизитыПлатежаВБюджет");
//	Финансы.СкопироватьОтбор(ОтборОперацийПеречисленияВБюджет, Элемент.Условие);
//	Финансы.НовыйОтбор(Элемент.Условие, "ПеречислениеВБюджет", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// УИП
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ИдентификаторПлатежа");
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'УИП';
//												|en = 'UIP'"));
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ИдентификаторПлатежа");
//	Финансы.СкопироватьОтбор(ОтборОперацийПеречисленияВБюджет, Элемент.Условие);
//	Финансы.НовыйОтбор(Элемент.Условие, "ПеречислениеВБюджет", Истина);
//	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'УИН';
//												|en = 'Payment ID'"));
//	
//	// Код вида дохода
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("КодВидаДохода");
//	Финансы.НовыйОтбор(Элемент.Условие, "ФормаОплатыБезналичная", Истина);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ДействуетУказание2019_5286У", Истина);
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//#Удаление
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
//#КонецУдаления
//#Вставка
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
//#КонецВставки
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Рублевый платеж
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ИдентификаторПлатежа");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Ложь);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Валютный платеж
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ТипКомиссииЗаПеревод");
//	Элемент.Поля.Добавить("КодыИнструкцийБанку");
//	Элемент.Поля.Добавить("ИнформацияПолучателюПлатежа");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Истина);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
//	Финансы.СкопироватьОтбор(ОтборДопускаетсяБезналичнаяОплата, Элемент.Условие);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ИнформацияДляРегулирующихОрганов");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Истина);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ТребуетсяИнформацияДляРегулирующихОрганов", Истина);
//	Финансы.СкопироватьОтбор(ОтборДопускаетсяБезналичнаяОплата, Элемент.Условие);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Сверх лимита
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("СверхЛимита");
//	Финансы.НовыйОтбор(Элемент.Условие, "СверхЛимита", Истина);
//	Элемент.Свойства.Вставить("ЦветТекстаЗаголовка", ЦветаСтиля.ЦветОсобогоТекста);
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("СверхЛимита");
//	Финансы.НовыйОтбор(Элемент.Условие, "СверхЛимита", Ложь);
//	Элемент.Свойства.Вставить("ЦветТекстаЗаголовка", ЦветаСтиля.ЦветТекстаФормы);
//	
//	// ДокументОснование
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ДокументОснование");
//	Финансы.НовыйОтбор(Элемент.Условие, "ДокументОснование",,, ВидСравненияКомпоновкиДанных.Заполнено);
//	Элемент.Свойства.Вставить("Видимость");
//	#КонецОбласти
//	
//	//++ НЕ УТ
//	#Область ГОЗ
//	// ТипПлатежаФЗ275
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ТипПлатежаФЗ275");
//	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежиПо275ФЗ", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ПодтверждающиеДокументы
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПодтверждающиеДокументы");
//	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежиПо275ФЗ", Истина);
//	ГруппаНе1 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаНе1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
//	Финансы.НовыйОтбор(ГруппаНе1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	ГруппаНе2 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаНе2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
//	Финансы.НовыйОтбор(ГруппаНе2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// 
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПредметОплаты");
//	Элемент.Поля.Добавить("ПунктКонтрактаПредмета");
//	Элемент.Поля.Добавить("ВариантОплаты");
//	Элемент.Поля.Добавить("ПунктКонтрактаОплаты");
//	Финансы.НовыйОтбор(Элемент.Условие, "ПлатежиПо275ФЗ", Истина);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ОплатаПоставщику", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ПлатежиПо275ФЗВыплатаЗарплаты
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ПлатежиПо275ФЗВыплатаЗарплаты");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	#КонецОбласти
//	//-- НЕ УТ
//	
//	#Область РасшифровкаПлатежа
//	// СтраницаРасшифровка
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("СтраницаРасшифровка");
//	
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	
//	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	
//	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	
//	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(ГруппаИ2, "СписокФизЛиц", Ложь);
//	
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Аналитика прочей выдачи
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.Подразделение");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПодразделение");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтатьяРасходов");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияНаправлениеДеятельности");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// СтатьяДвиженияДенежныхСредств
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтатьяДвиженияДенежныхСредств");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	
//	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// СуммаВзаиморасчетов, ВалютаВзаиморасчетов
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВалютаВзаиморасчетов");
//	
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// СуммаНДС, СтавкаНДС
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаНДС");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаНДС");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтавкаНДС");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтавкаНДС");
//	Элемент.Поля.Добавить("ВалютаНДС");
//	
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Заказ
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.Заказ");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияЗаказ");
//	
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Партнер
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.Партнер");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПартнер");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	//++ НЕ УТ
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	//-- НЕ УТ
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.Партнер");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПартнер");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	Элемент.Свойства.Вставить("ТолькоПросмотр");
//	
//	// ДоговорКредитаДепозита
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорКредитаДепозита");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ТипСуммыКредитаДепозита
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипСуммыКредитаДепозита");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ДоговорЗаймаСотруднику
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорЗаймаСотруднику");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	//++ НЕ УТ
//	// ДоговорЛизинга
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорЛизинга");
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипПлатежаПоЛизингу");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
//	Элемент.Свойства.Вставить("Видимость");
//	//-- НЕ УТ
//	
//	// Организация
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.Организация");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОрганизация");
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЕстьФилиалы", Истина);
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// Ведомость
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежа.Ведомость");
//	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВедомость");
//	
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	
//	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	
//	Финансы.НовыйОтбор(ГруппаИ, "ТипНалога", Перечисления.ТипыНалогов.НДФЛ);
//	Финансы.НовыйОтбор(ГруппаИ, "НДФЛПоВедомостям", Истина);
//	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
//	
//	Элемент.Свойства.Вставить("Видимость");
//	
//	// ГиперссылкаРеквизитыОбъектаРасчетов
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ГиперссылкаРеквизитыОбъектаРасчетов");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Элемент.Свойства.Вставить("Видимость");
//	#КонецОбласти
//	
//	#Область Команды
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежаПодборПоОстаткам");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ФормаВыгрузитьФайлДляОбменаСБанком");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперацияПоЗарплате", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("РасшифровкаПлатежаЗаполнитьРасшифровкуПлатежа");
//	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
//	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
//	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
//	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
//	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
//	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ЗаполнитьВедомостиПоОстаткам");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
//	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
//	Элемент.Свойства.Вставить("Видимость");
//	#КонецОбласти
//	
//	Элемент = Настройки.Добавить();
//	Элемент.Поля.Добавить("ЛицевыеСчетаСотрудниковЛицевойСчет");
//	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
//	Финансы.НовыйОтбор(Элемент.Условие, "ФормаОплатыЗаявки", Перечисления.ФормыОплаты.Наличная);
//	Элемент.Свойства.Вставить("Видимость", Ложь);
//	
//	Возврат Настройки;
//	
//КонецФункции
