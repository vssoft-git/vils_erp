// begin fix Suetin 06.02.2019 12:23:44
&НаСервере
Процедура ВИЛС_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//ДобавляемыеРеквизиты = Новый Массив;
	//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗадолженностьВИЛС_Договор", 					Новый ОписаниеТипов("СправочникСсылка.ДоговорыМеждуОрганизациями, СправочникСсылка.ДоговорыКредитовИДепозитов, СправочникСсылка.ДоговорыЛизинга, СправочникСсылка.ДоговорыКонтрагентов"),"Объект.Задолженность","Договор"));
	//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗадолженностьВИЛС_Подтверждено1Месяц", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Объект.Задолженность","Подтверждено (1 мес)"));
	//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗадолженностьВИЛС_НеПодтверждено1Месяц", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Объект.Задолженность","Не подтверждено (1 мес)"));
	//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗадолженностьВИЛС_ИстекСрокДавности1Месяц", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Объект.Задолженность","Истек срок давности (1 мес)"));
	//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗадолженностьВИЛС_Подтверждено2Месяц", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Объект.Задолженность","Подтверждено (2 мес)"));
	//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗадолженностьВИЛС_НеПодтверждено2Месяц", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Объект.Задолженность","Не подтверждено (2 мес)"));
	//ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗадолженностьВИЛС_ИстекСрокДавности2Месяц", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Объект.Задолженность","Истек срок давности (2 мес)"));
	//ИзменитьРеквизиты(ДобавляемыеРеквизиты); 
	//
	ДобавляемыйЭлемент = Элементы.Вставить("ЗадолженностьВИЛС_Договор", Тип("ПолеФормы"), Элементы.Задолженность, Элементы.Задолженность.ПодчиненныеЭлементы.ЗадолженностьСчет);
	ДобавляемыйЭлемент.Вид 				= ВидПоляФормы.ПолеВвода; 
   	ДобавляемыйЭлемент.ПутьКДанным 		= "Объект.Задолженность.ВИЛС_Договор";
	ДобавляемыйЭлемент = Элементы.Вставить("ЗадолженностьВИЛС_Подтверждено1Месяц", Тип("ПолеФормы"), Элементы.Задолженность);
	ДобавляемыйЭлемент.Вид 				= ВидПоляФормы.ПолеВвода; 
   	ДобавляемыйЭлемент.ПутьКДанным 		= "Объект.Задолженность.ВИЛС_Подтверждено1Месяц";
	ДобавляемыйЭлемент = Элементы.Вставить("ЗадолженностьВИЛС_НеПодтверждено1Месяц", Тип("ПолеФормы"), Элементы.Задолженность);
	ДобавляемыйЭлемент.Вид 				= ВидПоляФормы.ПолеВвода; 
   	ДобавляемыйЭлемент.ПутьКДанным 		= "Объект.Задолженность.ВИЛС_НеПодтверждено1Месяц";
	ДобавляемыйЭлемент = Элементы.Вставить("ЗадолженностьВИЛС_ИстекСрокДавности1Месяц", Тип("ПолеФормы"), Элементы.Задолженность);
	ДобавляемыйЭлемент.Вид 				= ВидПоляФормы.ПолеВвода; 
   	ДобавляемыйЭлемент.ПутьКДанным 		= "Объект.Задолженность.ВИЛС_ИстекСрокДавности1Месяц";
	ДобавляемыйЭлемент = Элементы.Вставить("ЗадолженностьВИЛС_Подтверждено2Месяц", Тип("ПолеФормы"), Элементы.Задолженность);
	ДобавляемыйЭлемент.Вид 				= ВидПоляФормы.ПолеВвода; 
   	ДобавляемыйЭлемент.ПутьКДанным 		= "Объект.Задолженность.ВИЛС_Подтверждено2Месяц";
	ДобавляемыйЭлемент = Элементы.Вставить("ЗадолженностьВИЛС_НеПодтверждено2Месяц", Тип("ПолеФормы"), Элементы.Задолженность);
	ДобавляемыйЭлемент.Вид 				= ВидПоляФормы.ПолеВвода; 
   	ДобавляемыйЭлемент.ПутьКДанным 		= "Объект.Задолженность.ВИЛС_НеПодтверждено2Месяц";
	ДобавляемыйЭлемент = Элементы.Вставить("ЗадолженностьВИЛС_ИстекСрокДавности2Месяц", Тип("ПолеФормы"), Элементы.Задолженность);
	ДобавляемыйЭлемент.Вид 				= ВидПоляФормы.ПолеВвода; 
   	ДобавляемыйЭлемент.ПутьКДанным 		= "Объект.Задолженность.ВИЛС_ИстекСрокДавности2Месяц";
КонецПроцедуры

&НаСервере
&Вместо("ЗаполнитьДолгиНаСервере")
Функция ВИЛС_ЗаполнитьДолгиНаСервере()
	
	ВыполняемыйМетод = "Документы.ИнвентаризацияРасчетов.ЗаполнитьЗадолженностьПоОстаткам";
	
	ПараметрыЗаполнения = Документы.ИнвентаризацияРасчетов.ПараметрыЗаданияЗаполненияВзаиморасчетов(Объект);
	ПараметрыЗаполнения.СчетаРасчетов = СписокВыбранныхСчетов.ВыгрузитьЗначения();   // fix Suetin 17.01.2019 15:51:38	ВИЛС_Договор  и др
	КолонкиДляВыгрузки = "СчетРасчетов, ДебиторКредитор, ВИЛС_Договор, Подтверждено, НеПодтверждено, ИстекСрокДавности, ВидЗадолженности,
	| ВсегоДебиторская, ВсегоКредиторская,
	| ВИЛС_Подтверждено1Месяц, ВИЛС_НеПодтверждено1Месяц, ВИЛС_ИстекСрокДавности1Месяц,
	| ВИЛС_Подтверждено2Месяц, ВИЛС_НеПодтверждено2Месяц, ВИЛС_ИстекСрокДавности2Месяц";
	
	ПараметрыЗаполнения.ТаблицаЗадолженности = Объект.Задолженность.Выгрузить(, КолонкиДляВыгрузки);
	
	ПараметрыФоновогоЗадания = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыФоновогоЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Заполнить данными расчетов с дебиторами / кредиторами'");
	ПараметрыФоновогоЗадания.КлючФоновогоЗадания = "ЗаполнениеВзаиморасчетовДляИнвентаризации";
	ПараметрыФоновогоЗадания.ОжидатьЗавершение = 1;
	
	РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗаполнения, ПараметрыФоновогоЗадания);
			
	Если РезультатФоновогоЗадания.Статус = "Выполнено" Тогда
		ПрочитатьРезультатЗаполнения(РезультатФоновогоЗадания.АдресРезультата);
		РезультатФоновогоЗадания.Вставить("РезультатОбработан", Истина);
	Иначе
		РезультатФоновогоЗадания.Вставить("РезультатОбработан", Ложь);
	КонецЕсли;
	
	// Передадим данные на клиент.
	Возврат РезультатФоновогоЗадания;

КонецФункции

&НаКлиенте
Процедура ВИЛС_ДатаОкончанияИнвентаризацииПриИзмененииПосле(Элемент)
	Если Не Объект.ДатаОкончанияИнвентаризации = Дата(1,1,1) Тогда
		Объект.Дата = КонецДня(Объект.ДатаОкончанияИнвентаризации);
	КонецЕсли;	
КонецПроцедуры
// end fix Suetin 06.02.2019 12:23:57