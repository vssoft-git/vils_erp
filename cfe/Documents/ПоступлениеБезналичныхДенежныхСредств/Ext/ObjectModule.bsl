#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

//&ИзменениеИКонтроль("ЗаполнитьПоЗаказуКлиента")
&Вместо("ЗаполнитьПоЗаказуКлиента")
Процедура ВИЛС_ЗаполнитьПоЗаказуКлиента(Знач ДокументОснование, ДанныеЗаполнения, СуммаКОплате)
//#Удаление	
//	// Заполним данные шапки документа.
//	ТекстЗапроса = "
//	|ВЫБРАТЬ
//	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) ТОГДА
//	|		ДанныеДокумента.БанковскийСчет.Владелец
//	|	ИНАЧЕ
//	|		ДанныеДокумента.Организация
//	|	КОНЕЦ КАК Организация,
//	|	ДанныеДокумента.Партнер КАК Партнер,
//	|	ДанныеДокумента.Контрагент КАК Контрагент,
//	|	ДанныеДокумента.Договор КАК Договор,
//	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента) КАК ХозяйственнаяОперация,
//	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
//	|
//	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) ТОГДА
//	|		ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств
//	|	ИНАЧЕ
//	|		ДанныеДокумента.Валюта
//	|	КОНЕЦ КАК Валюта
//	|ИЗ
//	|	Документ.ЗаказКлиента КАК ДанныеДокумента
//	|ГДЕ
//	|	ДанныеДокумента.Ссылка = &Ссылка
//	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
//	|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
//	|";
//#КонецУдаления	
//#Вставка
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.БанковскийСчет.Владелец
	|	ИНАЧЕ
	|		ДанныеДокумента.Организация
	|	КОНЕЦ КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|	ИНАЧЕ
	|		ДанныеДокумента.Валюта
	|	КОНЕЦ КАК Валюта
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	//|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)       // fix Suetin 12.11.2019 15:28:23
	|";
//#КонецВставки
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Не требуется вводить поступление безналичных денежных средств на основании документа %1';
		|en = 'It is not required to enter inpayment based on document %1'"),
		ДокументОснование);
		ВызватьИсключение Текст;
	Иначе
		Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
			ДанныеЗаполнения.Вставить(Колонка.Имя);
		КонецЦикла;

		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
		ДенежныеСредстваСервер.ЗаполнитьРеквизитыДокументаПоФормеОплаты(Перечисления.ФормыОплаты.Безналичная, ДанныеЗаполнения);
		БанковскийСчетКонтрагента = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(
		ДанныеЗаполнения.Контрагент,
		ДанныеЗаполнения.Валюта);

		ПараметрыЗаполненияРасшифровки = ВзаиморасчетыСервер.ПараметрыЗаполненияРасшифровкиПлатежаПоЗаказу();
		ПараметрыЗаполненияРасшифровки.ЗаказКлиента     = ДокументОснование;
		ПараметрыЗаполненияРасшифровки.Договор          = Выборка.Договор;
		ПараметрыЗаполненияРасшифровки.ВалютаДокумента  = ДанныеЗаполнения.Валюта;
		ПараметрыЗаполненияРасшифровки.Партнер          = Выборка.Партнер;
		ПараметрыЗаполненияРасшифровки.ОснованиеПлатежа = ДокументОснование;

		ВзаиморасчетыСервер.ЗаполнитьРасшифровкуПлатежаПоЗаказуКлиента(
		ПараметрыЗаполненияРасшифровки,
		РасшифровкаПлатежа,
		СуммаКОплате);
	КонецЕсли;

	// Заполнение суммы шапки документа
	СуммаДокумента = РасшифровкаПлатежа.Итог("Сумма");

КонецПроцедуры

&ИзменениеИКонтроль("УстановитьСтатус")
Функция ВИЛС_УстановитьСтатус(НовыйСтатус, ДополнительныеПараметры)

	Если ДополнительныеПараметры <> Неопределено Тогда
		Если ДополнительныеПараметры.Свойство("ДатаПроведенияБанком", ДатаПроведенияБанком) Тогда
			ПроведеноБанком = Истина;
#Вставка
			Если ЗначениеЗаполнено(ДатаПроведенияБанком) Тогда    // begin fix Suetin 21.10.2020 9:34:39  Ticket#8219094
				Дата = ДатаПроведенияБанком + (ТекущаяДатаСеанса() - НачалоДня(ТекущаяДатаСеанса()));
			КонецЕсли;                                            // end fix Suetin 21.10.2020 9:34:45
#КонецВставки
		КонецЕсли;
	КонецЕсли;

	Возврат ПроверитьЗаполнение();

КонецФункции

&ИзменениеИКонтроль("ИнициализироватьДокумент")
Процедура ВИЛС_ИнициализироватьДокумент(ДанныеЗаполнения)

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура")
		Или Не ДанныеЗаполнения.Свойство("БанковскийСчет")
		Или Не ЗначениеЗаполнено(ДанныеЗаполнения.БанковскийСчет) Тогда

		БанковскийСчет = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущийБанковскийСчет", "");
		Если Не ЗначениеЗаполнено(БанковскийСчет) Тогда
			БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(
			?(ЗначениеЗаполнено(Организация), Организация, Неопределено),
			?(ЗначениеЗаполнено(Валюта), Валюта, Неопределено));
		КонецЕсли;
		Если ЗначениеЗаполнено(БанковскийСчет) Тогда
			СтруктураРеквизитов = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет);
			Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
				И ДанныеЗаполнения.Свойство("Организация")
				И ЗначениеЗаполнено(ДанныеЗаполнения.Организация)
				И ДанныеЗаполнения.Организация <> СтруктураРеквизитов.Организация Тогда
				БанковскийСчет = Неопределено;
			Иначе
				Организация = СтруктураРеквизитов.Организация;
				Валюта = СтруктураРеквизитов.Валюта;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("СуммаДокумента") Тогда
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или Не ДанныеЗаполнения.Свойство("Организация") Тогда
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или Не ДанныеЗаполнения.Свойство("Валюта") Тогда
		Валюта = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Валюта);
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или Не ДанныеЗаполнения.Свойство("ПроведеноБанком") Тогда
		ПроведеноБанком = ЗначениеЗаполнено(ТипПлатежногоДокумента) И
		Не (ТипПлатежногоДокумента = Перечисления.ТипыПлатежныхДокументов.ПлатежноеТребование
		Или ТипПлатежногоДокумента = Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение);
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Если ПроведеноБанком Тогда
#Удаление
			ДатаПроведенияБанком = ТекущаяДатаСеанса();
#КонецУдаления
#Вставка
			Дата = ТекущаяДатаСеанса();     // begin fix Suetin 21.10.2020 9:34:39  Ticket#8219094
			ДатаПроведенияБанком = Дата;  	// end fix Suetin 21.10.2020 9:34:45
#КонецВставки
		КонецЕсли;
	ИначеЕсли Не ДанныеЗаполнения.Свойство("ДатаПроведенияБанком")
		И ДанныеЗаполнения.Свойство("ПроведеноБанком") И ДанныеЗаполнения.ПроведеноБанком Тогда
#Удаление
		ДатаПроведенияБанком = ТекущаяДатаСеанса();
#КонецУдаления
#Вставка
		Дата = ТекущаяДатаСеанса();         // begin fix Suetin 21.10.2020 9:34:39  Ticket#8219094
		ДатаПроведенияБанком = Дата;  		// end fix Suetin 21.10.2020 9:34:45
#КонецВставки
	КонецЕсли;

	ДоходыИРасходыСервер.ИнициализироватьПустоеЗначениеСтатьиВТЧ(РасшифровкаПлатежа, "СтатьяДоходов");

	ДенежныеСредстваСервер.ЗаполнитьСтатьюДвиженияДенежныхСредств(
	ЭтотОбъект,
	ДанныеЗаполнения,
	Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);

	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьРеквизитыЗначениямиПоУмолчанию")
Процедура ВИЛС_ЗаполнитьРеквизитыЗначениямиПоУмолчанию()

	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Валюта = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Валюта);


	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация = Организация;
	СтруктураПараметров.ФормаОплаты	= Перечисления.ФормыОплаты.Безналичная;
	СтруктураПараметров.Валюта		= Валюта;
	БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);

	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		Если Не ЗначениеЗаполнено(Организация) Тогда
			Организация = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет).Организация;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Валюта) Тогда
			Валюта = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет).Валюта;
		КонецЕсли;
	КонецЕсли;

	БанковскийСчетКонтрагента =
	Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(Контрагент, Валюта);
	НазначениеПлатежа =
	Справочники.БанковскиеСчетаКонтрагентов.ПолучитьРеквизитыБанковскогоСчета(БанковскийСчетКонтрагента).ТекстНазначения;

	Если Документы.СписаниеБезналичныхДенежныхСредств.ДействуетФедеральныйЗакон345ФЗ(Дата) Тогда
		ОчередностьПлатежа = 5;
	Иначе
		ОчередностьПлатежа = 6;
	КонецЕсли;

#Удаление
	ДатаПроведенияБанком = ТекущаяДатаСеанса();
#КонецУдаления
#Вставка
	Дата = ТекущаяДатаСеанса();         // begin fix Suetin 21.10.2020 9:34:39  Ticket#8219094
	ДатаПроведенияБанком = Дата;  		// end fix Suetin 21.10.2020 9:34:45
#КонецВставки
	ПроведеноБанком = (ТипПлатежногоДокумента <> Перечисления.ТипыПлатежныхДокументов.ПлатежноеТребование);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

