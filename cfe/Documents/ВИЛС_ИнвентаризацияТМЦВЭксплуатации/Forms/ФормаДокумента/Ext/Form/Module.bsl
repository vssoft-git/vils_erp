&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОтборамНаСервере()

	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТМЦВЭксплуатацииОбороты.ФизическоеЛицо КАК ФизЛицо,
	|	ТМЦВЭксплуатацииОбороты.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатацииОбороты.КоличествоОборот КАК КолУчет
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
	|			,
	|			&ДатаКон,
	|			,
	|			Организация = &Организация";
	
	Запрос.УстановитьПараметр("ДатаКон", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Если НЕ Объект.Подразделение.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + "	 И Подразделение = &Подразделение";
		Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	КонецЕсли;
	Если НЕ Объект.ФизЛицо.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + "	 И ФизическоеЛицо = &ФизЛицо";
		Запрос.УстановитьПараметр("ФизЛицо", Объект.ФизЛицо);
	КонецЕсли;
	Если НЕ Объект.Номенклатура.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + "	 И Номенклатура = &Номенклатура";
		Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + ") КАК ТМЦВЭксплуатацииОбороты УПОРЯДОЧИТЬ ПО ФизическоеЛицо.Наименование, Номенклатура.Наименование";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Стр = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Стр,Выборка);
		Стр.КолФакт		= 0;
		Стр.Излишки 	= 0;
		Стр.Недостача 	= 0;	//Стр.Недостача = Стр.КолУчет;   // fix Suetin 04.12.2019 12:38:47 Не заполняем по просьбе. Потом, когда будут заполнять вручную, Недостача и Излишки заполнятся автоматически.
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтборам(Команда)
	Если Объект.Подразделение.Пустая() Тогда
		Сообщить("Сначала заполните подразделение!");
	КонецЕсли;
	
	ЗаполнитьПоОтборамНаСервере();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура СкопироватьУчетноеВФактическоеНаСервере()

	Для каждого Стр Из Объект.Товары Цикл
		Стр.КолФакт = Стр.КолУчет;
		Стр.Излишки = 0;
		Стр.Недостача = 0;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьУчетноеВФактическое(Команда)
	СкопироватьУчетноеВФактическоеНаСервере();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Функция СоздатьОприходованиеНаСервере(ДанныеФормы)

	Если ЭтаФорма.Модифицированность Тогда
		Сообщить("Для начала запишите инвентаризацию в базу данных");
		Возврат Ложь;
	КонецЕсли;
	
	// Получаем объект документа из данных формы
	Док = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.ВводОстатков"));
	
	Док.Дата = Объект.Дата;
	Док.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации;
	Док.Организация = Объект.Организация;
	Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Док.Комментарий = "Создан автоматически " + ТекущаяДата() +  " по инвентаризации №" + Объект.Номер;
	Док.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	Док.Подразделение = Объект.Подразделение;
	Док.ЦенаВключаетНДС = Истина;
	Док.ОтражатьВОперативномУчете = Истина;
	Док.ОтражатьВБУиНУ = Истина;
	Док.ОтражатьВУУ = Истина;
	Док.ВидЦенностиНДС = Перечисления.ВидыЦенностей.Товары;

	//+проверка на аналитику статьи
	Попытка
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
		ОписаниеТиповПодразделение = Новый ОписаниеТипов(Массив);		
		Если НЕ Объект.СтатьяРасходов.Пустая() И Объект.СтатьяРасходов.ТипЗначения <> ОписаниеТиповПодразделение Тогда
			Сообщить("Т.к. выбранная Статья расходов: " + Строка(Объект.СтатьяРасходов) + " имеет аналитику отличную от По подразделениям, то оставляем аналитику пустой.");
			ОставляемАналитикуПустой = Истина;
		Иначе
			ОставляемАналитикуПустой = Ложь;
		КонецЕсли;
	Исключение
		ОставляемАналитикуПустой = Истина;
	КонецПопытки;
	//-проверка на аналитику статьи.
	
	Для каждого СтрИнвент Из Объект.Товары Цикл
		
		Если СтрИнвент.Излишки <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Стр = Док.ТМЦВЭксплуатации.Добавить();
		Стр.Номенклатура = СтрИнвент.Номенклатура;
		Стр.Количество = СтрИнвент.Излишки;
		Стр.ПервоначальнаяСумма = 1;
		//Стр.КатегорияЭксплуатации = Справочники.КатегорииЭксплуатации.НайтиПоНаименованию("Спец.инвентарь, инструмент");
		Стр.КатегорияЭксплуатации = Объект.КатегорияЭксплуатации;
		Стр.ФизическоеЛицо = СтрИнвент.ФизЛицо;
		Стр.ДатаПередачиВЭксплуатацию = Объект.Дата;
							
		////получить статью расходов по доп.сведению вида номенклатуры.
		//СтатьяРез = ПолучитьСтатьюРасходовДляХИПоВидуНоменклатуры(Стр.Номенклатура.ВидНоменклатуры);
		//Если СтатьяРез = Ложь Тогда
		//	Сообщить("Создание остановлено! По виду номенклатуры пытались определить статью. Номенклатура: " + Стр.Номенклатура + ". Возникла критическая проблема с Статьей расходов в Доп. сведениях");
		//	Возврат Ложь;
		//Иначе	
		//	Стр.СтатьяРасходов = СтатьяРез;
		//КонецЕсли;
		
		Стр.СтатьяРасходов = Объект.СтатьяРасходов;
		Если НЕ ОставляемАналитикуПустой Тогда
			Стр.АналитикаРасходов = Объект.Подразделение;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Док.ТМЦВЭксплуатации.Количество() = 0 Тогда
		Сообщить("По документу нечего оприходовать!");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		// Данные заполненного документа помещаем в объект формы
		ЗначениеВДанныеФормы(Док,ДанныеФормы);
		Возврат Истина;
	Исключение
		Сообщить("Ошибка записи: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции


&НаКлиенте
Процедура СоздатьОприходование(Команда)
	
	ФормаНовогоОприходоваия = ПолучитьФорму("Документ.ВводОстатков.Форма.ФормаТМЦВЭксплуатации");
	ДанныеФормы = ФормаНовогоОприходоваия.Объект;
	Успешно = СоздатьОприходованиеНаСервере(ДанныеФормы); // Процедура, в которой на сервере заполняется объект документа. 
	Если Успешно Тогда
		КопироватьДанныеФормы(ДанныеФормы, ФормаНовогоОприходоваия.Объект); // Здесь данные заполненного объекта документа копируются в форму.
		ФормаНовогоОприходоваия.Открыть(); // Открываем заполненную форму.
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьСписаниеНаСервере(ДанныеФормы)

	Если ЭтаФорма.Модифицированность Тогда
		Сообщить("Для начала запишите инвентаризацию в базу данных");
		Возврат Ложь;
	КонецЕсли;
	
	Док = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.СписаниеИзЭксплуатации"));
	
	Док.Дата = Объект.Дата;
	Док.Организация = Объект.Организация;
	Док.Подразделение = Объект.Подразделение;
	Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Док.Комментарий = "Создан автоматически " + ТекущаяДата() +  " по инвентаризации №" + Объект.Номер;

		
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ТЧТовары.ФизЛицо КАК ФизЛицо,
	|	ТЧТовары.Номенклатура КАК Номенклатура,
	|	ТЧТовары.Недостача КАК Недостача
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЧТовары КАК ТЧТовары
	|ГДЕ
	|	ТЧТовары.Недостача > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ФизЛицо КАК ФизЛицо,
	|	ВТ.Номенклатура КАК Номенклатура,
	|	ВТ.Недостача КАК Недостача,
	|	ТМЦВЭксплуатацииОбороты.Партия КАК Партия,
	|	ЕСТЬNULL(ТМЦВЭксплуатацииОбороты.КоличествоОборот, 0) КАК Остаток
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТМЦВЭксплуатации.Обороты(
	|				,
	|				&ДатаКон,
	|				,
	|				Организация = &Организация
	|					И Подразделение = &Подразделение
	|					И ФизическоеЛицо В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВТ.ФизЛицо
	|						ИЗ
	|							ВТ КАК ВТ)
	|					И Номенклатура В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВТ.Номенклатура
	|						ИЗ
	|							ВТ КАК ВТ)) КАК ТМЦВЭксплуатацииОбороты
	|			ПО ВТ.ФизЛицо = ТМЦВЭксплуатацииОбороты.ФизическоеЛицо
	|			И ВТ.Номенклатура = ТМЦВЭксплуатацииОбороты.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТМЦВЭксплуатацииОбороты.Партия.Дата
	|ИТОГИ
	|	МАКСИМУМ(Недостача),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Партия),
	|	СУММА(Остаток)
	|ПО
	|	ФизЛицо,
	|	Номенклатура";
	
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("ДатаКон", Объект.Дата);
	Запрос.УстановитьПараметр("ТЧТовары", РеквизитФормыВЗначение("Объект").Товары);
	РезультатЗапроса = Запрос.Выполнить();
	
	//Выборка = РезультатЗапроса.Выбрать();
	
	ВыборкаФизЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//+проверка на аналитику статьи
	Попытка
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
		ОписаниеТиповПодразделение = Новый ОписаниеТипов(Массив);		
		Если НЕ Объект.СтатьяРасходов.Пустая() И Объект.СтатьяРасходов.ТипЗначения <> ОписаниеТиповПодразделение Тогда
			Сообщить("Т.к. выбранная Статья расходов: " + Строка(Объект.СтатьяРасходов) + " имеет аналитику отличную от По подразделениям, то оставляем аналитику пустой.");
			ОставляемАналитикуПустой = Истина;
		Иначе
			ОставляемАналитикуПустой = Ложь;
		КонецЕсли;
	Исключение
		ОставляемАналитикуПустой = Истина;
	КонецПопытки;
	//-проверка на аналитику статьи.
	
	
	Пока ВыборкаФизЛицо.Следующий() Цикл
		
		ВыборкаНоменклатура = ВыборкаФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			Если ВыборкаНоменклатура.Остаток < ВыборкаНоменклатура.Недостача Тогда
				Сообщить("Ошибка. Пытаемся списать из эксплуатации больше чем числится за Физическим лицом. Физ.лицо:" + ВыборкаНоменклатура.ФизЛицо + " Номенклатура:" + ВыборкаНоменклатура.Номенклатура);
				Возврат Ложь;
			Иначе
				
				////получить статью расходов по доп.сведению вида номенклатуры.
				//СтатьяРез = ПолучитьСтатьюРасходовДляХИПоВидуНоменклатуры(ВыборкаНоменклатура.Номенклатура.ВидНоменклатуры);
				//Если СтатьяРез = Ложь Тогда
				//	Сообщить("Создание остановлено! По виду номенклатуры пытались определить статью. Номенклатура: " + ВыборкаНоменклатура.Номенклатура + ". Возникла критическая проблема с Статьей расходов в Доп. сведениях");
				//	Возврат Ложь;
				//Иначе	
				//	СтатьяРасходовНайд = СтатьяРез;
				//КонецЕсли;
				
				
				
				ОсталосьСписать = ВыборкаНоменклатура.Недостача;
				
				ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Стр = Док.Товары.Добавить();
					Стр.ФизическоеЛицо = ВыборкаДетальныеЗаписи.ФизЛицо;
					Стр.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					Стр.ПартияТМЦВЭксплуатации = ВыборкаДетальныеЗаписи.Партия;
					
					Стр.Количество = Мин(ОсталосьСписать,ВыборкаДетальныеЗаписи.Остаток);
					ОсталосьСписать = ОсталосьСписать - Стр.Количество;
					
					Стр.СтатьяРасходов = Объект.СтатьяРасходов;
					Если НЕ ОставляемАналитикуПустой Тогда
						Стр.АналитикаРасходов = Объект.Подразделение;
					КонецЕсли;
					
					
					Если ОсталосьСписать = 0 Тогда
						Прервать;
					ИначеЕсли ОсталосьСписать < 0 Тогда
						Сообщить("Списали больше чем нужно, обратитесь к программисту");
						Возврат Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
				Если ОсталосьСписать > 0 Тогда
					Сообщить("Ошибка. Не хватило остатков партий. Обратитесь к программисту");
					Возврат Ложь;
				КонецЕсли;
				
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Если Док.Товары.Количество() = 0 Тогда
		Сообщить("По документу нечего списывать!");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		ЗначениеВДанныеФормы(Док,ДанныеФормы);
		Возврат Истина;
	Исключение
		Сообщить("Ошибка записи: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	
КонецФункции

&НаКлиенте
Процедура СоздатьСписание(Команда)
	
	ФормаНовогоСписания = ПолучитьФорму("Документ.СписаниеИзЭксплуатации.Форма.ФормаДокумента");
	ДанныеФормы = ФормаНовогоСписания.Объект;
	Успешно = СоздатьСписаниеНаСервере(ДанныеФормы); // Процедура, в которой на сервере заполняется объект документа. 
	Если Успешно Тогда
		КопироватьДанныеФормы(ДанныеФормы, ФормаНовогоСписания.Объект); // Здесь данные заполненного объекта документа копируются в форму.
		ФормаНовогоСписания.Открыть(); // Открываем заполненную форму.
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Организация.Пустая() Тогда
		Сообщить("Не заполнена организация!");
		Отказ = Истина;
	КонецЕсли;
	Если Объект.Подразделение.Пустая() Тогда
		Сообщить("Не заполнено подразделение!");
		Отказ = Истина;
	КонецЕсли;
	
	Рез = ЕстьПовторяющийсяТовар();
	Если Рез Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЕстьПовторяющийсяТовар()
	
	Нашли = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧТовары.ФизЛицо КАК ФизЛицо,
		|	ТЧТовары.Номенклатура КАК Номенклатура,
		|	ТЧТовары.НомерСтроки КАК НомерСтроки,
		|	1 КАК ВстретилосьРаз
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТЧТовары КАК ТЧТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.ФизЛицо КАК ФизЛицо,
		|	ВТ.Номенклатура КАК Номенклатура,
		|	ВТ.НомерСтроки КАК НомерСтроки,
		|	ВТ.ВстретилосьРаз КАК ВстретилосьРаз
		|ИЗ
		|	ВТ КАК ВТ
		|ИТОГИ
		|	СУММА(ВстретилосьРаз)
		|ПО
		|	ФизЛицо,
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("ТЧТовары", РеквизитФормыВЗначение("Объект").Товары);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаФизЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаФизЛицо.Следующий() Цикл

		ВыборкаНоменклатура = ВыборкаФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			Если ВыборкаНоменклатура.ВстретилосьРаз > 1 Тогда
				Нашли = Истина;
				ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
				Сообщить("В следующих строках повторяется комбинация Физлицо и Номенклатура. Это некорректно. Исправьте.");
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Сообщить("В строке № " + ВыборкаДетальныеЗаписи.НомерСтроки);
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	

	Если Нашли Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	
	
КонецФункции



&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	Стр = Элементы.Товары.ТекущиеДанные;
	Если Стр = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Откл = Стр.КолФакт - Стр.КолУчет;
	
	Если Откл > 0 Тогда
		Стр.Недостача = 0;
		Стр.Излишки = Откл;
	ИначеЕсли Откл < 0 Тогда
		Стр.Излишки = 0;
		Стр.Недостача = Откл * -1;
	Иначе
		Стр.Излишки = 0;
		Стр.Недостача = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Копирование Тогда
		Элемент.ТекущиеДанные.КолУчет = 0;
		Элемент.ТекущиеДанные.КолФакт = 0;
		Элемент.ТекущиеДанные.Излишки = 0;
		Элемент.ТекущиеДанные.Недостача = 0;
	КонецЕсли;
КонецПроцедуры


//+Не используется
&НаСервере
Функция ПолучитьСтатьюРасходовДляХИПоВидуНоменклатуры(ВидНоменклатуры)
		
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "СтатьяРасходовДляСписанияХИ");
	Если Свойство.Пустая() Тогда
		Сообщить("Не удалось найти дополнительное сведение с именем " + "СтатьяРасходовДляСписанияХИ" + ". Статью расходов оставляем пустой.");
		Возврат ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеСведения.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|   ДополнительныеСведения.Объект = &СсылкаНаВидНом
	|	И ДополнительныеСведения.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.УстановитьПараметр("СсылкаНаВидНом", ВидНоменклатуры);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	ИначеЕсли Выборка.Количество() > 1 Тогда
		Сообщить("Ошибка задвоения доп.сведения. Загрузка остановлена");
		Возврат Ложь;
	Иначе
		Выборка.Следующий();
		Возврат Выборка.Значение;
	КонецЕсли;
	
КонецФункции


//-Не используется
#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

