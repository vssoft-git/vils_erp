#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Если ПравоДоступа("Изменение", Метаданные.Документы.ВИЛС_ИнвентаризацияТМЦВЭксплуатации) Тогда
		
		// Сличительная ведомость (ИНВ-19)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ИнвентаризацияТМЦВЭксплуатации";
		КомандаПечати.Представление = НСтр("ru = 'Инвентаризация ТМЦ в эксплуатации (ВИЛС)';
											|en = 'Inventory of in-service materials (VILS)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// Инвентаризационная опись (ИНВ-3)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьИНВ3";
		КомандаПечати.Идентификатор = "ИНВ3";
		КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись (ИНВ-3) (ВИЛС)';
											|en = 'Stocktaking sheet (INV-3) (VILS)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	КонецЕсли;
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризацияТМЦВЭксплуатации") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ИнвентаризацияТМЦВЭксплуатации", НСтр("ru = 'Инвентаризация ТМЦ в эксплуатации'"),
			ПечатьИнвентаризацияТМЦВЭксплуатации(МассивОбъектов, ОбъектыПечати), , "Документ.ВИЛС_ИнвентаризацияТМЦВЭксплуатации.ПФ_MXL_ИнвентаризацияТМЦВЭксплуатации");
	КонецЕсли;
КонецПроцедуры

Функция ПечатьИнвентаризацияТМЦВЭксплуатации(МассивОбъектов, ОбъектыПечати)
	Макет = Документы.ВИЛС_ИнвентаризацияТМЦВЭксплуатации.ПолучитьМакет("ПФ_MXL_ИнвентаризацияТМЦВЭксплуатации");
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Дата КАК Дата,
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Номенклатура КАК Номенклатура,
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Номер КАК Номер,
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Организация КАК Организация,
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Подразделение КАК Подразделение,
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.ФизЛицо КАК ФизЛицо,
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Товары.(
	|		НомерСтроки КАК НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		ФизЛицо КАК ФизЛицо,
	|		Номенклатура КАК Номенклатура,
	|		КолУчет КАК КолУчет,
	|		КолФакт КАК КолФакт,
	|		Излишки КАК Излишки,
	|		Недостача КАК Недостача
	|	) КАК Товары
	|ИЗ
	|	Документ.ВИЛС_ИнвентаризацияТМЦВЭксплуатации КАК ВИЛС_ИнвентаризацияТМЦВЭксплуатации
	|ГДЕ
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Товары.Номенклатура.Наименование";
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	ТабличныйДокумент.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабличныйДокумент.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(Шапка, Выборка.Уровень());

		ТабличныйДокумент.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабличныйДокумент.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	Возврат(ТабличныйДокумент);
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыИНВ3(ПараметрыПечати, ДокументОснование) Экспорт
	
	ДанныеДокумента = Документы.ВИЛС_ИнвентаризацияТМЦВЭксплуатации.ПолучитьДанныеДокумента(ПараметрыПечати, ДокументОснование);
	
	Если ДанныеДокумента.ОписаниеОшибки <> Неопределено Тогда
		Если ДанныеДокумента.ОписаниеОшибки = "НетИнвентаризацийВПериоде" Тогда
			ТекстСообщения = НСтр("ru = 'Печать %Документ% не выполнена: в указанный инвентаризационный период не найдены пересчеты товаров.';
									|en = '%Документ% is not printed: goods recounts are not found in the specified stocktaking period.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Строка(ДокументОснование));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ДокументОснование);
		ИначеЕсли ДанныеДокумента.ОписаниеОшибки = "НетЦенПоСебестоимости" Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: с %ПериодС% по %ПериодПо% не произведен расчет себестоимости.';
									|en = 'Cannot receive prices by cost for document %Документ%: cost is not calculated from %ПериодС% to %ПериодПо%.'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПериодС%", Формат(НачалоМесяца(ДанныеДокумента.РезультатПоШапке.ДатаНачала),"ДЛФ=DD"));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПериодПо%", Формат(КонецМесяца(ДанныеДокумента.РезультатПоШапке.ДатаОкончания),"ДЛФ=DD"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если ДанныеДокумента.ПоПредварительномуРасчету Тогда
		ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.';
								|en = 'Data of the preliminary cost calculation was used while printing document %Документ%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатКурсВалюты",
		ДанныеДокумента.РезультатПоШапке,
		ДанныеДокумента.РезультатПоТабличнойЧасти,
		ДанныеДокумента.РезультатКурсВалюты);
	
КонецФункции

// Функция получает данные документа.
// Используется при получении данных для печатной формы ИНВ3 и для выгрузки данных при обмене.
//
Функция ПолучитьДанныеДокумента(ПараметрыПечати, ДокументОснование) Экспорт
	
	СтруктураВозврата = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатКурсВалюты, ОписаниеОшибки, ПоПредварительномуРасчету");
	СтруктураВозврата.ОписаниеОшибки = Неопределено;
	СтруктураВозврата.ПоПредварительномуРасчету = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
		
	ЗапросПредварительныхДанных = Новый Запрос;
	ЗапросПредварительныхДанных.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризационнаяОпись.Дата 			КАК Дата,
	|	ИнвентаризационнаяОпись.Дата 			КАК ДатаНачала,
	|	ИнвентаризационнаяОпись.Дата 			КАК ДатаОкончания,
	|	НЕОПРЕДЕЛЕНО 							КАК ВидЦены,
	|	ИнвентаризационнаяОпись.Подразделение 	КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости) КАК ИсточникИнформацииОЦенахДляПечати,
	|	ИнвентаризационнаяОпись.Организация		КАК Организация,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ИЗ
	|	Документ.ВИЛС_ИнвентаризацияТМЦВЭксплуатации КАК ИнвентаризационнаяОпись
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Организация = ИнвентаризационнаяОпись.Организация)
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ИнвентаризационнаяОпись.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ИнвентаризационнаяОпись.Дата, МЕСЯЦ))
	|ГДЕ
	|	ИнвентаризационнаяОпись.Ссылка = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата УБЫВ";
	
	ЗапросПредварительныхДанных.УстановитьПараметр("ДокументОснование", ДокументОснование);	
 	ПредварительныеДанныеРезультат = ЗапросПредварительныхДанных.Выполнить().Выбрать();
		
	Если НЕ ПредварительныеДанныеРезультат.Следующий() Тогда
		СтруктураВозврата.ОписаниеОшибки = "НетИнвентаризацийВПериоде";
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	ПредварительныйРасчет 			  = ПредварительныеДанныеРезультат.ПредварительныйРасчет;
	ИсточникИнформацииОЦенахДляПечати = ПредварительныеДанныеРезультат.ИсточникИнформацииОЦенахДляПечати;
	ДатаНачала 						  = ПредварительныеДанныеРезультат.ДатаНачала;
	ДатаОкончания 					  = КонецДня(ПредварительныеДанныеРезультат.ДатаОкончания);
	Склад							  = ПредварительныеДанныеРезультат.Склад;	
	Организация 					  = ПредварительныеДанныеРезультат.Организация;
	ВидЦены 						  = ПредварительныеДанныеРезультат.ВидЦены;
				
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", 	   ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	   ДатаОкончания);
	Запрос.УстановитьПараметр("Склад", 			   Склад);
	Запрос.УстановитьПараметр("ДатаОстатков", 	   ДатаОкончания + 1);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("Организация", 	   Организация);
	Запрос.УстановитьПараметр("ВидЦены", 		   ВидЦены);
	
	// Ответственные лица в печатной форме
	СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация, КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Руководитель", 		   СтруктураОтветственных.Руководитель);
	Запрос.УстановитьПараметр("ДолжностьРуководителя", СтруктураОтветственных.РуководительДолжность);
	Запрос.УстановитьПараметр("ГлавныйБухгалтер", 	   СтруктураОтветственных.ГлавныйБухгалтер);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Склады.Ссылка 			КАК Склад,
	|	Склады.Подразделение 	КАК Подразделение
	|ПОМЕСТИТЬ ТекущийСклад
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ    
	|	Склады.Подразделение = &Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Руководитель КАК Руководитель,
	|	&ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	&ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).КодПоОКПО КАК ОрганизацияПоОКПО,
	|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации).Префикс КАК Префикс,
	|	ТекущийСклад.Склад.ТекущийОтветственный КАК Кладовщик,                                // begin fix Suetin 02.12.2019 16:01:14
	|	ТекущийСклад.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	ИнвентаризационнаяОпись.Подразделение.Наименование КАК ПодразделениеПредставление,    // end fix Suetin 02.12.2019 16:01:19
	|	&ДатаНачала КАК ДатаНачала,
	|	&ДатаОкончания КАК ДатаОкончания,
	|	ТекущийСклад.Склад КАК Склад,
	|	ИнвентаризационнаяОпись.Дата КАК ОснованиеДата,
	|	ИнвентаризационнаяОпись.Номер КАК ОснованиеНомер,
	|	ИнвентаризационнаяОпись.Номер КАК НомерДокумента,
	|	ИнвентаризационнаяОпись.Дата КАК ДатаДокумента,
	|	ИнвентаризационнаяОпись.Ссылка КАК Ссылка,
	|	&ДатаОкончания КАК ДатаСнятияОстатков
	|ИЗ
	|	Документ.ВИЛС_ИнвентаризацияТМЦВЭксплуатации КАК ИнвентаризационнаяОпись
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекущийСклад КАК ТекущийСклад
	|		ПО ИнвентаризационнаяОпись.Подразделение = ТекущийСклад.Подразделение
	|ГДЕ
	|	ИнвентаризационнаяОпись.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвентаризационнаяОпись.Ссылка.Организация 							КАК Организация,
	|	ИнвентаризационнаяОпись.Ссылка.Подразделение 						КАК Подразделение,
	|	ИнвентаризационнаяОпись.ФизЛицо 									КАК ФизическоеЛицо,
	|	ИнвентаризационнаяОпись.Номенклатура 								КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) 		КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) 				КАК Серия,
	|	ИнвентаризационнаяОпись.Номенклатура.НаименованиеПолное 			КАК ТоварНаименование,
	|	"""" 																КАК ХарактеристикаНаименование,
	|	"""" 																КАК СерияНаименование,
	|	ИнвентаризационнаяОпись.КолУчет										КАК КоличествоПоУчету,
	|	ИнвентаризационнаяОпись.КолФакт										КАК КоличествоФактическое,
	|	ИнвентаризационнаяОпись.Номенклатура.Код 							КАК ТоварКод,
	|	ИнвентаризационнаяОпись.Номенклатура.ЕдиницаИзмерения.Код 			КАК ЕдиницаИзмеренияКод,
	|	ИнвентаризационнаяОпись.Номенклатура.ЕдиницаИзмерения.Наименование 	КАК ЕдиницаИзмеренияНаименование,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ПОМЕСТИТЬ ТаблицаИнвентаризации 
	|ИЗ
	|	Документ.ВИЛС_ИнвентаризацияТМЦВЭксплуатации.Товары КАК ИнвентаризационнаяОпись
	|ГДЕ
	|	ИнвентаризационнаяОпись.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИнвентаризации.Номенклатура 											КАК Номенклатура,
	|	ТаблицаИнвентаризации.Характеристика 										КАК Характеристика,
	|	ТаблицаИнвентаризации.Серия 												КАК Серия,
	|	ТаблицаИнвентаризации.ТоварНаименование 									КАК ТоварНаименование,
	|	ТаблицаИнвентаризации.ХарактеристикаНаименование 							КАК ХарактеристикаНаименование,
	|	ТаблицаИнвентаризации.СерияНаименование 									КАК СерияНаименование,
	|	СУММА(ТаблицаИнвентаризации.КоличествоПоУчету) 								КАК КоличествоПоУчету,
	|	СУММА(ТаблицаИнвентаризации.КоличествоФактическое) 							КАК КоличествоФактическое,
	|	ВЫБОР КОГДА ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстаток,0) = 0 ТОГДА 0 ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток / ХозрасчетныйОстатки.КоличествоОстаток КОНЕЦ КАК Цена,
	|	СУММА(ТаблицаИнвентаризации.КоличествоПоУчету 		* ВЫБОР КОГДА ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстаток,0) = 0 ТОГДА 0 ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток / ХозрасчетныйОстатки.КоличествоОстаток КОНЕЦ) КАК СуммаПоУчету,
	|	СУММА(ТаблицаИнвентаризации.КоличествоФактическое 	* ВЫБОР КОГДА ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстаток,0) = 0 ТОГДА 0 ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток / ХозрасчетныйОстатки.КоличествоОстаток КОНЕЦ) КАК СуммаФактическая,
	|	ТаблицаИнвентаризации.ЕдиницаИзмеренияКод 									КАК ЕдиницаИзмеренияКод,
	|	ТаблицаИнвентаризации.ЕдиницаИзмеренияНаименование 							КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаИнвентаризации.ТоварКод 												КАК ТоварКод,
	|	ТаблицаИнвентаризации.ЭтоВозвратнаяТара 									КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ТаблицаИнвентаризации КАК ТаблицаИнвентаризации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ДатаОстатков,
	|				Счет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный),
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный),
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации)),
	|				,
	|				(Организация, Подразделение, Субконто1) В
	|					(ВЫБРАТЬ
	|						ТаблицаИнвентаризации.Организация,
	|						ТаблицаИнвентаризации.Подразделение,
	|						ТаблицаИнвентаризации.Номенклатура
	|					ИЗ
	|						ТаблицаИнвентаризации КАК ТаблицаИнвентаризации)) КАК ХозрасчетныйОстатки
	|			ПО ТаблицаИнвентаризации.Организация = ХозрасчетныйОстатки.Организация
	|				И ТаблицаИнвентаризации.Подразделение = ХозрасчетныйОстатки.Подразделение
	|				И ТаблицаИнвентаризации.Номенклатура = ХозрасчетныйОстатки.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИнвентаризации.Номенклатура,
	|	ТаблицаИнвентаризации.Характеристика,
	|	ТаблицаИнвентаризации.Серия,
	|	ТаблицаИнвентаризации.ТоварНаименование,
	|	ТаблицаИнвентаризации.ХарактеристикаНаименование,
	|	ТаблицаИнвентаризации.СерияНаименование,
	|	ВЫБОР КОГДА ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстаток,0) = 0 ТОГДА 0 ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток / ХозрасчетныйОстатки.КоличествоОстаток КОНЕЦ,
	|	ТаблицаИнвентаризации.ЕдиницаИзмеренияКод,
	|	ТаблицаИнвентаризации.ЕдиницаИзмеренияНаименование,
	|	ТаблицаИнвентаризации.ТоварКод,
	|	ТаблицаИнвентаризации.ЭтоВозвратнаяТара
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварНаименование,
	|	Номенклатура";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Номенклатура.Код", "Номенклатура." + КолонкаКодов);
	
	Запрос.Текст = ТекстЗапроса;
	
	Результаты = Запрос.ВыполнитьПакет();
	РезультатПоШапке = Результаты[1];
	РезультатПоТабличнойЧасти = Результаты[3];
	РезультатКурсВалюты = Неопределено;
	
	СтруктураВозврата.РезультатПоШапке          = РезультатПоШапке;
	СтруктураВозврата.РезультатПоТабличнойЧасти = РезультатПоТабличнойЧасти;
	СтруктураВозврата.РезультатКурсВалюты       = РезультатКурсВалюты;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
