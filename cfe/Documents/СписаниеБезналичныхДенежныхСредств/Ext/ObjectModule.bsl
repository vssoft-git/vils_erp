
&ИзменениеИКонтроль("ПередЗаписью")
Процедура ВИЛС_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	СформироватьСписокЗависимыхЗаказов();
	
	// Очистим табличную часть, если она не должна заполняться.
	МассивРеквизитовОперации = Новый Массив;
	Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, ПеречислениеВБюджет, Неопределено, МассивРеквизитовОперации);
	
	Если РасшифровкаПлатежа.Количество() > 0
		И (МассивРеквизитовОперации.Найти("РасшифровкаПлатежа") = Неопределено
			Или Документы.СписаниеБезналичныхДенежныхСредств.МассивОперацийБезРасшифровкиПлатежа().Найти(ХозяйственнаяОперация) <> Неопределено
				И Не ОплатаПоЗаявкам) Тогда
		РасшифровкаПлатежа.Очистить();
	КонецЕсли;
	
	СсылкаНаПлатеж = Ссылка;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов
			//++ НЕ УТ
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю
			//-- НЕ УТ
		Тогда
		
			Если ЭтоНовый() Тогда
				СсылкаНаПлатеж = Документы.СписаниеБезналичныхДенежныхСредств.ПолучитьСсылку();
				УстановитьСсылкуНового(СсылкаНаПлатеж);
			КонецЕсли;
			
			Для Каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
				Если Не ЗначениеЗаполнено(СтрокаРасшифровки.Заказ) Тогда
					СтрокаРасшифровки.Заказ = СсылкаНаПлатеж;
				КонецЕсли;
			КонецЦикла;
			
			ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВТабличнойЧасти(
				Валюта,
				?(ПроведеноБанком, ДатаПроведенияБанком, Дата),
				РасшифровкаПлатежа);
		КонецЕсли;
		
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(РасшифровкаПлатежа);
		ДенежныеСредстваСервер.ЗаполнитьОрганизациюВТабличнойЧасти(РасшифровкаПлатежа, Организация, ХозяйственнаяОперация);
	КонецЕсли;
	
	//++ НЕ УТ
	Если ДенежныеСредстваСервер.ОперацияПоЗарплате(ХозяйственнаяОперация) Тогда
		ПериодУчетнойПолитики = ?(ЗначениеЗаполнено(Дата), КонецМесяца(Дата), КонецМесяца(ТекущаяДатаСеанса()));
		ПараметрыУчетнойПолитики = РегистрыСведений.УчетнаяПолитикаОрганизаций.ПараметрыУчетнойПолитики(Организация, ПериодУчетнойПолитики);
		Если ПараметрыУчетнойПолитики <> Неопределено Тогда
			ПроводкиПоРаботникам = ПараметрыУчетнойПолитики.ПроводкиПоРаботникам И ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ");
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	
	// Очистим реквизиты документа не используемые для хозяйственной операции.
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
		ХозяйственнаяОперация,
		ПеречислениеВБюджет,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	ПроверитьИзменениеТипаПлатежногоДокумента();
	
	Если Лев(ПоказательДаты, 1) = "0"
	 И Сред(ПоказательДаты, 2, 2) = " ." Тогда
		ПоказательДаты = "0";
	КонецЕсли;
	
	Если ПустаяСтрока(СтрЗаменить(ПоказательДаты, ".", "")) Тогда
		ПоказательДаты = "";
	КонецЕсли;
	
	Если ПеречислениеВБюджет И НЕ ЗначениеЗаполнено(ИдентификаторПлатежа) Тогда
		ИдентификаторПлатежа = "0";
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ОбменСБанками") Или Не ДополнительныеСвойства.ОбменСБанками Тогда
#Удаление
		Если Не (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств) Тогда
			КодВидаДохода = "";
		КонецЕсли;
#КонецУдаления
#Вставка
		Если Не (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств
				И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ЮрФизЛицо") = Перечисления.ЮрФизЛицо.ФизЛицо) Тогда
			КодВидаДохода = "";
		КонецЕсли;
#КонецВставки
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ОбменСБанками") Или Не ДополнительныеСвойства.ОбменСБанками Тогда
		Если Не (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета) Тогда
			КодВыплат = "";
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;
	
	Если (ТипПлатежногоДокумента = Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение
			Или ТипПлатежногоДокумента = Перечисления.ТипыПлатежныхДокументов.РаспоряжениеОбОбязательнойПродаже)
		И Не (ЗначениеЗаполнено(НомерВходящегодокумента) Или ЗначениеЗаполнено(ДатаВходящегоДокумента)) Тогда
		НомерВходящегодокумента = СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер, Истина, Истина));
		ДатаВходящегоДокумента = Дата;
	КонецЕсли;
	
	ФорматированноеНазначениеПлатежа = ДенежныеСредстваСервер.ФорматироватьНазначениеПлатежа(НазначениеПлатежа);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОшибкиЗагрузки = "";
	КонецЕсли;
	
	//++ НЕ УТ
	Если Не ПеречислениеВБюджет И ЗначениеЗаполнено(БанковскийСчет) Тогда
		РеквизитыБанковскогоСчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчет, "ОтдельныйСчетГОЗ, ГосударственныйКонтракт.Код");
		Если РеквизитыБанковскогоСчета.ОтдельныйСчетГОЗ Тогда
			ИдентификаторПлатежа = РеквизитыБанковскогоСчета.ГосударственныйКонтрактКод;
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	
	ДоходыИРасходыСервер.ИнициализироватьПустоеЗначениеСтатьиВТЧ(РасшифровкаПлатежа, "СтатьяРасходов");
	
	ДенежныеСредстваСервер.ЗаполнитьШапкуПоДаннымРасшифровки(ЭтотОбъект);
	
	СписаниеБезналичныхДенежныхСредствЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры
