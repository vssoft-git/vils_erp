
&Вместо("СформироватьПечатнуюФормуЛистаКассовойКниги")
Функция ВИЛС_СформироватьПечатнуюФормуЛистаКассовойКниги(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЛистКассовойКниги";
	ВыводитьОснования = Ложь;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаРеглУчетаНаименованиеПолное = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВалютаРегламентированногоУчета, "НаименованиеПолное");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументКассоваяКнига.Ссылка КАК Ссылка,
	|	ДокументКассоваяКнига.ТипЛиста КАК ТипЛиста,
	|	ДокументКассоваяКнига.КоличествоДокументовНаЛисте КАК КоличествоДокументовНаЛисте,
	|	ДокументКассоваяКнига.Дата КАК Дата,
	|	ДокументКассоваяКнига.Организация КАК Организация,
	|	ДокументКассоваяКнига.КассоваяКнига КАК КассоваяКнига,
	|	ДокументКассоваяКнига.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДокументКассоваяКнига.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка В(&МассивДокументов)
	|	И ДокументКассоваяКнига.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	ВыборкаПоДокументамКассоваяКнига = Результат.Выбрать();
	
	Пока ВыборкаПоДокументамКассоваяКнига.Следующий() Цикл
		
		ЛистКассовойКниги = ВыборкаПоДокументамКассоваяКнига.Ссылка;
		
		ДатаНач = НачалоДня(ВыборкаПоДокументамКассоваяКнига.Дата);
		ДатаКон = КонецДня(ВыборкаПоДокументамКассоваяКнига.Дата);
		ГраницаКон = Новый Граница(ДатаКон, ВидГраницы.Включая);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Организация = ВыборкаПоДокументамКассоваяКнига.Организация;
		КассоваяКнига = ВыборкаПоДокументамКассоваяКнига.КассоваяКнига;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЛистКассовойКниги.ПФ_MXL_ЛистКассовойКниги");
		
		ОбластьВалОстатокОтчет              = Макет.ПолучитьОбласть("ВалОстаток|Отчет");
		ОбластьПодвалОтчет                  = Макет.ПолучитьОбласть("Подвал|Отчет");
		ОбластьВТомЧислеОтчет               = Макет.ПолучитьОбласть("ВТомЧисле|Отчет");
		ОбластьОстатокОтчет                 = Макет.ПолучитьОбласть("Остаток|Отчет");
		ОбластьЛистовЗаМесяцОтчет           = Макет.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
		ОбластьЛистовЗаГодОтчет             = Макет.ПолучитьОбласть("ЛистовЗаГод|Отчет");
		ОбластьВкладнойЛистОтчет            = Макет.ПолучитьОбласть("ВкладнойЛист|Отчет");
		ОбластьВкладнойЛист373ПОтчет        = Макет.ПолучитьОбласть("ВкладнойЛист373П|Отчет");
		ОбластьОтчетКассираОтчет            = Макет.ПолучитьОбласть("ОтчетКассира|Отчет");
		ОбластьОтчетКассира373ПОтчет        = Макет.ПолучитьОбласть("ОтчетКассира373П|Отчет");
		ОбластьШапкаОтчет                   = Макет.ПолучитьОбласть("Шапка|Отчет");
		ОбластьОстатокНаНДОтчет             = Макет.ПолучитьОбласть("ОстатокНаНД|Отчет");
		ОбластьКурсовыеРазницыОтчет         = Макет.ПолучитьОбласть("КурсовыеРазницы|Отчет");
		ОбластьКурсовыеРазницыПоВалютеОтчет = Макет.ПолучитьОбласть("КурсовыеРазницыПоВалюте|Отчет");
		ОбластьПереносОтчет                 = Макет.ПолучитьОбласть("Перенос|Отчет");
		ОбластьСтрокаВалШирокаяОтчет        = Макет.ПолучитьОбласть("СтрокаВалШирокая|Отчет");
		ОбластьСтрокаВалОтчет               = Макет.ПолучитьОбласть("СтрокаВал|Отчет");
		ОбластьСтрокаШирокаяОтчет           = Макет.ПолучитьОбласть("СтрокаШирокая|Отчет");
		ОбластьСтрокаОтчет                  = Макет.ПолучитьОбласть("Строка|Отчет");
		ОбластьОборотОтчет                  = Макет.ПолучитьОбласть("Оборот|Отчет");
		ОбластьОборотРубОтчет               = Макет.ПолучитьОбласть("ОборотРуб|Отчет");
		ОбластьОборотВалОтчет               = Макет.ПолучитьОбласть("ОборотВал|Отчет");
		ОбластьКурсоваяРазницаОтчет         = Макет.ПолучитьОбласть("КурсоваяРазница|Отчет");
		ОбластьКурсоваяРазницаПоВалютеОтчет = Макет.ПолучитьОбласть("КурсоваяРазницаПоВалюте|Отчет");
		ОбластьКонечныйОстатокОтчет         = Макет.ПолучитьОбласть("КонечныйОстаток|Отчет");
		
		ЗапросПоИтогам = Новый Запрос;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Кассы.Ссылка КАК Касса
		|ПОМЕСТИТЬ Кассы
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|ГДЕ
		|	Кассы.Владелец = &Организация
		|	И Кассы.КассоваяКнига = &КассоваяКнига
		|;
		|////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	СУММА(ДенежныеСредстваНаличныеОстатки.СуммаРеглОстаток) КАК СуммаНачальныйОстатокДт,
		|	СУММА(ВЫБОР КОГДА ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств = &ВалютаРеглУчета ТОГДА
		|		0
		|	ИНАЧЕ
		|		ДенежныеСредстваНаличныеОстатки.СуммаОстаток
		|	КОНЕЦ) КАК ВалютнаяСуммаНачальныйОстатокДт
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные.Остатки(
		|		&ДатаНач,
		|		Организация = &Организация
		|			И Касса В (ВЫБРАТЬ Кассы.Касса ИЗ Кассы)) КАК ДенежныеСредстваНаличныеОстатки
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств
		|УПОРЯДОЧИТЬ ПО
		|	Валюта
		|АВТОУПОРЯДОЧИВАНИЕ
		|;
		|////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	СУММА(ДенежныеСредстваНаличныеОстатки.СуммаРеглОстаток) КАК СуммаОстаток,
		|	СУММА(ВЫБОР КОГДА ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств = &ВалютаРеглУчета ТОГДА
		|		0
		|	ИНАЧЕ
		|		ДенежныеСредстваНаличныеОстатки.СуммаОстаток
		|	КОНЕЦ) КАК ВалютнаяСуммаОстаток
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные.Остатки(
		|		&ГраницаКон,
		|		Организация = &Организация
		|			И Касса В (ВЫБРАТЬ Кассы.Касса ИЗ Кассы)) КАК ДенежныеСредстваНаличныеОстатки
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредстваНаличныеОстатки.Касса.ВалютаДенежныхСредств
		|УПОРЯДОЧИТЬ ПО
		|	Валюта
		|АВТОУПОРЯДОЧИВАНИЕ
		|;
		|////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ЕСТЬNULL(СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ДенежныеСредства.Сумма
		|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			-ДенежныеСредства.Сумма
		|		КОНЕЦ
		|	), 0) КАК СуммаИнвентаризации,
		|	ЕСТЬNULL(СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ДенежныеСредства.СуммаРегл
		|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			-ДенежныеСредства.СуммаРегл
		|		КОНЕЦ
		|	), 0) КАК СуммаИнвентаризацииРегл
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	И Организация = &Организация
		|	И Касса В (ВЫБРАТЬ Кассы.Касса ИЗ Кассы)
		|	И ДенежныеСредства.ХозяйственнаяОперация В
		|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств
		|";
		
		ЗапросПоИтогам.Текст = ТекстЗапроса;
		
		ЗапросПоИтогам.УстановитьПараметр("ДатаНач", ДатаНач);
		ЗапросПоИтогам.УстановитьПараметр("ДатаКон", ДатаКон);
		ЗапросПоИтогам.УстановитьПараметр("ГраницаКон", ГраницаКон);
		ЗапросПоИтогам.УстановитьПараметр("Организация", Организация);
		ЗапросПоИтогам.УстановитьПараметр("КассоваяКнига", КассоваяКнига);
		ЗапросПоИтогам.УстановитьПараметр("ВалютаРеглУчета", ВалютаРегламентированногоУчета);
		
		МассивРезультатов = ЗапросПоИтогам.ВыполнитьПакет();
		РезультатЗапросаПоИтогамНаНачало = МассивРезультатов[1];
		РезультатЗапросаПоИтогам = МассивРезультатов[2];
		РезультатЗапросаПоИнвентаризации = МассивРезультатов[3];
		
		ЗапросПоКурсовымРазницам = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств.НаименованиеПолное КАК ВалютаНаименованиеПолное,
		|	СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ДенежныеСредства.СуммаРегл
		|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			-ДенежныеСредства.СуммаРегл
		|		КОНЕЦ
		|	) КАК СуммаКурсовойРазницы
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	И ДенежныеСредства.Организация = &Организация
		|	И ДенежныеСредства.Касса.КассоваяКнига = &КассоваяКнига
		|	И ДенежныеСредства.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаДенежныхСредств)
		|	И ДенежныеСредства.СуммаРегл <> 0
		|	
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств
		|
		|УПОРЯДОЧИТЬ ПО
		|	Валюта
		|ИТОГИ
		|	СУММА(СуммаКурсовойРазницы)
		|ПО
		|	ОБЩИЕ,
		|	Валюта
		|АВТОУПОРЯДОЧИВАНИЕ";

		ЗапросПоКурсовымРазницам.Текст = ТекстЗапроса;
		
		ЗапросПоКурсовымРазницам.УстановитьПараметр("ДатаНач",ДатаНач);
		ЗапросПоКурсовымРазницам.УстановитьПараметр("ДатаКон", ДатаКон);
		ЗапросПоКурсовымРазницам.УстановитьПараметр("Организация",Организация);
		ЗапросПоКурсовымРазницам.УстановитьПараметр("КассоваяКнига", КассоваяКнига);
		РезультатЗапросаПоКурсовымРазницам = ЗапросПоКурсовымРазницам.Выполнить();
		
		ДатаНач = НачалоДня(ВыборкаПоДокументамКассоваяКнига.Дата); 
		
		ЗапросПоДокументам = Новый Запрос("
		|ВЫБРАТЬ
		|	КассоваяКнигаДокументы.Документ КАК Документ,
		|	НАЧАЛОПЕРИОДА(КассоваяКнигаДокументы.Документ.Дата, ДЕНЬ) КАК День,
		|	КассоваяКнигаДокументы.Документ.Дата КАК ДатаДок,
		|	КассоваяКнигаДокументы.Документ.Номер КАК НомерДок,
		|	КассоваяКнигаДокументы.Документ.Валюта КАК Валюта,
		|	ПОДСТРОКА(КассоваяКнигаДокументы.Документ.Основание, 1, 200) КАК Основание,
		|	ВЫБОР
		|		КОГДА КассоваяКнигаДокументы.Документ ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА КассоваяКнигаДокументы.Документ.ПринятоОт
		|		ИНАЧЕ КассоваяКнигаДокументы.Документ.Выдать
		|	КОНЕЦ КАК ТекстДок,
		|	ЕСТЬNULL(КассоваяКнигаДокументы.Приход, 0) КАК Приход,
		|	ЕСТЬNULL(КассоваяКнигаДокументы.Расход, 0) КАК Расход,
		|	КассоваяКнигаДокументы.КорреспондирующийСчет КАК Счет,
		|	КассоваяКнигаДокументы.НомерЛиста КАК НомерЛиста,
		|	КассоваяКнигаДокументы.НомерСтроки КАК НомерСтроки,
		|	ДанныеДокумента.ТипЛиста КАК ТипЛиста
		|ИЗ
		|	Документ.ЛистКассовойКниги КАК ДанныеДокумента
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ЛистКассовойКниги.КассовыеОрдера КАК КассоваяКнигаДокументы
		|	ПО
		|		ДанныеДокумента.Ссылка = КассоваяКнигаДокументы.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ДанныеДокумента.Организация = &Организация
		|	И ДанныеДокумента.Ссылка = &ЛистКассовойКниги
		|	И ДанныеДокумента.Проведен
		|	И ТИПЗНАЧЕНИЯ(КассоваяКнигаДокументы.Документ) В (ТИП(Документ.ПриходныйКассовыйОрдер), ТИП(Документ.РасходныйКассовыйОрдер))
		|
		|УПОРЯДОЧИТЬ ПО
		|	День,
		|	НомерЛиста,
		|	НомерСтроки
		|ИТОГИ
		|	СУММА(Приход),
		|	СУММА(Расход),
		|	МИНИМУМ(НомерЛиста)
		|ПО
		|	День,
		|	НомерСтроки,
		|	Документ,
		|	Счет
		|");
		ЗапросПоДокументам.УстановитьПараметр("ДатаНач", ДатаНач);
		ЗапросПоДокументам.УстановитьПараметр("ДатаКон", ДатаКон);
		ЗапросПоДокументам.УстановитьПараметр("Организация", Организация);
		ЗапросПоДокументам.УстановитьПараметр("ЛистКассовойКниги", ВыборкаПоДокументамКассоваяКнига.Ссылка);
		РезультатЗапросаПоДокументам = ЗапросПоДокументам.Выполнить();
		
		//++ НЕ УТ
		ЗапросПроводок = Новый Запрос;
		ЗапросПроводок.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КассовыеОрдера.Документ КАК Документ,
		|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(КассовыеОрдера.Документ) = ТИП(Документ.ПриходныйКассовыйОрдер) ТОГДА
		|		ВЫБОР КОГДА Хозрасчетный.СчетКт В ИЕРАРХИИ(
		|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками),
		|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками))
		|		ТОГДА
		|			Хозрасчетный.СчетКт.Родитель.Код
		|		ИНАЧЕ
		|			Хозрасчетный.СчетКт.Код
		|		КОНЕЦ
		|	КОГДА ТИПЗНАЧЕНИЯ(КассовыеОрдера.Документ) = ТИП(Документ.РасходныйКассовыйОрдер) ТОГДА
		|		ВЫБОР КОГДА Хозрасчетный.СчетДт В ИЕРАРХИИ(
		|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками),
		|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками))
		|		ТОГДА
		|			Хозрасчетный.СчетДт.Родитель.Код
		|		ИНАЧЕ
		|			Хозрасчетный.СчетДт.Код
		|		КОНЕЦ
		|	КОНЕЦ КАК Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.ЛистКассовойКниги.КассовыеОрдера КАК КассовыеОрдера
		|	ПО
		|		КассовыеОрдера.Документ = Хозрасчетный.Регистратор
		|	
		|ГДЕ
		|	КассовыеОрдера.Ссылка = &ЛистКассовойКниги
		|	И НЕ Хозрасчетный.СчетКт.Забалансовый
		|УПОРЯДОЧИТЬ ПО
		|	Счет
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтражениеДокументовВРеглУчете.Регистратор КАК Ссылка,
		|	ОтражениеДокументовВРеглУчете.Комментарий КАК Комментарий
		|ИЗ
		|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
		|ГДЕ
		|	ОтражениеДокументовВРеглУчете.Регистратор В (&МассивНеОтраженныхДокументов)
		|";
		
		ЗапросПроводок.УстановитьПараметр("ЛистКассовойКниги", ВыборкаПоДокументамКассоваяКнига.Ссылка);
		
		МассивНеОтраженныхДокументов = Неопределено;
		Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
			ПараметрыПечати.Свойство("ДокументыБезПроводок", МассивНеОтраженныхДокументов);
		КонецЕсли;
		ЗапросПроводок.УстановитьПараметр("МассивНеОтраженныхДокументов", МассивНеОтраженныхДокументов);
		
		Результат = ЗапросПроводок.ВыполнитьПакет();
		ВыборкаСчетовУчета = Результат[0].Выбрать();
		ВыборкаОшибок = Результат[1].Выбрать();
		//-- НЕ УТ
		
		ТаблицаДокументы = РезультатЗапросаПоДокументам.Выгрузить();
		ТаблицаДокументы.Очистить();
		ТаблицаДокументы.Колонки.Добавить("СтрокаСчет");
		ТаблицаДокументы.Колонки.Добавить("Валютный");
		ТаблицаДокументы.Колонки.Добавить("ВидДокумента");
		
		ТипСумма = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();
		
		РабочаяТаблица = Новый ТаблицаЗначений;
		РабочаяТаблица.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
		РабочаяТаблица.Колонки.Добавить("ВалютаНаименованиеПолное");
		РабочаяТаблица.Колонки.Добавить("ВалОстаток",ТипСумма);
		РабочаяТаблица.Колонки.Добавить("Остаток",   ТипСумма);
		РабочаяТаблица.Колонки.Добавить("ВалПриход", ТипСумма);
		РабочаяТаблица.Колонки.Добавить("Приход",    ТипСумма);
		РабочаяТаблица.Колонки.Добавить("ВалРасход", ТипСумма);
		РабочаяТаблица.Колонки.Добавить("Расход",    ТипСумма);
		РабочаяТаблица.Индексы.Добавить("Валюта");
		
		ВыборкаПоВалюте = РезультатЗапросаПоИтогамНаНачало.Выбрать();
		
		Пока ВыборкаПоВалюте.Следующий() Цикл
			Строка = РабочаяТаблица.Добавить();
			Если ВыборкаПоВалюте.Валюта = ВалютаРегламентированногоУчета Тогда 
				Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
			Иначе
				Строка.Валюта = ВыборкаПоВалюте.Валюта;
				Строка.ВалютаНаименованиеПолное = ВыборкаПоВалюте.ВалютаНаименованиеПолное
			КонецЕсли;
			Строка.Остаток    = ВыборкаПоВалюте.СуммаНачальныйОстатокДт;
			Строка.ВалОстаток = ВыборкаПоВалюте.ВалютнаяСуммаНачальныйОстатокДт;
		КонецЦикла;
		
		РабочаяТаблица.Свернуть("Валюта, ВалютаНаименованиеПолное", "ВалОстаток, Остаток, ВалПриход, Приход, ВалРасход, Расход");
		РабочаяТаблица.Сортировать("Валюта");
		
		ТаблицаОстатков = Новый ТаблицаЗначений;
		ТаблицаОстатков.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
		ТаблицаОстатков.Колонки.Добавить("ВалютаНаименованиеПолное");
		ТаблицаОстатков.Колонки.Добавить("ВалОстаток",ТипСумма);
		ТаблицаОстатков.Колонки.Добавить("Остаток",   ТипСумма);
		ТаблицаОстатков.Индексы.Добавить("Валюта");
		
		Выборка = РезультатЗапросаПоИтогам.Выбрать();
		ВыборкаИнвентаризации = РезультатЗапросаПоИнвентаризации.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Строка = ТаблицаОстатков.Добавить();
			Если Выборка.Валюта = ВалютаРегламентированногоУчета Тогда 
				Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
			Иначе
				Строка.Валюта = Выборка.Валюта;
				Строка.ВалютаНаименованиеПолное = Выборка.ВалютаНаименованиеПолное;
			КонецЕсли;
			
			Строка.Остаток    = Выборка.СуммаОстаток;
			Строка.ВалОстаток = Выборка.ВалютнаяСуммаОстаток;
			
			Если ВыборкаИнвентаризации.НайтиСледующий(Выборка.Валюта) Тогда
				Строка.Остаток = Строка.Остаток - ВыборкаИнвентаризации.СуммаИнвентаризацииРегл;
				Строка.ВалОстаток = Строка.ВалОстаток - ВыборкаИнвентаризации.СуммаИнвентаризации;
				ВыборкаИнвентаризации.Сбросить();
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаОстатков.Свернуть("Валюта, ВалютаНаименованиеПолное", "ВалОстаток, Остаток");
		ТаблицаОстатков.Сортировать("Валюта");
		
		ВыборкаДокументовПоДням = РезультатЗапросаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
		
		ВыборкаДокументовПоДням.Следующий();
		ПоДокументам = Истина;
		
		ВывестиПодвал = Ложь;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, КонецДня(ДатаНач));
		
		ТипПКО = Тип("ДокументСсылка.ПриходныйКассовыйОрдер");
		ТипРКО = Тип("ДокументСсылка.РасходныйКассовыйОрдер");
		
		Пока ПоДокументам Цикл
			
			ДатаЛиста = ДатаНач;
			
			КоличествоПриходныхДокументов = 0;
			КоличествоРасходныхДокументов = 0;
			
			СчетКурсовыхРазниц = "91";
			ДатаДействияПриказа373П = Дата('20500101');		// fix Suetin 04.07.2019 16:58:44ДатаДействияПриказа373П = Дата('20120101');
			
			Остаток = РабочаяТаблица.Итог("Остаток");
			Если ДатаЛиста >= ДатаНач Тогда
				
				Если ДатаЛиста < ДатаДействияПриказа373П Тогда
				
					ЗаголовокЛиста = НСтр("ru = 'КАССА за';
											|en = 'CASH for'") + " " + Формат(ДатаЛиста, "ДЛФ=D");
					ОбластьВкладнойЛистОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, 
						Макет, ОбластьВкладнойЛистОтчет, ВыборкаПоДокументамКассоваяКнига.Ссылка);
					
					ТабличныйДокумент.Вывести(ОбластьВкладнойЛистОтчет);
					
					ОбластьОтчетКассираОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ТабличныйДокумент.Присоединить(ОбластьОтчетКассираОтчет);
					
					// Номер первого листа документа "Кассовая книга"
					ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста = "Лист " + ВыборкаДокументовПоДням.НомерЛиста;
					
				Иначе
					
					ЗаголовокЛиста = НСтр("ru = 'КАССА за';
											|en = 'CASH for'") + " " + Формат(ДатаЛиста, "ДЛФ=DD");
					ТекстНомерЛиста = НСтр("ru = 'Лист';
											|en = 'Sheet'") + " " + ВыборкаДокументовПоДням.НомерЛиста;
					
					ОбластьВкладнойЛист373ПОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ОбластьВкладнойЛист373ПОтчет.Параметры.ТекстНомерЛиста = ТекстНомерЛиста;
					ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, 
						Макет, ОбластьВкладнойЛист373ПОтчет, ВыборкаПоДокументамКассоваяКнига.Ссылка);
						
					ТабличныйДокумент.Вывести(ОбластьВкладнойЛист373ПОтчет);
					
					ОбластьОтчетКассира373ПОтчет.Параметры.ЗаголовокЛиста = ЗаголовокЛиста;
					ОбластьОтчетКассира373ПОтчет.Параметры.ТекстНомерЛиста = ТекстНомерЛиста;
					ТабличныйДокумент.Присоединить(ОбластьОтчетКассира373ПОтчет);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьШапкаОтчет);
				ТабличныйДокумент.Присоединить(ОбластьШапкаОтчет);
				
				ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало = Остаток;
				ТабличныйДокумент.Вывести(ОбластьОстатокНаНДОтчет);
				ТабличныйДокумент.Присоединить(ОбластьОстатокНаНДОтчет);
				
			КонецЕсли;
			
	//		Высота каждой строки = 13 пунктов
	//		На стандартную страницу помещается 59 строк.
	
	//		Высоты секций в строках:
	//		Шапка = 5 стр
	//		ВкладнойЛист = 3 стр
	//		ОтчетКассира = 3 стр
	//		ОстатокНаНачало = 1 стр
	//		ВТомЧисле = 1 стр
	//		Остаток = 1 стр
	//		ВалОстаток = 2 стр
	//		КурсовыеРазницы = 2 стр
	//		КурсовыеРазницыПоВалюте = 1 стр
	//		Строка = 2 стр
	//		СтрокаШирокая = 4 стр
	//		СтрокаВал = 2 стр
	//		СтрокаВалШирокая = 4 стр
	//		Перенос = 1 стр
	//		Оборот = 1 стр
	//		ОборотРуб = 1 стр
	//		ОборотВал = 2 стр
	//		КурсоваяРазница = 1 стр
	//		КурсоваяРазницаПоВалюте = 1 стр
	//		КонечныйОстаток = 1 стр
	//		Подвал = 11 стр
	//		ЛистовЗаМесяц = 1 стр
	//		ЛистовЗаГод = 1 стр.
	
	
			Если (ДатаЛиста >= ДатаНач) И (Остаток > 0) Тогда
				ТабличныйДокумент.Вывести(ОбластьВТомЧислеОтчет);
				ТабличныйДокумент.Присоединить(ОбластьВТомЧислеОтчет);
			КонецЕсли;
			
			Для Каждого Строка Из РабочаяТаблица Цикл
		
				Валюта     = Строка.Валюта;
				РубОстаток = Строка.Остаток;
				ВалОстаток = Строка.ВалОстаток;
				ВалютаНаименованиеПолное = Строка.ВалютаНаименованиеПолное;
			
				Если (Строка.Валюта = ВалютаРегламентированногоУчета) ИЛИ
					(Строка.Валюта = Справочники.Валюты.ПустаяСсылка())Тогда
			
					Если ДатаЛиста >= ДатаНач Тогда
				
						ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = НСтр("ru = 'национальная валюта (';
																			|en = 'functional currency ('")
							+ ВалютаРеглУчетаНаименованиеПолное + "):";
						ОбластьОстатокОтчет.Параметры.РеглОстаток     = РубОстаток;
				
						ТабличныйДокумент.Вывести(ОбластьОстатокОтчет);
						ТабличныйДокумент.Присоединить(ОбластьОстатокОтчет);
						
					КонецЕсли;
				Иначе
					Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
				
						Если ДатаЛиста >= ДатаНач Тогда
					
							ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета = НСтр("ru = 'иностранная валюта (';
																					|en = 'foreign currency ('")
								+ ВалютаНаименованиеПолное + "):";
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл = РубОстаток;
							ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал  = Формат(ВалОстаток,"ЧДЦ=2; ЧРД==")+" "
								+ Строка(Валюта.Наименование);
					
							ТабличныйДокумент.Вывести(ОбластьВалОстатокОтчет);
							ТабличныйДокумент.Присоединить(ОбластьВалОстатокОтчет);
					
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаДокументы.Очистить();
			Валюты = Новый СписокЗначений;
			
			Если ВыборкаДокументовПоДням.День = ДатаЛиста Тогда
				
				ВыборкаНомеровСтрок = ВыборкаДокументовПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерСтроки");
				
				Пока ВыборкаНомеровСтрок.Следующий() Цикл
				
					ВыборкаДокументов = ВыборкаНомеровСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
					
					Пока ВыборкаДокументов.Следующий() Цикл
						
						НоваяСтрока = ТаблицаДокументы.Добавить();
						НоваяСтрока.ВидДокумента = ?(ТипЗнч(ВыборкаДокументов.Документ) = ТипПКО, "ПриходныйОрдер", "РасходныйОрдер");
						НоваяСтрока.Документ     = ВыборкаДокументов.Документ;
						НоваяСтрока.ДатаДок      = ВыборкаДокументов.ДатаДок;
						НоваяСтрока.День         = ВыборкаДокументов.День;
						НоваяСтрока.НомерДок     = ВыборкаДокументов.НомерДок;
						НоваяСтрока.Валюта       = ВыборкаДокументов.Валюта;
						НоваяСтрока.Приход       = ВыборкаДокументов.Приход;
						НоваяСтрока.Расход       = ВыборкаДокументов.Расход;
						НоваяСтрока.Основание    = ВыборкаДокументов.Основание;
						НоваяСтрока.ТекстДок     = ВыборкаДокументов.ТекстДок;
						НоваяСтрока.НомерЛиста   = ВыборкаДокументов.НомерЛиста;
						
						НоваяСтрока.Валютный = ВыборкаДокументов.Валюта <> ВалютаРегламентированногоУчета;
						Если НоваяСтрока.Валютный И Валюты.НайтиПоЗначению(ВыборкаДокументов.Валюта) = Неопределено Тогда
							Валюты.Добавить(ВыборкаДокументов.Валюта);
						КонецЕсли;
						
						ВыборкаСчетов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Счет");
						СписокСчетов  = Новый ТаблицаЗначений;
						СписокСчетов.Колонки.Добавить("Счет");
						Пока ВыборкаСчетов.Следующий() Цикл
							
							СтрокаТаблицыСчетов      = СписокСчетов.Добавить();
							СтрокаТаблицыСчетов.Счет = ВыборкаСчетов.Счет;
							
						КонецЦикла;
						
						СписокСчетов.Свернуть("Счет");
						
						СтрокаСчет = "";
						Для Каждого СтрокаТаблицыСчетов Из СписокСчетов Цикл
							СтрокаСчет = СтрокаСчет + СтрокаТаблицыСчетов.Счет + Символы.ПС;
						КонецЦикла;
						
						//++ НЕ УТ
						СтрокаСчет = "";
						СтруктураПоиска = Новый Структура("Документ", ВыборкаДокументов.Документ);
						Пока ВыборкаСчетовУчета.НайтиСледующий(СтруктураПоиска) Цикл
							СтрокаСчет = СтрокаСчет + ВыборкаСчетовУчета.Счет + Символы.ПС;
						КонецЦикла;
						ВыборкаСчетовУчета.Сбросить();
						//-- НЕ УТ
						
						НоваяСтрока.СтрокаСчет = СтрокаСчет;
						
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			СумПриход    = 0;
			СумРасход    = 0;
			ПерваяСтрока = 1;
			
			
			// Для простоты настройки печатной формы примем следующие соглашения:
			//	-	высота строк в таблице печатной формы задана жестко,
			//		тогда известно, сколько строк помещается на странице;
			// СтрокНаСтранице = 58;
			//	-	высота шапки и подвала задана жестко и кратна высоте строк таблицы,
			//		тогда можно указать, сколько строк занимают шапка и подвал
			//		в пересчете на строки таблицы;
			//	-	Количество строк шапки определено при выводе валюты в шапку;
			//	-	Количество строк подвала определим позже по количеству валют;
			//	-	для нормальной работы алгоритма необходимо, чтобы шапка и подвал
			//		могли поместиться на одной странице + хотя бы одна строка таблицы:
			//		СтрокНаСтранице >= СтрокШапки + СтрокПодвала + 1
			//	-	если подвал не помещается на странице, он переносится на другую
			//		страницу с последней строкой; исключение составляет случай,
			//		когда в таблице всего одна строка.
			
			ПредыдущийНомерЛиста = ВыборкаДокументовПоДням.НомерЛиста;
			
			Для Каждого Документ Из ТаблицаДокументы Цикл
				
				Если Документ.ВидДокумента = "ПриходныйОрдер" ИЛИ Документ.ВидДокумента = "РасходныйОрдер" Тогда
					ЕстьВалюта = Документ.Валютный;
				Иначе
					ЕстьВалюта = Ложь;
				КонецЕсли;
				
				Если ЕстьВалюта Тогда
					Валюта          = Документ.Валюта;
					СтруктураКурсов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта,Документ.ДатаДок);
					
					Курс      = СтруктураКурсов.Курс;
					Кратность = СтруктураКурсов.Кратность;
					Кратность = ?(Кратность = 0, 1, Кратность);
				Иначе
					Валюта    = Справочники.Валюты.ПустаяСсылка();
					Курс      = 1;
					Кратность = 1;
				КонецЕсли;
					
				Если Документ.ВидДокумента = "РасходныйОрдер" Тогда
					Клиент = НСтр("ru = 'Выдано';
									|en = 'Issued'") + " " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " 
						+ СокрЛП(Документ.Основание), "");
					КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
					ВалРасход = Документ.Расход;
					Расход    = Окр(?(Документ.Расход=null,0,Документ.Расход)*Курс/Кратность,2,1);
					ВалПриход = 0;
					Приход    = 0;
				Иначе
					Клиент = НСтр("ru = 'Принято от';
									|en = 'Received from'") + " " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " 
						+ СокрЛП(Документ.Основание), "");
					КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
					ВалПриход = Документ.Приход;
					Приход    = Окр(?(Документ.Приход=null,0,Документ.Приход)*Курс/Кратность,2,1);
					ВалРасход = 0;
					Расход    = 0;
				КонецЕсли;
				
				НомерДокПечатнойФормы = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
					Документ.НомерДок,
					Ложь,
					Истина);
				КоррСчет = Документ.СтрокаСчет;
				
				// Начинаем новую страницу
				Если ПредыдущийНомерЛиста <> Документ.НомерЛиста Тогда
					
					ПриходЗаДень = РабочаяТаблица.Итог("Приход");
					РасходЗаДень = РабочаяТаблица.Итог("Расход");
					
					Если ДатаЛиста >= ДатаНач Тогда
						
						ОбластьПереносОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
						ОбластьПереносОтчет.Параметры.РасходЗаДень = РасходЗаДень;
						ТабличныйДокумент.Вывести(ОбластьПереносОтчет);
						ТабличныйДокумент.Присоединить(ОбластьПереносОтчет);
						
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста = НСтр("ru = 'Лист';
																			|en = 'Sheet'") + " " + Документ.НомерЛиста;
						ТабличныйДокумент.Вывести(ОбластьШапкаОтчет);
						ТабличныйДокумент.Присоединить(ОбластьШапкаОтчет);
						
					КонецЕсли;
					
					ПредыдущийНомерЛиста = Документ.НомерЛиста;
					
				КонецЕсли;
				
				Если ДатаЛиста >= ДатаНач Тогда
					Если ЕстьВалюта Тогда
						Если ВыводитьОснования Тогда
							
							ОбластьСтрокаВалШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Расход     = Расход;
							
							Если Число(ВалПриход) > 0 Тогда 
								ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧДЦ=2; ЧРД==")+" "
									+ Строка(Валюта.Наименование);
							Иначе
								ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалПриход = "";
							КонецЕсли;
							
							Если Число(ВалРасход) > 0 Тогда
								ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧДЦ=2; ЧРД==")+" "
									+ Строка(Валюта.Наименование);
							Иначе
								ОбластьСтрокаВалШирокаяОтчет.Параметры.ВалРасход = "";
							КонецЕсли;
							
							ОбластьСтрокаВалШирокаяОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаВалШирокаяОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаВалШирокаяОтчет);
							
						Иначе
							
							ОбластьСтрокаВалОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаВалОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаВалОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаВалОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаВалОтчет.Параметры.Расход     = Расход;
							
							Если Число(ВалПриход) > 0 Тогда 
								ОбластьСтрокаВалОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧДЦ=2; ЧРД==")+" "
									+ Строка(Валюта.Наименование);
							Иначе
								ОбластьСтрокаВалОтчет.Параметры.ВалПриход = "";
							КонецЕсли;
							
							Если Число(ВалРасход) > 0 Тогда
								ОбластьСтрокаВалОтчет.Параметры.ВалРасход  = Формат(ВалРасход,"ЧДЦ=2; ЧРД==")+" "
									+ Строка(Валюта.Наименование);
							Иначе
								ОбластьСтрокаВалОтчет.Параметры.ВалРасход = "";
							КонецЕсли;
							
							ОбластьСтрокаВалОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаВалОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаВалОтчет);
							
						КонецЕсли;
						
					Иначе
						Если ВыводитьОснования Тогда
							
							ОбластьСтрокаШирокаяОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаШирокаяОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаШирокаяОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаШирокаяОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаШирокаяОтчет.Параметры.Расход     = Расход;
							ОбластьСтрокаШирокаяОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаШирокаяОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаШирокаяОтчет);
							
						Иначе
							
							ОбластьСтрокаОтчет.Параметры.НомерДокПечатнойФормы = НомерДокПечатнойФормы;
							ОбластьСтрокаОтчет.Параметры.Контрагент = Клиент;
							ОбластьСтрокаОтчет.Параметры.КоррСчет   = КоррСчет;
							ОбластьСтрокаОтчет.Параметры.Приход     = Приход;
							ОбластьСтрокаОтчет.Параметры.Расход     = Расход;
							ОбластьСтрокаОтчет.Параметры.Документ   = Документ.Документ;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаОтчет);
							ТабличныйДокумент.Присоединить(ОбластьСтрокаОтчет);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход);
				
			КонецЦикла;
			
			ВыборкаПоКурсовымРазницам = РезультатЗапросаПоКурсовымРазницам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
			Пока ВыборкаПоКурсовымРазницам.Следующий() Цикл
				
				Если (ВыборкаПоКурсовымРазницам.Валюта = Справочники.Валюты.ПустаяСсылка())
					ИЛИ ПустаяСтрока(ВыборкаПоКурсовымРазницам.Валюта) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ПерваяСтрока = 1 Тогда
					ТабличныйДокумент.Вывести(ОбластьКурсовыеРазницыОтчет);
					ТабличныйДокумент.Присоединить(ОбластьКурсовыеРазницыОтчет);
					ПерваяСтрока = 0;
				КонецЕсли;
				ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.НадписьКРВалюта = НСтр("ru = 'по';
																					|en = 'to'") + " " + ВыборкаПоКурсовымРазницам.Валюта;
				ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.КоррСчет = "";
				Если ВыборкаПоКурсовымРазницам.СуммаКурсовойРазницы > 0 Тогда
					Приход = ВыборкаПоКурсовымРазницам.СуммаКурсовойРазницы;
					Расход = 0;
				Иначе
					Приход = 0;
					Расход = -ВыборкаПоКурсовымРазницам.СуммаКурсовойРазницы;
				КонецЕсли;
				
				ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Приход = Приход;
				ОбластьКурсовыеРазницыПоВалютеОтчет.Параметры.Расход = Расход;
				
				
				ТабличныйДокумент.Вывести(ОбластьКурсовыеРазницыПоВалютеОтчет);
				ТабличныйДокумент.Присоединить(ОбластьКурсовыеРазницыПоВалютеОтчет);
				
			КонецЦикла;
			
			РабочаяТаблица.Свернуть("Валюта, ВалютаНаименованиеПолное", "ВалОстаток, Остаток, ВалПриход, Приход, ВалРасход, Расход");
			
			ПриходЗаДень = РабочаяТаблица.Итог("Приход");
			РасходЗаДень = РабочаяТаблица.Итог("Расход");
			Если ДатаЛиста >= ДатаНач Тогда
				
				ОбластьОборотОтчет.Параметры.ПриходЗаДень = ПриходЗаДень;
				ОбластьОборотОтчет.Параметры.РасходЗаДень = РасходЗаДень;
				
				ТабличныйДокумент.Вывести(ОбластьОборотОтчет);
				ТабличныйДокумент.Присоединить(ОбластьОборотОтчет);
				
				Для Каждого Строка Из РабочаяТаблица Цикл
					Валюта = Строка.Валюта;
					ВалютаНаименованиеПолное = Строка.ВалютаНаименованиеПолное;
					ВалПриходЗаДень = Строка.ВалПриход;
					РубПриходЗаДень = Строка.Приход;
					ВалРасходЗаДень = Строка.ВалРасход;
					РубРасходЗаДень = Строка.Расход;
					Если (Строка.Валюта = ВалютаРегламентированногоУчета) ИЛИ
						(Строка.Валюта = Справочники.Валюты.ПустаяСсылка()) Тогда
						
						ОбластьОборотРубОтчет.Параметры.РеглПриходЗаДень = РубПриходЗаДень;
						ОбластьОборотРубОтчет.Параметры.РеглРасходЗаДень = РубРасходЗаДень;
						ОбластьОборотРубОтчет.Параметры.ВалютаРеглУчета  = 
							НСтр("ru = 'национальная валюта (';
								|en = 'functional currency ('") + ВалютаРеглУчетаНаименованиеПолное + "):";
						
						ТабличныйДокумент.Вывести(ОбластьОборотРубОтчет);
						ТабличныйДокумент.Присоединить(ОбластьОборотРубОтчет);
					Иначе
						Если (ВалПриходЗаДень <> 0) Или (РубПриходЗаДень <> 0) Или 
							(ВалРасходЗаДень <> 0) Или (РубРасходЗаДень <> 0) Тогда
							
							ОбластьОборотВалОтчет.Параметры.ВалютаВалУчета      = НСтр("ru = 'иностранная валюта (';
																						|en = 'foreign currency ('") + 
								ВалютаНаименованиеПолное + "):";
							ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньРегл = РубПриходЗаДень;
							ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньРегл = РубРасходЗаДень;
							
							Если Число(ВалПриход) > 0 Тогда 
								ОбластьСтрокаВалОтчет.Параметры.ВалПриход  = Формат(ВалПриход,"ЧДЦ=2; ЧРД==")+" "
									+ Строка(Валюта.Наименование);
							Иначе
								ОбластьСтрокаВалОтчет.Параметры.ВалПриход = "";
							КонецЕсли;
							
							Если Число(ВалПриходЗаДень) > 0 Тогда
								ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньВал  = Формат(ВалПриходЗаДень,"ЧДЦ=2; ЧРД==")+" "+Валюта;
							Иначе
								ОбластьОборотВалОтчет.Параметры.ВалПриходЗаДеньВал = "";
							КонецЕсли;
							
							Если Число(ВалРасходЗаДень) > 0 Тогда
								ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньВал  = Формат(ВалРасходЗаДень,"ЧДЦ=2; ЧРД==")+" "+Валюта;
							Иначе
								ОбластьОборотВалОтчет.Параметры.ВалРасходЗаДеньВал = "";
							КонецЕсли;
							
							ТабличныйДокумент.Вывести(ОбластьОборотВалОтчет);
							ТабличныйДокумент.Присоединить(ОбластьОборотВалОтчет);
							
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ПерваяСтрока = Истина;
			Остаток = ТаблицаОстатков.Итог("Остаток");
			
			Если ДатаЛиста >= ДатаНач Тогда
				
				ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = Остаток;
				
				ТабличныйДокумент.Вывести(ОбластьКонечныйОстатокОтчет);
				ТабличныйДокумент.Присоединить(ОбластьКонечныйОстатокОтчет);
				
				Если Остаток > 0 Тогда
					ТабличныйДокумент.Вывести(ОбластьВТомЧислеОтчет);
					ТабличныйДокумент.Присоединить(ОбластьВТомЧислеОтчет);
				КонецЕсли;
					
				Для Каждого Строка Из ТаблицаОстатков Цикл
					
					Валюта     = Строка.Валюта;
					РубОстаток = Строка.Остаток;
					ВалОстаток = Строка.ВалОстаток;
					ВалютаНаименованиеПолное = Строка.ВалютаНаименованиеПолное;
					
					Если (Строка.Валюта = ВалютаРегламентированногоУчета) ИЛИ
						(Строка.Валюта = Справочники.Валюты.ПустаяСсылка())Тогда
						
						Если ДатаЛиста >= ДатаНач Тогда
							
							ОбластьОстатокОтчет.Параметры.ВалютаРеглУчета = НСтр("ru = 'национальная валюта (';
																				|en = 'functional currency ('")+
								ВалютаРеглУчетаНаименованиеПолное + "):";
							ОбластьОстатокОтчет.Параметры.РеглОстаток     = РубОстаток;
							
							ТабличныйДокумент.Вывести(ОбластьОстатокОтчет);
							ТабличныйДокумент.Присоединить(ОбластьОстатокОтчет);
							
						КонецЕсли;
						
					Иначе
						
						Если (РубОстаток <> 0) Или (ВалОстаток <> 0) Тогда
							
							Если ДатаЛиста >= ДатаНач Тогда
								
								ОбластьВалОстатокОтчет.Параметры.ВалютаВалУчета = НСтр("ru = 'иностранная валюта (';
																						|en = 'foreign currency ('")+
									ВалютаНаименованиеПолное + "):";
								ОбластьВалОстатокОтчет.Параметры.ВалОстатокРегл = РубОстаток;
								ОбластьВалОстатокОтчет.Параметры.ВалОстатокВал  = Формат(ВалОстаток,"ЧДЦ=2; ЧРД==")+" "+
									Строка(Валюта.Наименование);
								
								ТабличныйДокумент.Вывести(ОбластьВалОстатокОтчет);
								ТабличныйДокумент.Присоединить(ОбластьВалОстатокОтчет);
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;

				ОбластьПодвалОтчет.Параметры.НадписьКолПриходныхРасходных=?(КоличествоПриходныхДокументов>0, 
				ЧислоПрописью(КоличествоПриходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+ НСтр("ru = 'приходных и';
																								|en = 'receipt and'") + " "+
				?(КоличествоРасходныхДокументов>0,ЧислоПрописью(КоличествоРасходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")
				+ НСтр("ru = 'расходных получил.';
						|en = 'debit received.'");
				
				ОбластьПодвалОтчет.Параметры.ГлБухгалтер = ВыборкаПоДокументамКассоваяКнига.ГлавныйБухгалтер;
				ОбластьПодвалОтчет.Параметры.Кассир = 
					ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(
						ВыборкаПоДокументамКассоваяКнига.Ответственный,
						ВыборкаПоДокументамКассоваяКнига.Дата);
				
				ТабличныйДокумент.Вывести(ОбластьПодвалОтчет);
				ТабличныйДокумент.Присоединить(ОбластьПодвалОтчет);
			КонецЕсли;
			
			ПоДокументам = ВыборкаДокументовПоДням.Следующий();
			
			ВывестиПодвал = Истина;
			
		КонецЦикла;
		
		Если ВывестиПодвал Тогда
			
			Если ВыборкаПоДокументамКассоваяКнига.ТипЛиста = Перечисления.ТипыЛистовКассовойКниги.ПоследнийВМесяце Тогда
				
				КоличествоЛистов = ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(
					ВыборкаПоДокументамКассоваяКнига.Организация, ВыборкаПоДокументамКассоваяКнига.КассоваяКнига,
					НачалоМесяца(ВыборкаПоДокументамКассоваяКнига.Дата),
					КонецМесяца(ВыборкаПоДокументамКассоваяКнига.Дата));
				
				ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц = НСтр("ru = 'Количество листов кассовой книги за месяц:';
																				|en = 'Number of cash book sheets over the month:'") + " " +
					КоличествоЛистов;
				ТабличныйДокумент.Вывести(ОбластьЛистовЗаМесяцОтчет);
				ТабличныйДокумент.Присоединить(ОбластьЛистовЗаМесяцОтчет);
				
			КонецЕсли;
			
			Если ВыборкаПоДокументамКассоваяКнига.ТипЛиста = Перечисления.ТипыЛистовКассовойКниги.ПоследнийВГоду Тогда
				
				КоличествоЛистов = ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(
					ВыборкаПоДокументамКассоваяКнига.Организация, ВыборкаПоДокументамКассоваяКнига.КассоваяКнига,
					НачалоГода(ВыборкаПоДокументамКассоваяКнига.Дата),
					КонецГода(ВыборкаПоДокументамКассоваяКнига.Дата));
				
				ОбластьЛистовЗаГодОтчет.Параметры.НадписьЛистовЗаГод = НСтр("ru = 'Количество листов кассовой книги за год:';
																			|en = 'Number of cash book sheets for the year:'") + " " + 
					КоличествоЛистов;
				ТабличныйДокумент.Вывести(ОбластьЛистовЗаГодОтчет);
				ТабличныйДокумент.Присоединить(ОбластьЛистовЗаГодОтчет);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ВыборкаПоДокументамКассоваяКнига.Ссылка);
		
	КонецЦикла; // Цикл по выделенным документам
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	Возврат ТабличныйДокумент;
	
	Возврат Результат;
КонецФункции
