//>>fix бесшовка
&НаКлиенте
Процедура ВИЛС_ОбработкаОповещенияПосле(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_ДокументооборотБизнесПроцесс" Тогда
		ПараметрыВозврата = УстановитьСтатусДокумента(этаФорма.ВнешнийОбъект);
		Если Не ПараметрыВозврата = Неопределено Тогда
			 Оповестить("ИзменитьСтатус",ПараметрыВозврата,этаФорма.ВладелецФормы);
			 ИзменитьДоступностьСозданиеЗадачи();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция УстановитьСтатусДокумента(СсылкаНаОбъект)
		
	Попытка
		Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	Исключение
		Возврат Неопределено; // Если нет соединения, вернем статус Ложь 
	КонецПопытки;
	
	Если Прокси = Неопределено Тогда
		Возврат Неопределено; // Если пользователь не авторизован в ДО, вернем Ложь.
	КонецЕсли;
	
	ExternalObject = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	ExternalObject.id = Строка(СсылкаНаОбъект.УникальныйИдентификатор());
	ExternalObject.type = СсылкаНаОбъект.Метаданные().ПолноеИмя();
	ExternalObject.name = Строка(СсылкаНаОбъект);
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetDocumentListRequest");
	Запрос.externalObjects.Добавить(ExternalObject);
	
	Запрос.columnSet.Добавить("status");
	Запрос.columnSet.Добавить("statusApproval");
	Запрос.columnSet.Добавить("statusConfirmation");
	Запрос.columnSet.Добавить("statusRegistration");
	Запрос.columnSet.Добавить("statusConsideration");
	Запрос.columnSet.Добавить("statusPerformance");
	Запрос.columnSet.Добавить("visas");
	Запрос.columnSet.Добавить("files");

	Результат = Прокси.execute(Запрос);
	
	Если ИнтеграцияС1СДокументооборот.ПроверитьТип(Прокси, Результат, "DMError") Тогда 
		Возврат Неопределено; // Произошла ошибка во время выполнения запроса
	КонецЕсли;	
		
	Если Результат.documents.Количество() > 0 Тогда 
		ОбъектВозврата = Результат.documents[0];
	Иначе 
		Возврат Неопределено; // Нужного документа не оказалось
	КонецЕсли;

	ЕстьФайлы = Ложь;
	Если ОбъектВозврата.files.Количество() <> 0 Тогда
		ЕстьФайлы = Истина;
	КонецЕсли;
	
	Согласован = Ложь;
	
	Если  не ОбъектВозврата.statusApproval = Неопределено Тогда
	
		 Согласован = ОбъектВозврата.statusApproval.name = "Согласован";
	
	 КонецЕсли;
	 
	 ПоследнийСогласовавший = Справочники.Пользователи.ПустаяСсылка();
	 Если ОбъектВозврата.visas.Количество() <> 0 Тогда
		 ПоследнийСогласовавший = ВернутьПоследнегоСогласовавшего(ОбъектВозврата.visas);
	 КонецЕсли;

	 //begin fix Клещ А.Н. 21.01.2019  
	 Исполнитель = ВернутьДеревоНаСервере(СсылкаНаОбъект);
	 //end fix Клещ А.Н. 21.01.2019
	 
	Утвержден = Неопределено;
	
	Если  не ОбъектВозврата.statusConfirmation = Неопределено Тогда
		 Утвержден = ?(ОбъектВозврата.statusConfirmation.name = "На утверждении",Неопределено,ОбъектВозврата.statusConfirmation.name = "Утвержден");
	КонецЕсли;
	
	//begin fix Клещ А.Н. 21.01.2019 добавлено  "Исполнитель"
	СтруктураВозврата = Новый Структура("Согласован,Утвержден,КтоРешил,Исполнитель,ЕстьФайлы",Согласован,Утвержден,ПоследнийСогласовавший,Исполнитель,ЕстьФайлы);
	//end fix Клещ А.Н. 21.01.2019
	
	Возврат СтруктураВозврата;
КонецФункции

&НаСервере
Функция ВернутьПоследнегоСогласовавшего(ВизыXDTO)
	
	
	ПредыдущийПользовательСтрокой = "";
	ТекущийПользовательСтрокой = "";
	Результат = "";
	
	Для Каждого ВизаXDTO Из ВизыXDTO Цикл
		
		//Если ВизаXDTO.Установлено("addedBy") Тогда
		//	ТекущийПользовательСтрокой = ВизаXDTO.addedBy.name;
		//КонецЕсли;

		Если ВизаXDTO.Установлено("reviewer") Тогда
			ТекущийПользовательСтрокой = ВизаXDTO.reviewer.name;
		КонецЕсли;
		
		Результат = "";
		Если ВизаXDTO.Установлено("result") Тогда
			Результат = ВизаXDTO.result.name;
			
		КонецЕсли;
		
		Если ПустаяСтрока(Результат) Тогда
			Прервать;
		КонецЕсли;
		ПредыдущийПользовательСтрокой = ТекущийПользовательСтрокой;
	КонецЦикла;
	 Сообщить(ПредыдущийПользовательСтрокой);
	ТекПользователь = Справочники.Пользователи.НайтиПоНаименованию(СокрЛП(ПредыдущийПользовательСтрокой));
	
	Возврат ТекПользователь;
КонецФункции

&НаСервере
Процедура ВИЛС_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	ИзменитьДоступностьСозданиеЗадачи();
КонецПроцедуры

&НаСервере
Процедура ИзменитьДоступностьСозданиеЗадачи()
	
	Если этаФорма.ВнешнийОбъект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена 
		или этаФорма.ВнешнийОбъект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате или не этаФорма.ВнешнийОбъект.Проведен Тогда
		Элементы.ДеревоБизнесПроцессовИЗадачСоздатьБизнесПроцесс.Доступность = Ложь;
	КонецЕсли;	
КонецПроцедуры

//begin fix Клещ А.Н. 21.01.2019  
&НаСервереБезКонтекста
Функция ВернутьДеревоНаСервере(Предмет) 
	УстановитьПривилегированныйРежим(Истина);
	Прокси = ИнтеграцияС1СДокументооборотПовтИсп.ПолучитьПрокси();
	
	Запрос = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetTasksTreeRequest");
	
	Запрос.query = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "DMGetTasksTreeQuery");
	
	Target = ИнтеграцияС1СДокументооборот.СоздатьОбъект(Прокси, "ExternalObject");
	Target.id = Строка(Предмет.УникальныйИдентификатор());
	Target.type = Предмет.Метаданные().ПолноеИмя();
	Target.name = Строка(Предмет);

	Запрос.query.externalTarget.Добавить(Target);
	Если Запрос.query.Свойства().Получить("withExecuted") <> Неопределено Тогда
		Запрос.query.withExecuted = Истина;
	КонецЕсли;
	
	Ответ = Прокси.execute(Запрос);
	ИнтеграцияС1СДокументооборот.ПроверитьВозвратВебСервиса(Прокси, Ответ);
	
	ДеревоБизнесПроцессы = Ответ.businessProcesses;
	Ответственный = "";
	ПостроитьДеревоЗадачИзОтветаВебСервиса(ДеревоБизнесПроцессы,Ответственный);	
	
	ПользовательРоль = Справочники.Пользователи.НайтиПоНаименованию(СокрЛП(Ответственный));
	Если ПользовательРоль = Справочники.Пользователи.ПустаяСсылка() Тогда 
		ПользовательРоль = СокрЛП(Ответственный);
	КонецЕсли;
	
	Возврат ПользовательРоль;
КонецФункции

&НаСервереБезКонтекста
Процедура ПостроитьДеревоЗадачИзОтветаВебСервиса(СтрокиОтвета, Исполнитель)
		
	Для Каждого ОднаСтрокаОтвета Из СтрокиОтвета Цикл
		
		Если Найти(ОднаСтрокаОтвета.objectId.type, "BusinessProcess") > 0
			И Найти(ОднаСтрокаОтвета.objectId.type, "Task") = 0 Тогда
							
			ПостроитьДеревоЗадачИзОтветаВебСервиса(ОднаСтрокаОтвета.tasks,Исполнитель);
			
		ИначеЕсли Найти(ОднаСтрокаОтвета.objectId.type, "Task") > 0 Тогда
			
			Если ЭтоСлужебнаяЗадача(ОднаСтрокаОтвета) Тогда
				
				ПостроитьДеревоЗадачИзОтветаВебСервиса(ОднаСтрокаОтвета.businessProcesses,Исполнитель);
				
			Иначе
				
				
				Если ОднаСтрокаОтвета.performer.Установлено("user") Тогда
					Если ОднаСтрокаОтвета.businessProcessStep = "Согласовать"
						или ОднаСтрокаОтвета.businessProcessStep = "Утвердить" Тогда
						Исполнитель = ОднаСтрокаОтвета.performer.user.name;
					КонецЕсли;
					ИначеЕсли ОднаСтрокаОтвета.performer.Установлено("role") Тогда
					Исполнитель = ОднаСтрокаОтвета.performer.role.name;
					Если ОднаСтрокаОтвета.performer.Установлено("mainAddressingObject") Тогда
						Исполнитель = Исполнитель + ", " 
							+ ОднаСтрокаОтвета.performer.mainAddressingObject.name;
					КонецЕсли;
					Если ОднаСтрокаОтвета.Performer.Установлено("secondaryAddressingObject") Тогда
						Исполнитель = Исполнитель + ", " 
							+ ОднаСтрокаОтвета.performer.secondaryAddressingObject.name;
					КонецЕсли;

				КонецЕсли;
				
				ПостроитьДеревоЗадачИзОтветаВебСервиса(ОднаСтрокаОтвета.businessProcesses,Исполнитель);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоСлужебнаяЗадача(Задача)
	
	Служебная = Ложь;
	
	Если Задача.parentBusinessProcess.objectId.type = "DMComplexBusinessProcess" Тогда 
		Если Задача.businessProcessStep = "Выполнить все действия процесса" Тогда
			Служебная = Истина;
		КонецЕсли;
	ИначеЕсли Задача.parentBusinessProcess.objectId.type = "DMBusinessProcessInternalDocumentProcessing" 
			ИЛИ Задача.parentBusinessProcess.objectId.type = "DMBusinessProcessIncomingDocumentProcessing"
			ИЛИ Задача.parentBusinessProcess.objectId.type = "DMBusinessProcessOutgoingDocumentProcessing" Тогда
		Служебная = Истина;
	КонецЕсли;
	
	Возврат Служебная;
	
КонецФункции
//end fix Клещ А.Н. 21.01.2019

//<<fix бесшовка