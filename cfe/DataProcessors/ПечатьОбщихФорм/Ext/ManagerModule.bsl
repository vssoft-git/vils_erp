#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&Вместо("ЗаполнитьРеквизитыШапкиСчетФактура")
Процедура ВИЛС_ЗаполнитьРеквизитыШапкиСчетФактура(ДанныеПечати, ДанныеОснований, СведенияОПоставщике, ДанныеКонтрагентов, ТабличныйДокумент, ОпцииПечатиСчетаФактуры)
	
	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
	СведенияОГрузоотправителе = СведенияОГрузоотправителе(ДанныеПечати);
	
	ДействующиеПостановления = ОпцииПечатиСчетаФактуры.ДействующиеПостановления;
	
	Макет = ОпцииПечатиСчетаФактуры.Макет;
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	НомераДаты = Новый Структура("Номер, Дата, НомерИсправления, ДатаИсправления, РеквизитыОснований");
	
	НомераДаты.Номер = НомерСчетаФактурыНаПечать(ДанныеПечати.Номер, ДанныеПечати.ИндексПодразделения);
	НомераДаты.Дата = Формат(ДанныеПечати.Дата, "ДЛФ=ДД");
	НомераДаты.НомерИсправления = ?(ДанныеПечати.Исправление, ДанныеПечати.НомерИсправления, "--");
	НомераДаты.ДатаИсправления = ?(ДанныеПечати.Исправление, Формат(ДанныеПечати.ДатаИсправления, "ДЛФ=ДД"), "--");
	
	Если ДанныеПечати.КорректировочныйСчетФактура Тогда
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ДанныеОснований.НайтиСледующий(СтруктураПоиска);
		СтрокиОснований = ДанныеОснований.Выбрать();
		
		РеквизитыОснований = "";
		
		Пока СтрокиОснований.СледующийПоЗначениюПоля("ИсходныйДокумент") Цикл
			
			ТекстИсходнойСФ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru=', № %1 от %2, с учетом исправления № %3 от %4'"),
				НомерСчетаФактурыНаПечать(СтрокиОснований.НомерСчетаФактуры, ДанныеПечати.ИндексПодразделения),
				Формат(СтрокиОснований.ДатаСчетаФактуры, "ДЛФ=ДД; ДП=--"),
				?(ЗначениеЗаполнено(СтрокиОснований.НомерИсправленияСчетаФактуры), СтрокиОснований.НомерИсправленияСчетаФактуры, "--"),
				Формат(СтрокиОснований.ДатаИсправленияСчетаФактуры, "ДЛФ=ДД; ДП=--"));
				
			РеквизитыОснований = РеквизитыОснований + ТекстИсходнойСФ;
			
		КонецЦикла;
		
		Если Не ПустаяСтрока(РеквизитыОснований) Тогда
			РеквизитыОснований = Сред(РеквизитыОснований, 3);
		КонецЕсли;
		НомераДаты.РеквизитыОснований = РеквизитыОснований;
		
	КонецЕсли;
	
	ОбластьМакета.Параметры.Заполнить(НомераДаты);
	
	СтруктураПараметров = Новый Структура;
	
	// Выводим данные о поставщике.
	ДополнительноеПредставление = "";
	Если ДействующиеПостановления.Постановление914 И СведенияОПоставщике.ОфициальноеНаименование <> СведенияОПоставщике.ПолноеНаименование Тогда
		ДополнительноеПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='(%1)'"),
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование"));
	КонецЕсли;
	
	ПредставлениеПоставщика = СокрЛП(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Продавец: %1 %2'"),
		СведенияОПоставщике.ОфициальноеНаименование,
		ДополнительноеПредставление));
		
	АдресПоставщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Адрес: %1'"),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес"));
		
	ИННПоставщика = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='ИНН/КПП продавца: %1%2'"),
		ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН", Ложь),
		?(Не ПустаяСтрока(ДанныеПечати.КПППоставщика), "/" + ДанныеПечати.КПППоставщика, ""));
		
	СтруктураПараметров.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
	СтруктураПараметров.Вставить("АдресПоставщика", АдресПоставщика);
	СтруктураПараметров.Вставить("ИННПоставщика", ИННПоставщика);
	
	Если НЕ ДанныеПечати.КорректировочныйСчетФактура Тогда
		
		// Выводим данные грузоотправителя.
		ТекстГрузоотправителя = "";
		Если ДанныеПечати.ТолькоУслуги 
		 ИЛИ (ДействующиеПостановления.Постановление1137 И ОпцииПечатиСчетаФактуры.СчетФактураНаАванс)
		 ИЛИ ОпцииПечатиСчетаФактуры.СчетФактураНалоговыйАгент Тогда
			ТекстГрузоотправителя = "--";
		ИначеЕсли ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			ТекстГрузоотправителя = НСтр("ru='он же'");
		Иначе
			ТекстГрузоотправителя = ФормированиеПечатныхФорм.ОписаниеОрганизации(
				СведенияОГрузоотправителе, "ПолноеНаименование,ФактическийАдрес");
		КонецЕсли;
		
		ПредставлениеГрузоотправителя = СокрЛП(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Грузоотправитель и его адрес: %1'"),
			ТекстГрузоотправителя));
		
		СтруктураПараметров.Вставить("ПредставлениеГрузоотправителя", ПредставлениеГрузоотправителя);
		
		СтрокаПоДокументу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='К платежно-расчетному документу № %1'"),
			?(ПустаяСтрока(ДанныеПечати.СтрокаПоДокументу),
				НСтр("ru='-- от --'"),
				ДанныеПечати.СтрокаПоДокументу));
		
		СтруктураПараметров.Вставить("ПоДокументу", СтрокаПоДокументу);
		
	КонецЕсли;
	
	ЕстьГрузополучатель = Не ДанныеПечати.КорректировочныйСчетФактура
		И НЕ (ДанныеПечати.ТолькоУслуги
		ИЛИ (ДействующиеПостановления.Постановление1137 И ОпцииПечатиСчетаФактуры.СчетФактураНаАванс)
		ИЛИ ОпцииПечатиСчетаФактуры.СчетФактураНалоговыйАгент);
	
	ПредставлениеПокупателя       = "";
	ПредставлениеАдресаПокупателя = "";
	ПредставлениеИННКПППокупателя = "";
	ПредставлениеГрузополучателя  = "";
	
	ТаблицаКонтрагентов = ТаблицаКонтрагентовСчетаФактуры(ДанныеПечати, ДанныеКонтрагентов);
	
	Для Каждого СтрокаТаблицы Из ТаблицаКонтрагентов Цикл
		
		СведенияОПокупателе = СтрокаТаблицы.СведенияОПокупателе;
		
		ПредставлениеПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1; %2'"),
			ПредставлениеПокупателя,
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование", Ложь));
		
		ПредставлениеАдресаПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1; %2'"),
			ПредставлениеАдресаПокупателя,
			ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь));
			
		ПредставлениеИННПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1; %2%3'"),
			ПредставлениеИННПокупателя,
			СтрокаТаблицы.ИНН,
			?(Не ПустаяСтрока(СтрокаТаблицы.КПП), "/" + СтрокаТаблицы.КПП, ""));
		
		Если ЕстьГрузополучатель Тогда
			СведенияОГрузополучателе = СтрокаТаблицы.СведенияОГрузополучателе;
			ПредставлениеГрузополучателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1; %2'"),
				ПредставлениеГрузополучателя,
				ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ФактическийАдрес", Ложь));
		КонецЕсли;
		
	КонецЦикла;
	
	ПредставлениеПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Покупатель: %1'"),
		Сред(ПредставлениеПокупателя, 3));
		
	ПредставлениеАдресаПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Адрес: %1'"),
		Сред(ПредставлениеАдресаПокупателя, 3));
	
	ПредставлениеИННПокупателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='ИНН/КПП покупателя: %1'"),
		Сред(ПредставлениеИННПокупателя, 3));
	// begin fix Suetin 05.02.2019 3:08:46
	Если ЗначениеЗаполнено(ДанныеПечати.Договор) Тогда	
		ПредставлениеИННПокупателя	 = ПредставлениеИННПокупателя + Символы.ПС + "Основание: " + ДанныеПечати.Договор;
	КонецЕсли;	
	// end fix Suetin 05.02.2019 3:08:53	
	ПредставлениеГрузополучателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Грузополучатель и его адрес: %1'"),
		?(ЕстьГрузополучатель, Сред(ПредставлениеГрузополучателя, 3), "--"));
		
	СтруктураПараметров.Вставить("ПредставлениеПокупателя", ПредставлениеПокупателя);
	СтруктураПараметров.Вставить("АдресПокупателя", ПредставлениеАдресаПокупателя);
	СтруктураПараметров.Вставить("ИННПокупателя", ПредставлениеИННПокупателя);
	Если Не ДанныеПечати.КорректировочныйСчетФактура Тогда
		СтруктураПараметров.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);
	КонецЕсли;
	
	Если ДействующиеПостановления.Постановление1137 И ЗначениеЗаполнено(ДанныеПечати.Валюта) 
		И ОпцииПечатиСчетаФактуры.ПечатьВВалюте Тогда
		
		СтруктураПараметров.Вставить("Валюта", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Валюта: наименование, код %1, %2'"),
			ДанныеПечати.ВалютаНаименованиеПолное,
			ДанныеПечати.ВалютаКод));
			
	ИначеЕсли ДействующиеПостановления.Постановление1137 Тогда
		СтруктураПараметров.Вставить("Валюта", НСтр("ru='Валюта: наименование, код Российский рубль, 643'"));
	КонецЕсли;
	
	СтруктураПараметровИдентификаторГосКонтракта = Новый Структура("ИдентификаторГосКонтракта");
	ЗаполнитьЗначенияСвойств(СтруктураПараметровИдентификаторГосКонтракта, ДанныеПечати);
	Если ДействующиеПостановления.Постановление981 Тогда
		ПредставлениеИдентификаторГосКонтракта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Идентификатор государственного контракта, договора (соглашения) (при наличии): %1'"),
			СокрЛП(СтруктураПараметровИдентификаторГосКонтракта.ИдентификаторГосКонтракта));
	Иначе
		ПредставлениеИдентификаторГосКонтракта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Идентификатор государственного контракта, договора (соглашения): %1'"),
			СокрЛП(СтруктураПараметровИдентификаторГосКонтракта.ИдентификаторГосКонтракта));
	КонецЕсли;
	СтруктураПараметров.Вставить("ИдентификаторГосКонтракта", ПредставлениеИдентификаторГосКонтракта);
	
	Если ОпцииПечатиСчетаФактуры.СчетФактураНалоговыйАгент Тогда
		// для печати подвала берем сведения об организации из сведений о покупателе
		СведенияОПоставщике = СведенияОПокупателе;
	КонецЕсли;
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры
&Вместо("ЗаполнитьРеквизитыШапкиМ15")
Процедура ВИЛС_ЗаполнитьРеквизитыШапкиМ15(ДанныеПечати, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата, ,ДанныеПечати.БанковскийСчетОрганизации);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПредставлениеОрганизации", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации));
	СтруктураПараметров.Вставить("ОрганизацияПоОКПО", СведенияОбОрганизации.КодПоОКПО);
	СтруктураПараметров.Вставить("НомерДокумента", ДанныеПечати.Номер);
	
	ПредставлениеКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата), "ПолноеНаименование,");
	СтруктураПараметров.Вставить("КонтрагентНаименование", ПредставлениеКонтрагента);
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

#КонецЕсли
