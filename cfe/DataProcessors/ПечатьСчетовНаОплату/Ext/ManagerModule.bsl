
&Вместо("ЗаполнитьРеквизитыШапкиСчетаНаОплату")
Процедура ВИЛС_ЗаполнитьРеквизитыШапкиСчетаНаОплату(ДанныеПечати, Макет, ТабличныйДокумент, ТаблицаЭтапыОплаты, ТаблицаТовары)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьСчетовНаОплату.ПФ_MXL_СчетНаОплату");
	
	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
	ФормированиеПечатныхФорм.ВывестиЛоготипВТабличныйДокумент(Макет, ОбластьМакета, "ЗаголовокСчета", ДанныеПечати.Организация);
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	
	Если ТаблицаЭтапыОплаты.Количество() = 0 Тогда
		ДатаПлатежа = '00010101';
	ИначеЕсли ТаблицаЭтапыОплаты.Количество() = 1 Тогда
		ДатаПлатежа = ТаблицаЭтапыОплаты[0].ДатаПлатежа;
	Иначе
		ДатаПлатежа = ТаблицаЭтапыОплаты[ТаблицаЭтапыОплаты.Количество()-1].ДатаПлатежа;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПлатежа) Тогда
		СтруктураДанныхЗаголовок = Новый Структура;
		НадписьСрокДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Счет действителен до %1.'"), Формат(ДатаПлатежа, "ДЛФ=D")) + " ";
		СтруктураДанныхЗаголовок.Вставить("СрокДействия", НадписьСрокДействия);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхЗаголовок);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если ДанныеПечати.ПлатежЗаРубеж Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияРеквизитыБанка");
		СтруктураДанныхШапки = Новый Структура;
		ПредставлениеПоставщикаДляПлатПоручения = "";
		
		Если ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
			СтруктураДанныхШапки.Вставить("СчетБанкаПолучателяПредставление", ДанныеПечати.НомерБанковскогоСчета);
			СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", ДанныеПечати.НаименованиеБанка);
			СтруктураДанныхШапки.Вставить("АдресБанкаПолучателяПредставление", ДанныеПечати.АдресБанка);
			СтруктураДанныхШапки.Вставить("СВИФТБанка", ДанныеПечати.СВИФТБанка);
			ПредставлениеПоставщикаДляПлатПоручения = ДанныеПечати.БанковскийСчетТекстКорреспондента;
		КонецЕсли;
		
		Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда
			ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		КонецЕсли;
		СтруктураДанныхШапки.Вставить("ПредставлениеПоставщикаДляПлатПоручения", ПредставлениеПоставщикаДляПлатПоручения);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если Не ПустаяСтрока(ДанныеПечати.НаименованиеБанкаДляРасчетов) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияРеквизитыБанкаКорреспондента");
			
			СтруктураДанныхШапки.Очистить();
			СтруктураДанныхШапки.Вставить("БанкКорреспондентПолучателяПредставление",
				ДанныеПечати.НаименованиеБанкаДляРасчетов + " " + ДанныеПечати.АдресБанкаДляРасчетов);
			СтруктураДанныхШапки.Вставить("СВИФТБанкаДляРасчетов", ДанныеПечати.СВИФТБанкаДляРасчетов);
			СтруктураДанныхШапки.Вставить("СчетБанкаДляРасчетовПредставление", ДанныеПечати.СчетВБанкеДляРасчетов);
			
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияНазначениеПлатежа");
		СтруктураДанныхШапки.Очистить();
		Если Не ЗначениеЗаполнено(ДанныеПечати.НазначениеПлатежа)
			И ТипЗнч(ДанныеПечати.Ссылка) <> Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
			СтруктураДанныхШапки.Вставить("НазначениеПлатежа", Документы.СчетНаОплатуКлиенту.СформироватьНазначениеПлатежа(
				ДанныеПечати.Номер, ДанныеПечати.Ссылка));
		Иначе
			СтруктураДанныхШапки.Вставить("НазначениеПлатежа", ДанныеПечати.НазначениеПлатежа);
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	Иначе
	
		Если ДанныеПечати.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
			И ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияППСКодом");
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("ОбразецЗаполненияПП");
		КонецЕсли;
		
		СтруктураДанныхШапки = Новый Структура;
		СтруктураДанныхШапки.Вставить("ИНН", СведенияОПоставщике.ИНН);
		СтруктураДанныхШапки.Вставить("КПП",СведенияОПоставщике.КПП);
		ПредставлениеПоставщикаДляПлатПоручения = "";
		
		СтруктураДанныхШапки.Вставить("ИдентификаторПлатежа", ДанныеПечати.ИдентификаторПлатежа);
		
		Если ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
			
			Если ЗначениеЗаполнено(ДанныеПечати.БИКБанкаДляРасчетов) Тогда
				Банк		= ДанныеПечати.НаименованиеБанкаДляРасчетов;
				БИК         = ДанныеПечати.БИКБанкаДляРасчетов;
				КоррСчет    = ДанныеПечати.КоррСчетБанкаДляРасчетов;
				ГородБанка  = ДанныеПечати.ГородБанкаДляРасчетов;
				НомерСчета  = ДанныеПечати.КоррСчетБанка;
			Иначе
				Банк		= ДанныеПечати.НаименованиеБанка;
				БИК         = ДанныеПечати.БИКБанк;
				КоррСчет    = ДанныеПечати.КоррСчетБанка;
				ГородБанка  = ДанныеПечати.ГородБанка;
				НомерСчета  = ДанныеПечати.НомерБанковскогоСчета;
			КонецЕсли;
			
			СтруктураДанныхШапки.Вставить("БИКБанкаПолучателя", БИК);
			СтруктураДанныхШапки.Вставить("БанкПолучателя", Банк);
			СтруктураДанныхШапки.Вставить("БанкПолучателяПредставление", СокрЛП(Банк) + " " + ГородБанка);
			СтруктураДанныхШапки.Вставить("СчетБанкаПолучателя", КоррСчет);
			СтруктураДанныхШапки.Вставить("СчетБанкаПолучателяПредставление", КоррСчет);
			СтруктураДанныхШапки.Вставить("СчетПолучателяПредставление", НомерСчета);
			СтруктураДанныхШапки.Вставить("СчетПолучателя", НомерСчета);
			ПредставлениеПоставщикаДляПлатПоручения = ДанныеПечати.БанковскийСчетТекстКорреспондента;
			
		КонецЕсли;
	
		Если ПустаяСтрока(ПредставлениеПоставщикаДляПлатПоручения) Тогда
			ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДанныеПечати.НазначениеПлатежа)
			И ТипЗнч(ДанныеПечати.Ссылка) <> Тип("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
			
			СтруктураДанныхШапки.Вставить("НазначениеПлатежа", Документы.СчетНаОплатуКлиенту.СформироватьНазначениеПлатежа(
				ДанныеПечати.Номер, ДанныеПечати.Ссылка));
			
		Иначе
			
			СтруктураДанныхШапки.Вставить("НазначениеПлатежа", ДанныеПечати.НазначениеПлатежа);
			
		КонецЕсли;
		
		СтруктураДанныхШапки.Вставить("ПредставлениеПоставщикаДляПлатПоручения", ПредставлениеПоставщикаДляПлатПоручения);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		
		Если ДанныеПечати.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
			И ЗначениеЗаполнено(ДанныеПечати.БанковскийСчет) Тогда
			
			РеквизитыПлатежа = РеквизитыПлатежаQRКод(СтруктураДанныхШапки);
			РеквизитыПлатежа.СуммаЧислом = СуммаКОплатеПоСчету(ДанныеПечати, ТаблицаТовары);
			
			ВывестиQRКод(РеквизитыПлатежа, ДанныеПечати, ОбластьМакета);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	Смещать = ТипСмещенияТабличногоДокумента.ПоВертикали;
	ОбластьПервойКолонкиТоваров = Макет.Область("ПерваяКолонкаТовара");
	Если НЕ ВыводитьКоды Тогда
		ОбластьПервойКолонкиТоваров.ШиринаКолонки = ОбластьПервойКолонкиТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		Макет.УдалитьОбласть(Макет.Область("КолонкаКодов"), Смещать);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	
	ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Счет на оплату'"));
	СтруктураДанныхШапки = Новый Структура;
	СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	
	СтруктураДанныхПоставщик = Новый Структура;
	СтруктураДанныхПоставщик.Вставить("ПредставлениеПоставщика", 
		ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ОрганизацияПоставщик, ДанныеПечати.Дата),
			"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	СтруктураДанныхПокупатель = Новый Структура;
	//СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя",      // begin fix Suetin 04.02.2019 14:10:34
	//	ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
	//		"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
	ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
			"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		ПредставлениеПолучателя	 = ПредставлениеПолучателя + Символы.ПС + ДанныеПечати.Договор;
	КонецЕсли;
	 СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
	// end fix Suetin 04.02.2019 14:12:35
	ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПокупатель);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если ЗначениеЗаполнено(ДанныеПечати.Грузоотправитель) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Грузоотправитель");
		СтруктураДанныхГрузоотправитель = Новый Структура;
		СтруктураДанныхГрузоотправитель.Вставить("ПредставлениеГрузоотправителя", ОписаниеОрганизации(ДанныеПечати, "Грузоотправитель"));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхГрузоотправитель);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПечати.Грузополучатель) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Грузополучатель");
		СтруктураДанныхГрузополучатель = Новый Структура;
		СтруктураДанныхГрузополучатель.Вставить("ПредставлениеГрузополучателя", ОписаниеОрганизации(ДанныеПечати, "Грузополучатель"));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхГрузополучатель);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
КонецПроцедуры
